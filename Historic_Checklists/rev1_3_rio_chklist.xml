<?xml version="1.0" encoding="UTF-8" ?>
<!-- Created from PDF via Acrobat SaveAsXML -->
<!-- Mapping Table version: 28-February-2003 -->
<TaggedPDF-doc>
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Distiller 5.0.5 (Windows)</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:CreateDate>2005-09-20T19:13:20Z</xmp:CreateDate>
         <xmp:ModifyDate>2005-09-20T19:13:20Z</xmp:ModifyDate>
         <xmp:MetadataDate>2005-09-20T19:13:20Z</xmp:MetadataDate>
         <xmp:CreatorTool>PScript5.dll Version 5.2.2</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>xml</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>ra3341</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">rio_chklst.book</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
<?xpacket end='r'?>

<Part>
<H1>RapidIO™ Interconnect Specification Device Inter-operability and Certification Checklists </H1>

<P>Rev. 1.1, 09/2005 </P>

<P>© Copyright RapidIO Trade Association </P>
<Figure>

<ImageData src="images/rev1_3_rio_chklst_img_0.jpg"/>
</Figure>

<P>RapidIO Trade Association Confidential </P>

<P>Revision History 
</P>

<Table>
<TR>
<TH>Revision </TH>

<TH>Description </TH>

<TH>Date </TH>
</TR>

<TR>
<TD>1.0 </TD>

<TD>First release </TD>

<TD>07/12/2004 </TD>
</TR>

<TR>
<TD>1.0.a </TD>

<TD>No technical changes; Converted to ISO-friendly templates </TD>

<TD>09/03/2004 </TD>
</TR>

<TR>
<TD>1.1 </TD>

<TD>Revised to support Revision 1.3 of the RapidIO specification, approved release </TD>

<TD>09/20/2005 </TD>
</TR>
</Table>

<P>NO WARRANTY.THE RAPIDIO TRADE ASSOCIATION PUBLISHES THE SPECIFICATION “AS IS”. THE RAPIDIO TRADE 
ASSOCIATION MAKES NO WARRANTY, REPRESENTATION OR COVENANT, EXPRESS OR IMPLIED, OF ANY KIND 
CONCERNING THE SPECIFICATION, INCLUDING, WITHOUT LIMITATION, NO WARRANTY OF NON INFRINGEMENT, NO 
WARRANTY OF MERCHANTABILITY AND NO WARRANTY OF FITNESS FOR A PARTICULAR PURPOSE.  USER AGREES TO 
ASSUME ALL OF THE RISKS ASSOCIATED WITH ANY USE WHATSOEVER OF THE SPECIFICATION.  WITHOUT LIMITING THE 
GENERALITY OF THE FOREGOING, USER IS RESPONSIBLE FOR SECURING ANY INTELLECTUAL PROPERTY LICENSES OR 
RIGHTS WHICH MAY BE NECESSARY TO IMPLEMENT OR BUILD PRODUCTS COMPLYING WITH OR MAKING ANY OTHER 
SUCH USE OF THE SPECIFICATION. 
</P>

<P>DISCLAIMER OF LIABILITY.  THE RAPIDIO TRADE ASSOCIATION SHALL NOT BE LIABLE OR RESPONSIBLE FOR ACTUAL, 
INDIRECT, SPECIAL, INCIDENTAL, EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, WITHOUT LIMITATION, LOST 
PROFITS) RESULTING FROM USE OR INABILITY TO USE THE SPECIFICATION, ARISING FROM ANY CAUSE OF ACTION 
WHATSOEVER, INCLUDING, WHETHER IN CONTRACT, WARRANTY, STRICT LIABILITY, OR NEGLIGENCE, EVEN IF THE 
RAPIDIO TRADE ASSOCIATION HAS BEEN NOTIFIED OF THE POSSIBILITY OF SUCH DAMAGES. 
</P>

<P>Questions regarding the RapidIO Trade Association, specifications, or membership should be forwarded to: 
Suite 325, 3925 W. Braker Lane 
Austin, TX 78759 
512-305-0070 Tel. 
512-305-0009 FAX. 
</P>

<P>RapidIO and the RapidIO logo are trademarks and service marks of the RapidIO Trade Association. All other trademarks are the property of their 
respective owners. 
</P>

<P>RapidIO Trade Association Confidential </P>

<P>Table of Contents 
</P>

<P>Chapter 1  Overview </P>

<P>1.1 Introduction............................................................................................................. 9 
</P>

<P>1.2 References............................................................................................................... 9 
</P>

<P>1.3 Definitions and Acronyms ...................................................................................... 9 
</P>

<P>Chapter 2  8/16 LP-LVDS Physical Layer Checklists </P>

<P>2.1 Introduction........................................................................................................... 11 
</P>

<P>2.2 General specification compliance list ................................................................... 12 
</P>

<P>2.3 Signal names compliance lists .............................................................................. 14 
</P>

<P>2.3.1 8-bit device compliance list .............................................................................. 14 
</P>

<P>2.3.2 16-bit device compliance list ............................................................................ 15 
</P>

<P>2.4 Basic functionality compliance list ....................................................................... 16 
</P>

<P>2.5 DC and AC electrical compliance list................................................................... 23 
</P>

<P>2.6 Link initialization compliance list ........................................................................ 24 
</P>

<P>2.7 Link maintenance compliance list ........................................................................ 25 
</P>

<P>2.8 Packet transmission compliance list ..................................................................... 26 
</P>

<P>2.9 Packet reception compliance list........................................................................... 28 
</P>

<P>2.10 Switch device specific compliance list ................................................................. 31 
</P>

<P>2.11 Flow control compliance list................................................................................. 33 
</P>

<P>2.12 Recoverable errors compliance list ....................................................................... 34 
</P>

<P>2.13 Non-recoverable errors compliance list ................................................................ 38 
</P>

<P>2.14 State machines interaction compliance list ........................................................... 39 
</P>

<P>Chapter 3 1x/4x LP-Serial Physical Layer Checklists </P>

<P>3.1 Introduction........................................................................................................... 41 
</P>

<P>3.2 General specification compliance list ................................................................... 42 
</P>

<P>3.3 Signal names compliance lists .............................................................................. 44 
</P>

<P>3.3.1 1x device compliance list.................................................................................. 44 
</P>

<P>3.3.2 4x device compliance list.................................................................................. 45 
</P>

<P>3.4 Basic functionality compliance list ....................................................................... 46 
</P>

<P>3.5 AC electrical compliance list ................................................................................ 54 
</P>

<P>3.6 Link initialization compliance list ........................................................................ 55 
</P>

<P>3.7 Link maintenance compliance list ........................................................................ 60 
</P>

<P>3.8 Packet transmission compliance list ..................................................................... 61 
</P>

<P>3.9 Packet reception compliance list........................................................................... 63 
</P>

<P>3.10 Switch device specific compliance list ................................................................. 66 
</P>

<P>3.11 Flow control compliance list................................................................................. 68 
</P>

<P>3.12 Recoverable errors compliance list ....................................................................... 69 
</P>

<P>3.13 Non-recoverable errors compliance list ................................................................ 72 
</P>

<P>Table of Contents </P>

<P>3.14 State machines interaction compliance list ........................................................... 73 
</P>

<P>3.15 Retimer and repeater compliance list.................................................................... 74 
</P>

<P>3.16 Sequence generation compliance list .................................................................... 75 
</P>

<P>Chapter 4 Common Transport Layer Checklists </P>

<P>4.1 Introduction........................................................................................................... 77 
</P>

<P>4.2 Generic functionality compliance list ................................................................... 78 
</P>

<P>4.3 Packet transmission compliance list ..................................................................... 81 
</P>

<P>4.4 Packet reception compliance list........................................................................... 82 
</P>

<P>4.5 Detectable errors compliance list.......................................................................... 83 
</P>

<P>Chapter 5 I/O Logical Layer Checklists </P>

<P>5.1 Introduction........................................................................................................... 85 
</P>

<P>5.2 Basic functionality compliance list ....................................................................... 86 
</P>

<P>5.3 Target transaction support compliance list ........................................................... 89 
</P>

<P>5.4 Source transaction support compliance list .......................................................... 90 
</P>

<P>5.5 Detectable errors compliance list.......................................................................... 91 
</P>

<P>5.6 Class 1 compliance lists ........................................................................................ 92 
</P>

<P>5.6.1 Target transaction support compliance list ....................................................... 92 
</P>

<P>5.6.2 Source transaction support compliance list ...................................................... 94 
</P>

<P>5.6.3 Detectable errors compliance list...................................................................... 95 
</P>

<P>5.7 Class 2 compliance lists ........................................................................................ 96 
</P>

<P>5.7.1 Basic functionality compliance list ................................................................... 96 
</P>

<P>5.7.2 Target transaction support compliance list ....................................................... 97 
</P>

<P>5.7.3 Source transaction support compliance list ...................................................... 98 
</P>

<P>5.7.4 Detectable errors compliance list...................................................................... 99 
</P>

<P>5.8 Class 3 compliance lists ...................................................................................... 100 
</P>

<P>5.8.1 Basic functionality compliance list ................................................................. 100 
</P>

<P>5.8.2 Target transaction support compliance list ..................................................... 101 
</P>

<P>5.8.3 Source transaction support compliance list .................................................... 102 
</P>

<P>5.8.4 Detectable errors compliance list.................................................................... 103 
</P>

<P>Chapter 6 Message Passing Logical Layer Checklists </P>

<P>6.1 Introduction......................................................................................................... 105 
</P>

<P>6.2 Basic functionality compliance list ..................................................................... 106 
</P>

<P>6.3 Message passing target transaction support compliance list .............................. 108 
</P>

<P>6.4 Message passing source transaction support compliance list ............................. 109 
</P>

<P>6.5 Message passing detectable errors compliance list............................................. 111 
</P>

<P>Table of Contents </P>

<P>Chapter 7  Logical Layer Optional Functionality Checklists </P>

<P>7.1 Introduction......................................................................................................... 113 
</P>

<P>7.2 Atomic clear compliance lists ............................................................................. 114 
</P>

<P>7.2.1 Target transaction support compliance list ..................................................... 114 
</P>

<P>7.2.2 Source transaction support compliance list .................................................... 115 
</P>

<P>7.2.3 Detectable errors compliance list.................................................................... 116 
</P>

<P>7.3 Atomic increment compliance lists..................................................................... 117 
</P>

<P>7.3.1 Target transaction support compliance list ..................................................... 117 
</P>

<P>7.3.2 Source transaction support compliance list .................................................... 118 
</P>

<P>7.3.3 Detectable errors compliance list.................................................................... 119 
</P>

<P>7.4 Atomic decrement compliance lists .................................................................... 120 
</P>

<P>7.4.1 Target transaction support compliance list ..................................................... 120 
</P>

<P>7.4.2 Source transaction support compliance list .................................................... 121 
</P>

<P>7.4.3 Detectable errors compliance list.................................................................... 122 
</P>

<P>7.5 Atomic test-and-swap compliance lists .............................................................. 123 
</P>

<P>7.5.1 Target transaction support compliance list ..................................................... 123 
</P>

<P>7.5.2 Source transaction support compliance list .................................................... 124 
</P>

<P>7.5.3 Detectable errors compliance list.................................................................... 125 
</P>

<P>7.6 Atomic swap compliance lists ............................................................................ 126 
</P>

<P>7.6.1 Target transaction support compliance list ..................................................... 126 
</P>

<P>7.6.2 Source transaction support compliance list .................................................... 127 
</P>

<P>7.6.3 Detectable errors compliance list.................................................................... 128 
</P>

<P>7.7 Atomic compare-and-swap compliance lists ...................................................... 129 
</P>

<P>7.7.1 Target transaction support compliance list ..................................................... 129 
</P>

<P>7.7.2 Source transaction support compliance list .................................................... 130 
</P>

<P>7.7.3 Detectable errors compliance list.................................................................... 131 
</P>

<P>7.8 Doorbell compliance lists ................................................................................... 132 
</P>

<P>7.8.1 Target transaction support compliance list ..................................................... 132 
</P>

<P>7.8.2 Source transaction support compliance list .................................................... 133 
</P>

<P>7.8.3 Detectable errors compliance list.................................................................... 134 
</P>

<P>7.9 Data message compliance lists ........................................................................... 135 
</P>

<P>7.9.1 Target transaction support compliance list ..................................................... 135 
</P>

<P>7.9.2 Source transaction support compliance list .................................................... 136 
</P>

<P>7.9.3 Detectable errors compliance list.................................................................... 137 
</P>

<P>Chapter 8 Multicast Checklists </P>

<P>8.1 Introduction......................................................................................................... 139 
</P>

<P>8.2 Behavioral Certification List .............................................................................. 140 
</P>

<P>8.3 Multicast Programming Model Certification Lists ............................................. 141 
</P>

<P>Table of Contents 
</P>

<P>Blank Page </P>

<P>List of Tables 
</P>

<P>2-1 General device 8/16 LP-LVDS physical layer general compliance list .........................12 
2-2 General device 8/16 LP-LVDS physical layer 8-bit symmetric device pins ..................14 
2-3 General device 8/16 LP-LVDS physical layer 16-bit symmetric device pins ................15 
2-4 General device 8/16 LP-LVDS physical layer basic functionality list ...........................16 
2-5 General device 8/16 LP-LVDS physical layer AC and DC electrical list ......................23 
2-6 General device 8/16 LP-LVDS physical layer link initialization list .............................24 
2-7 General device 8/16 LP-LVDS physical layer link maintenance list .............................25 
2-8 General device 8/16 LP-LVDS physical layer packet transmission list .........................26 
2-9 General device 8/16 LP-LVDS physical layer packet reception list ..............................28 
2-10 General device 8/16 LP-LVDS physical layer switch device specific list .....................31 
2-11 General device 8/16 LP-LVDS physical layer flow control list .....................................33 
2-12 General device 8/16 LP-LVDS physical layer recoverable errors list............................34 
2-13 General device 8/16 LP-LVDS physical layer non-recoverable errors list ....................38 
2-14 General device 8/16 LP-LVDS physical layer state machines interaction list ...............39 
3-1 General device 1x/4x LP-Serial physical layer general compliance list.........................42 
3-2 General device 1x/4x LP-Serial physical layer 1x symmetric device pins.....................44 
3-3 General device 1x/4x LP-Serial physical layer 4x symmetric device pins.....................45 
3-4 General device 1x/4x LP-Serial physical layer basic functionality list ..........................46 
3-5 General device 1x/4x LP-Serial physical layer AC electrical list ..................................54 
3-6 General device 1x/4x LP-Serial physical layer link initialization list ............................55 
3-7 General device 1x/4x LP-Serial physical layer link maintenance list ............................60 
3-8 General device 1x/4x LP-Serial physical layer packet transmission list ........................61 
3-9 General device 1x/4x LP-Serial physical layer packet reception list .............................63 
3-10 General device 1x/4x LP-Serial physical layer switch device specific list ....................66 
3-11 General device 1x/4x LP-Serial physical layer flow control list ....................................68 
3-12 General device 1x/4x LP-Serial physical layer recoverable errors list...........................69 
3-13 General device 1x/4x LP-Serial physical layer non-recoverable errors list ...................72 
3-14 General device 1x/4x LP-Serial physical layer state machines interaction list ..............73 
3-15 General device 1x/4x LP-Serial physical layer retimer and repeater 
</P>

<P>device specific list...........................................................................................................74 
3-16 General device 1x/4x LP-Serial physical layer sequence generation list .......................75 
4-1 General device common transport layer generic functionality list .................................78 
4-2 General device common transport layer packet transmission list...................................81 
4-3 General device common transport layer packet reception list ........................................82 
4-4 General device common transport layer detectable errors list ........................................83 
5-1 General device I/O logical layer basic functionality list.................................................86 
5-2 General device I/O logical layer target transaction support list......................................89 
5-3 General device I/O logical layer detectable errors list ....................................................91 
5-4 Class 1 device logical layer target transaction support list .............................................92 
5-5 Class 1 device logical layer detectable errors list ...........................................................95 
5-6 Class 2 device logical layer basic functionality list ........................................................96 
5-7 Class 2 device logical layer source transaction support list............................................98 
</P>

<P>List of Tables 
</P>

<P>5-8 Class 2 device logical layer detectable errors list ...........................................................99 
5-9 Class 3 device logical layer basic functionality list ......................................................100 
5-10 Class 3 device logical layer target transaction support list ...........................................101 
5-11 Class 3 device logical layer source transaction support list..........................................102 
5-12 Class 3 device logical layer detectable errors list .........................................................103 
6-1 General device message passing logical layer basic functionality list .........................106 
6-2 General device message passing logical layer target transaction support list ..............108 
6-3 General device message passing logical layer source transaction support list .............109 
6-4 General device message passing logical layer detectable errors list.............................111 
7-1 Atomic clear target transaction support list ..................................................................114 
7-2 Atomic clear source transaction support list .................................................................115 
7-3 Atomic clear detectable errors list ................................................................................116 
7-4 Atomic increment target transaction support list ..........................................................117 
7-5 Atomic increment source transaction support list.........................................................118 
7-6 Atomic increment detectable errors list ........................................................................119 
7-7 Atomic decrement target transaction support list .........................................................120 
7-8 Atomic decrement source transaction support list ........................................................121 
7-9 Atomic decrement detectable errors list .......................................................................122 
7-10 Atomic test-and-swap target transaction support list ....................................................123 
7-11 Atomic test-and-swap source transaction support list ..................................................124 
7-12 Atomic test-and-swap detectable errors list ..................................................................125 
7-13 Atomic swap target transaction support list..................................................................126 
7-14 Atomic swap source transaction support list ................................................................127 
7-15 Atomic swap detectable errors list ................................................................................128 
7-16 Atomic compare-and-swap target transaction support list ...........................................129 
7-17 Atomic compare-and-swap source transaction support list ..........................................130 
7-18 Atomic compare-and-swap detectable errors list..........................................................131 
7-19 Doorbell target transaction support list.........................................................................132 
7-20 Doorbell source transaction support list .......................................................................133 
7-21 Doorbell detectable errors list .......................................................................................134 
7-22 Data message target transaction support list .................................................................135 
7-23 Data message source transaction support list ...............................................................136 
7-24 Data message detectable errors list ...............................................................................137 
8-1 Multicast Packet Behavior Certification List................................................................140 
8-2 Multicast Programming Model Certification List ........................................................141 
</P>

<P>Chapter 1 Overview </P>

<Sect>
<H2>1.1 Introduction </H2>

<P>The document contains the device compliance checklists adhering to revision 1.3 of the RapidIO Interconnect Specification. If an inconsistency exists between the specifications and the checklists defined by this document, the specifications take precedence. </P>
</Sect>

<Sect>
<H2>1.2 References </H2>

<P>• RapidIOTM Interconnect Specification, Revision 1.3, 6/2005 </P>
</Sect>

<Sect>
<H2>1.3 Definitions and Acronyms </H2>

<P>The following is a list of definitions and acronyms used in the document: </P>

<P>EOP end of packet </P>

<P>SOP start of packet </P>

<P>Blank Page </P>

<P>Chapter 2  8/16 LP-LVDS Physical Layer Checklists </P>

<Sect>
<H2>2.1 Introduction </H2>

<P>This chapter contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for 8/16 LP-LVDS Physical Layer devices. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The 8/16 LP-LVDS Physical layer inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>2.2 General specification compliance list </H2>

<P>This section specifies general requirements for a compliant device. </P>

<P>Reads and writes to CSRs and CARs are referenced from RapidIO transactions received by a device. </P>

<Table>
<Caption>
<P>Table 2-1. General device 8/16 LP-LVDS physical layer general compliance list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Device assigns reserved packet fields to logic 0s. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 Part 4, Sec. 2.3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Reserved packet field contents do not affect operation of the device. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>Implementation-defined packet fields do not affect operation of the device unless the function is understood by the receiving device. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>4. </TD>

<TD>Received reserved packet field encodings do not affect operation of the device if it is not necessary for the field to be defined for the requested transaction. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>5. </TD>

<TD>A received reserved packet field encoding is regarded as an error if it is necessary for the field to be defined for the requested transaction. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>All registers are 32 bits in size, and aligned to 32 bit boundaries. </TD>

<TD>Part 1, Sec. 5 Part 2, Sec. 5 Part 3, Sec. 3 Part 4, Sec. 5 Part 6, Sec. 6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>7. </TD>

<TD>Reads to reserved CAR bits return logic 0s. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>Writes to CARs do not affect operation of the device. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>9. </TD>

<TD>Reads to implementation-defined CAR bits return the implementation defined value. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>10. </TD>

<TD>Writes to implementation-defined CAR bits do not affect operation of the device. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>11. </TD>

<TD>Reads to reserved CARs do not cause an error. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>12. </TD>

<TD>Reads to reserved CAR return logic 0s when read. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>13. </TD>

<TD>Writes to a reserved CAR do not cause an error. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>14. </TD>

<TD>Writes to reserved CARs do not affect operation of the device. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>15. </TD>

<TD>Reads to reserved CSRs and reserved Extended Features register bits return logic 0s. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2 Part 4, Sec. 5.3, Table 5-2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>16. </TD>

<TD>Writes to reserved CSRs and reserved Extended Features register bits do not affect operation of the device. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2 Part 4, Sec. 5.3, Table 5-2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>17. </TD>

<TD>Reads to reserved CSRs and reserved Extended Features registers do not cause an error. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>18. </TD>

<TD>Reads to reserved CSRs and reserved Extended Features registers return logic 0s when read. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2 Part 4, Sec. 5.3, Table 5-2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>19. </TD>

<TD>Writes to reserved CSRs and reserved Extended Features registers do not cause an error. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>20. </TD>

<TD>Writes to reserved CSRs and reserved Extended Features registers do not affect operation of the device. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2 Part 4, Sec. 5.3, Table 5-2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.3 Signal names compliance lists </H2>

<P>The defined signals must exist, although the actual names used on a particular device may vary. The actual names used must allow an unambiguous match to the names defined in the 8/16 LP-LVDS physical specification. </P>

<Sect>
<H3>2.3.1 8-bit device compliance list 2.3.2 16-bit device compliance list </H3>

<Table>
<Caption>
<P>Table 2-2. General device 8/16 LP-LVDS physical layer 8-bit symmetric device pins </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Signal name </TH>

<TH>I/O </TH>

<TH>Description </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1.</TD>

<TD> TCLK0, TCLK0 </TD>

<TD>O </TD>

<TD>Double data rate clock </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>TFRAME, TFRAME </TD>

<TD>O </TD>

<TD>Packet and control symbol delineation signal </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>TD[0-7], TD[0-7] </TD>

<TD>O </TD>

<TD>Data byte </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>RCLK0, RCLK0 </TD>

<TD>I </TD>

<TD>Double data rate clock </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>RFRAME, RFRAME </TD>

<TD>I </TD>

<TD>Packet and control symbol delineation signal </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>RD[0-7], RD[0-7] </TD>

<TD>I </TD>

<TD>Data byte </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<Caption>
<P>Table 2-3. General device 8/16 LP-LVDS physical layer 16-bit symmetric device pins </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Signal name </TH>

<TH>I/O </TH>

<TH>Description </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>TCLK0, TCLK0 </TD>

<TD>O </TD>

<TD>Double data rate clock </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>TFRAME, TFRAME </TD>

<TD>O </TD>

<TD>Packet and control symbol delineation signal </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>TD[0-7], TD[0-7] </TD>

<TD>O </TD>

<TD>Data byte </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>TCLK1, TCLK1 </TD>

<TD>O </TD>

<TD>Least significant double data rate clock </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>TD[8-15], TD[8-15] </TD>

<TD>O </TD>

<TD>Least significant data byte </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>RCLK0, RCLK0 </TD>

<TD>I </TD>

<TD>Double data rate clock </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>RFRAME, RFRAME </TD>

<TD>I </TD>

<TD>Packet and control symbol delineation signal </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>RD[0-7], RD[0-7] </TD>

<TD>I </TD>

<TD>Data byte </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>RCLK1, RCLK1 </TD>

<TD>I </TD>

<TD>Least significant double data rate clock </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>10. </TD>

<TD>RD[8-15], RD[8-15] </TD>

<TD>I </TD>

<TD>Least significant data byte </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>2.4 Basic functionality compliance list </H2>

<P>This is the list for basic functionality for the device. </P>

<Table>
<Caption>
<P>Table 2-4. General device 8/16 LP-LVDS physical layer basic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device meets target AC specifications </TD>

<TD>Part 4, Sec. 9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>16 bit ports must be able to function as 8 bit ports </TD>

<TD>Part 4, Sec. 3.7.1.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Control symbols are 16 bits followed by an inverted 16 bit copy </TD>

<TD>Part 4, Sec. 4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>The device shall handle received undefined control symbols properly </TD>

<TD>Part 4, Sec. 4.1 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: The control symbols with reserved stype field encoding shall not affect operation of the device and no error shall be reported </TD>

<TD>Part 4, Sec. 4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: The packet-control symbols with reserved sub_type field encoding shall not affect operation of the device and no error shall be reported </TD>

<TD>Part 4, Sec. 4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: The link-request control symbols with reserved cmd field encoding shall cancel packet whose transmission is in progress, but itself shall not affect operation of the device and no error shall be reported </TD>

<TD>Part 4, Sec. 4.1 Part 4, Sec. 4.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>If the CRF bit is not supported, transaction request flow A is mapped to priority 0. If the CRF bit is supported, transaction request flow A is mapped to priority 0 if CRF=0. Otherwise, if CRF=1, transaction request flow B is mapped to priority 0. </TD>

<TD>Part 7, Sec. 4.5 Part 1, Sec. 2.3 Part 4, Sec. 2.3.2 Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: Read packets are transmitted at priority level 0 </TD>

<TD>Part 7, Sec. 4.5 Part 4, Sec. 2.3.2 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5B. DETAIL: Write packets are transmitted at priority level 0 </TD>

<TD>Part 7, Sec. 4.5 Part 4, Sec. 2.3.2 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5C. DETAIL: Response packets are transmitted at priority level 1, 2, or 3 </TD>

<TD>Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>If the CRF bit is not supported, transaction request flow B is mapped to priority 1. If the CRF bit is supported, transaction request flow C is mapped to priority 1 if CRF=0. Otherwise, if CRF=1, transaction request flow D is mapped to priority 1. </TD>

<TD>Part 7, Sec. 4.5 Part 1, Sec. 2.3 Part 4, Sec. 2.3.2 Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Read packets are transmitted at priority level 1 </TD>

<TD>Part 7, Sec. 4.5 Part 4, Sec. 2.3.2 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: Write packets are transmitted at priority level 1 </TD>

<TD>Part 7, Sec. 3.2 Part 4, Sec. 2.3.2 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 6C. DETAIL: Response packets are transmitted at priority level 2 or 3 </TD>

<TD>Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>7. </TH>

<TD>If the CRF bit is not supported, transaction request flow C is mapped to priority 2. If the CRF bit is supported, transaction request flow E is mapped to priority 2 if CRF=0. Otherwise, if CRF=1, transaction request flow F is mapped to priority 2. </TD>

<TD>Part 7, Sec. 4.5 Part 1, Sec. 2.3 Part 4, Sec. 2.3.2 Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7A. DETAIL: Read packets are transmitted at priority level 2 </TD>

<TD>Part 7, Sec. 4.5 Part 4, Sec. 2.3.2 </TD>

<TD>Class 2, Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 7B. DETAIL: Write packets are transmitted at priority level 2 </TD>

<TD>Part 7, Sec. 4.5 Part 4, Sec. 2.3.2 </TD>

<TD>Class 2, Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 7C. DETAIL: Response packets are transmitted at priority level 3 </TD>

<TD>Part 4, Sec. 2.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>8. </TH>

<TD>In a processing element, a higher priority packet generated before a lower priority packet with the same source ID and destination ID is always transmitted before the lower priority packet. </TD>

<TD>Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>9. </TH>

<TD>Packets received by a processing element are processed in the order they were received </TD>

<TD>Part 4, Sec. 2.3.2 Part 4, Sec. 2.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>10. </TH>

<TD>Packets of the same priority level cannot pass each other in the same flow, with the following exception. A packet with the CRF bit set may pass another packet of the same priority in the same flow without the CRF bit set. </TD>

<TD>Part 4, Sec. 2.3.2 Part 4, Sec. 2.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>11. </TH>

<TD>At the transmitter, packets of higher priority may pass packets of a lower priority level </TD>

<TD>Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>12. </TH>

<TD>All registers in the 8/16 LP-LVDS Physical Layer Specification Extended Features data structure can be read and/or written, as per constraints specified in Part 4, Chapter 4. The Extended Features Space is located at bytes offsets 0x0100 through 0xFFFC of the device configuration space. </TD>

<TD>Part 4, Sec. 5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A. DETAIL: Port Maintenance Block Header 0 CSR is read-only, and is compliant with the following: </TD>

<TD>Part 4, Sec. 5.5.2.1 Part 4, Sec. 5.6.2.1 Part 4, Sec. 5.7.2.1 Part 6, Sec. 5.8.2.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A1. DETAIL: Port Maintenance Block Header 0 CSR has the proper Extended Features block ID in the EF_ID field. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A2. DETAIL: Port Maintenance Block Header 0 EF_PTR field reset value is implementation dependent. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B. DETAIL: Port Link Time-out Control CSR; reset value of time-out value field is 0xFFFFFF </TD>

<TD>Part 4, Sec. 5.5.2.2 Part 4, Sec. 5.6.2.2 Part 4, Sec. 5.7.2.2 Part 4, Sec. 5.8.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B1. DETAIL: Port Link Time-out Control CSR Bits 0-23 are writable, and time-out value varies with value written. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B2. DETAIL: Port Link Time-out Control CSR Bits 24-31 cannot change value from 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 12C. DETAIL: Port Response Time-out Control CSR; reset value of the time-out value field is 0xFFFFFF (end point devices only) </TD>

<TD>Part 4, Sec. 5.5.2.3 Part 4, Sec. 5.6.2.3 Part 4, Sec. 5.8.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12C1. DETAIL: Port Response Time-out Control CSR Bits 0-23 are writable, and time-out value varies with value written. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12C2. DETAIL: Port Response Time-out Control CSR Bits 24-31 cannot change value from 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D. DETAIL: Port General Control CSR; reset value is implementation dependent </TD>

<TD>Part 4, Sec. 5.5.2.4 Part 4, Sec. 5.6.2.4 Part 4, Sec. 5.7.2.3 Part 4, Sec. 5.8.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D1. DETAIL: Verify Host field accurately reflects the capabilities of the device. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D2. DETAIL: Verify Master Enable field accurately reflects the capabilities of the device. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D3. DETAIL: Verify Discovered field is set to 1 as soon as a maintenance write request is received to this register bit and if Discovered bit is 0 after reset for this device. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E. DETAIL: Port n Error and Status CSR; reset value is 0x00000001 </TD>

<TD>Part 4, Sec. 5.5.2.5 Part 4, Sec. 5.6.2.8 Part 4, Sec. 5.7.2.4 Part 4, Sec. 5.8.2.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E1. DETAIL: Verify that fields in the Port n Error and Status CSR are set on the appropriate conditions. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E2. DETAIL: Verify that the following fields are cleared by writing 1 to them: Output Retry-encountered, Output Error-encountered, Input Error-encountered, Post-write Pending, Port Error. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E3. DETAIL: Verify that the following fields do not change their values when written to: Output Retried, Output Retry-stopped, Output Error-stopped, Input Retry-stopped, Input Error-stopped, Port OK, Port Un-initialized </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F. DETAIL: Port n Control CSR is compliant with the following: </TD>

<TD>Part 4, Sec. 5.5.2.6 Part 4, Sec. 5.6.2.9 Part 4, Sec. 5.7.2.5 Part 4, Sec. 5.8.2.9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F1. DETAIL: Reset values of the following fields are implementation dependent: Output Port Width, Input Port Width, Output Port Enable, Input Port Enable (if applicable, also Multicast-event Participant and Enumeration Boundary). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F2. DETAIL: Reset value of the following fields is logic 0s: Output Port Driver Disable, Input Port Receiver Disable, Error Checking Disable (if applicable, also Re-transmit Suppression Mask). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F3. DETAIL: Reset value of the Port Type field is implementation defined. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F4. DETAIL: bits 3, 7, 10-13, 15-19, 28-30 are reserved (always logic 0s). Any bits not included in the implementation are also reserved. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 12F5. DETAIL: The following fields are read-only: Input Port Width, Output Port Width, Port Type. All other fields of the Port n Control CSR are read/write, if the implementation supports their existence. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G. DETAIL: For devices which support end point functionality with software assisted error recovery (EF_ID = 0x0002), the Port n Link Maintenance Request CSR register exists for each port at the correct offset. </TD>

<TD>Part 4, Sec. 5.6.2.5 Part 4, Sec. 5.8.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G1. DETAIL: A write to the Port n Link Maintenance Request CSR results in the correct control symbol being sent. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G2. DETAIL: A read of the Port n Link Maintenance Request CSR returns the last command sent. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G3. DETAIL: The reset value of the Port n Link Maintenance Request CSR is 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H. DETAIL: For devices which support end point functionality with software assisted error recovery (EF_ID = 0x0002), the Port n Link Maintenance Response CSR register exists for each port at the correct offset. </TD>

<TD>Part 4, Sec. 5.6.2.6 Part 4, Sec. 5.8.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H1. DETAIL: The first read of the Port n Link Maintenance Response CSR register will return the correct response for the last command sent by the Port n Link Maintenance Request CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H2. DETAIL: Subsequent reads of the Port n Link Maintenance Response CSR register have the response_valid field cleared. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H3. DETAIL: The reset value of the Port n Link Maintenance Response CSR register is 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H4. DETAIL: All bits in the Port n Link Maintenance Response CSR register are read only. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I. DETAIL: For devices which support end point functionality with software assisted error recovery (EF_ID = 0x0002), the Port n Local ackID CSR register exists for each port at the correct offset. </TD>

<TD>Part 4, Sec. 5.6.2.7 Part 4, Sec. 5.8.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I1. DETAIL: The Port n Local ackID CSR register always returns the correct value when read locally. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I2. DETAIL: Writing the Outbound_ackID field will force the retransmission of the corresponding outstanding unacknowledged packet, whose ackID=Outbound_ackID. </TD>

<TD>Part 4, Sec. 5.6.2.7 Part 4, Sec. 5.8.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 12I3. DETAIL: When read from the RapidIO port, the Port n Local ackID CSR register always returns values as if the maintenance read request had not occurred. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I4. DETAIL: The reset value of the Port n Local ackID CSR register is 0. </TD>

<TD>Part 4, Sec. 5.6.2.7 Part 4, Sec. 5.8.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I5. DETAIL: All fields of the Port n Local ackID CSR register may be written to. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I6. DETAIL: Bits 1-4, 8-15, and 24-26 are reserved (always logic 0s). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12J. DETAIL: For a general end point device that supports software assisted error recovery, in the Port n Link Maintenance Request CSRs, the reset value of the command field is logic 0’s. </TD>

<TD>Part 4, Sec. 5.6.2.5 Part 4, Sec. 5.8.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12K. DETAIL: For a general end point device that supports software assisted error recovery, the Port n Link Maintenance Response CSRs are read only and are compliant with the following: </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12K1. DETAIL: Reset values of the response_valid, ackID_status and link_status fields are logic 0s. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12L. DETAIL: For a general end point device that supports software assisted error recovery, in the Port n Local ackID CSRs the reset values of the Inbound_ackID, Outstanding_ackID and Outbound_ackID fields are logic 0s. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12M. DETAIL: Processing Elements Features CAR is read-only, and is compliant with the following: </TD>

<TD>Part 4, Sec. 5.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12M1. DETAIL: The values of Re-transmit Suppression Support and CRF Support are implementation dependent. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>13. </TH>

<TD>Device follows system initialization and exploration inter-operability procedure </TD>

<TD>Part 7, Sec. 2.2 Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13A. DETAIL: End point agent device that contain a boot ROM is initially assigned base device ID=0xFE at power-up </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13B. DETAIL: End point agent device without a boot ROM is initially assigned base device ID=0xFF at power-up </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13C. DETAIL: System host device is initially assigned a non-reserved base device ID at power-up (end point device only) </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 13D. DETAIL: Host device sets the Discovered bit at power-up </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13E. DETAIL: Agent device resets the Discovered bit at power-up </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13F. DETAIL: Host device sets the Master Enable bit at power-up (end point device only) </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 13G. DETAIL: Agent device clears the Master Enable bit at power-up (end point device only) </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13H. DETAIL: Device with switch functionality defaults route information to allow boot ROM access by system host </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13I. DETAIL: Switch device must send maintenance responses that it generates to the port that the maintenance request was received on </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>14. </TH>

<TD>A port shall time out if an acknowledgment control symbol for a packet is never received. </TD>

<TD>Part 4, Sec. 2.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 14A. DETAIL: Verify that the maximum time-out value is between 3 and 6 seconds. A reasonable test procedure should be followed for simulation environments. </TD>

<TD>Part 4, Sec. 2.4.3 Part 4, Sec. 5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>15. </TH>

<TD>A request shall time out if a response packet is never received. </TD>

<TD>Part 4, Sec. 2.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 15A. DETAIL: Verify that the maximum time-out value is between 3 and 6 seconds.   A reasonable test procedure should be followed for simulation environments. </TD>

<TD>Part 4, Sec. 2.4.3 Part 4, Sec. 5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>16. </TH>

<TD>Training symbol is correct for port operating width. </TD>

<TD>Part 4, Sec. 3.7.1.1.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>17. </TH>

<TD>CLK signal(s) “rising edge” is on the 32 bit boundary </TD>

<TD>Part 4, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>18. </TH>

<TD>CLK signal(s) toggle every clock (true free running clock) </TD>

<TD>Part 4, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>19. </TH>

<TD>TFRAME/RFRAME signal only toggles on the 32 bit boundary of their corresponding clock (TCLK/RCLK) </TD>

<TD>Part 4, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>20. </TH>

<TD>TFRAME/RFRAME signal only toggles to mark the first byte of a control symbol, the first byte of a new packet or during a training pattern transmission. </TD>

<TD>Part 4, Sec. 3.2 Part 4, Sec. 3.7.1.1.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>21. </TD>

<TD>RFRAME/TFRAME signal is associated with RCLK0/TCLK0, not RCLK1/TCLK1 </TD>

<TD>Part 4, Sec. 8.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>22. </TD>

<TD>Device responds to a throttle control symbol with a pacing idle control symbol within the specified 40 interface clocks or 80 data ticks </TD>

<TD>Part 4, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.5 DC and AC electrical compliance list </H2>

<P>This is the list for electrical compliance of parallel LP-LVDS RapidIO signals. </P>

<P>All measurements must be taken in accordance with discussions/guidance captured in Part 4, Chapter 9. All speeds quoted in Table 2-5 are clock rates. </P>

<Table>
<Caption>
<P>Table 2-5. General device 8/16 LP-LVDS physical layer AC and DC electrical list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>LP-LVDS driver signals must meet DC specifications defined in Part 4 Section 9.3 Table 9-1 </TD>

<TD>Part 4, Sec. 9.3, Table 9-1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>LP-LVDS receiver signals must meet DC specifications defined in Part 4 Section 9.3 Table 9-2 </TD>

<TD>Part 4, Sec. 9.3, Table 9-2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>LP-LVDS 250 MHz drivers must meet the AC specifications defined in Part 4 Section 9.4.2 Table 9-3. </TD>

<TD>Part 4, Sec. 9.4.2, Table 9-3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>LP-LVDS 375 MHz drivers must meet the AC specifications defined in Part 4 Section 9.4.2 Table 9-4. </TD>

<TD>Part 4, Sec. 9.4.2, Table 9-4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>LP-LVDS 500 MHz drivers must meet the AC specifications defined in Part 4 Section 9.4.2 Table 9-5. </TD>

<TD>Part 4, Sec. 9.4.2, Table 9-5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>LP-LVDS 750 MHz drivers must meet the AC specifications defined in Part 4 Section 9.4.2 Table 9-6. </TD>

<TD>Part 4, Sec. 9.4.2, Table 9-6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>LP-LVDS 1000 MHz drivers must meet the AC specifications defined in Part 4 Section 9.4.2 Table 9-7. </TD>

<TD>Part 4, Sec. 9.4.2, Table 9-7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>LP-LVDS 250 MHz receivers must meet the AC specifications defined in Part 4 Section 9.4.3 Table 9-8. </TD>

<TD>Part 4, Sec. 9.4.3, Table 9-8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>LP-LVDS 375 MHz receivers must meet the AC specifications defined in Part 4 Section 9.4.3 Table 9-9. </TD>

<TD>Part 4, Sec. 9.4.3, Table 9-9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>10. </TD>

<TD>LP-LVDS 500 MHz receivers must meet the AC specifications defined in Part 4 Section 9.4.3 Table 9-10. </TD>

<TD>Part 4, Sec. 9.4.3, Table 9-10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>11. </TD>

<TD>LP-LVDS 750 MHz receivers must meet the AC specifications defined in Part 4 Section 9.4.3 Table 9-11. </TD>

<TD>Part 4, Sec. 9.4.3, Table 9-11 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>12. </TD>

<TD>LP-LVDS 1000 MHz receivers must meet the AC specifications defined in Part 4 Section 9.4.3 Table 9-12. </TD>

<TD>Part 4, Sec. 9.4.3, Table 9-12 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.6 Link initialization compliance list </H2>

<P>This is the list for device link initialization. </P>

<Table>
<Caption>
<P>Table 2-6. General device 8/16 LP-LVDS physical layer link initialization list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device must follow the Port and Link Initialization procedure </TD>

<TD>Part 4, Sec. 3.7.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: Device port not requiring Port Initialization shall never set “Port Uninitialized” bit in its Port n Control and Status register </TD>

<TD>Part 4, Sec. 3.7.1.1.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: Device port requiring Port Initialization shall follow the Port Initialization Process </TD>

<TD>Part 4, Sec. 3.7.1.1.6 Part 4, Sec. 3.7.1.1.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: All devices shall follow Link Initialization procedure </TD>

<TD>Part 4, Sec. 3.7.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C1. DETAIL: After a port has successfully trained, it will only transmit idle control symbols until it successfully receives an idle control symbol. </TD>

<TD>Part 4, Sec. 3.7.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: Device port being in normal operation state (transmitting/receiving packets and control symbols other than idles) shall have the “Port Uninitialized” bit clear and “Port OK” bit set in its Port n Control and Status register </TD>

<TD>Part 4, Sec. 3.7.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1E. DETAIL: Device in normal operation state must respond to link-request/send-training control symbol not followed by training pattern with 256 training patterns followed by one idle control symbol, and then resume normal operation. </TD>

<TD>Part 4, Sec. 3.7.1.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1F. DETAIL: If an unsolicited training pattern (whether or not preceded by link-request/send-training control) is received on the Device input, Device must change the “Port OK” and “Port Uninitialized” bits in the Port n Error and Status CSR to 0 and 1, respectively. The port must repeatedly transmit training pattern bursts, each followed by an idle control symbol, until an idle control is received from the connected port. </TD>

<TD>Part 4, Sec. 3.7.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1G. DETAIL: Training pattern is not embedded in a packet or used to terminate a packet. </TD>

<TD>Part 4, Sec. 3.7.1.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.7 Link maintenance compliance list </H2>

<P>This is the list for link maintenance functionality. </P>

<Table>
<Caption>
<P>Table 2-7. General device 8/16 LP-LVDS physical layer link maintenance list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Link-request/input-status control symbol causes a link-response control symbol </TD>

<TD>Part 4, Sec. 2.6.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>2. </TH>

<TD>Link-response control symbol port_status field indicates input port status prior to receiving the link-request/input-status (restart-from-error) </TD>

<TD>Part 4, Sec. 2.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2A. DETAIL: Error means unrecoverable problem encountered, won’t accept any packets </TD>

<TD>Part 4, Sec. 2.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Retry-stopped means that input port is stopped due to a retry and will not accept packets until receiving a “restart-from-retry” or a “restart-from-error” control symbol </TD>

<TD>Part 4, Sec. 2.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: Error-stopped means that input port is stopped due to a transmission error and will not accept packets until receiving a “restart-from-error” control symbol </TD>

<TD>Part 4, Sec. 2.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2D. DETAIL: OK means that the input port is operating and can communicate with the connected device </TD>

<TD>Part 4, Sec. 2.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2E. DETAIL: A link-response control symbol with a reserved port_status field value shall not affect the operation of the device. </TD>

<TD>Part 4, Sec. 2.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>A device receiving a reset command in a link-request control symbol shall not perform the reset function unless it has received four reset commands in a row without any other intervening packets or control symbols, except idle control symbols. Response time for reset is implementation specific. </TD>

<TD>Part 4, Sec. 2.6.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>Link-request/input-status, link-response control symbol pair forces completion of all preceding activity </TD>

<TD>Part 4, Sec. 2.6.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: All preceding packets have generated acknowledge control symbol if applicable </TD>

<TD>Part 4, Sec. 2.6.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Returned link_status correctly indicates next expected ackID </TD>

<TD>Part 4, Sec. 2.6.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>Device doesn’t issue more than one outstanding link-request control symbol (exception in case of time-out) </TD>

<TD>Part 4, Sec. 2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: Must hold off another link-request control symbol until expected link-response control symbol is received </TD>

<TD>Part 4, Sec. 2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>Link-request/send-training control symbol causes 256 training patterns to be sent followed by at least one idle control symbol. No response time is specified. </TD>

<TD>Part 4, Sec. 2.6.1.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.8 Packet transmission compliance list </H2>

<P>This is the list for the device transmitting a packet, and applies to all devices, as all generic devices are required to generate response packets. </P>

<Table>
<Caption>
<P>Table 2-8. General device 8/16 LP-LVDS physical layer packet transmission list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device cannot issue more than 7 unacknowledged packets </TD>

<TD>Part 4, Sec. 2.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ackIDs are always issued sequentially (exception when a retry or error causes the device to back up) </TD>

<TD>Part 4, Sec. 2.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Start with ackID=0 after reset </TD>

<TD>Part 4, Sec. 5.6.2.7 Part 4, Sec. 5.8.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>Physical layer 2 reserved bits are set to logic 0s </TD>

<TD>Part 4, Sec. 2.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>A response packet for a request packet can never be transmitted before the acknowledge control symbol for the request packet </TD>

<TD>Part 4, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>Embedded CRC properly inserted </TD>

<TD>Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Don’t insert embedded CRC if packet is 80 bytes or less. </TD>

<TD>Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: Insert embedded CRC if packet is 81 bytes or more </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>7. </TH>

<TD>Packets that are not aligned to the 32-bit boundary are padded into alignment with 16 bits of logic 0 </TD>

<TD>Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7A. DETAIL: Pad data is inserted after the final CRC code for the packet. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>8. </TH>

<TD>CRC values are correctly calculated </TD>

<TD>Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8A. DETAIL: the final CRC value is the continuation of the embedded CRC and embedded CRC is included in the running calculation (applicable only for packets greater than 80 bytes) </TD>

<TD>Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8B. DETAIL: CRC values are computed according to the polynomial specified in Part 4, Section 2.4.7. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8C. DETAIL: Incorrect values in Physical Layer header fields (S-bit, AckID, rsvd) do not result in CRC errors being detected. </TD>

<TD>Part 4, Sec. 2.42 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>9. </TH>

<TD>Switch devices shall not allow data to be corrupted internal to the device without detection. </TD>

<TD>Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>10. </TH>

<TD>Packets are completed normally with a new packet (starting SOP control symbol) or EOP control symbol </TD>

<TD>Part 4, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>11. </TH>

<TD>Packets are canceled using stomp, restart-from-retry, or link-request control symbols </TD>

<TD>Part 4, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>12. </TD>

<TD>Device receiving packet-retry control symbol follows the defined retry behavior. Further discussion of this point can be found in Part 4, Sec. A.3.2. </TD>

<TD>Part 1, Sec. 2.3.2.2 Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>12A. DETAIL: Set the “Output Retry-stopped” bit to 1 in the Port n Error and Status CSR when a packet-retry control symbol is received. Further discussion of this point can be found in Part 4, Sec. A.3.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>12B. DETAIL: Stop transmission of any existing packet. (restart from retry will cancel packet). Further discussion of this point can be found in Part 4, Sec. A.3.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>12C. DETAIL: Send a restart-from-retry control symbol to the receiving device. Further discussion of this point can be found in Part 4, Sec. A.3.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>12D. DETAIL: Change the “Output Retry-stopped” bit to 0 in the Port n Error and Status CSR when the output port internal retry recovery procedure is complete. Further discussion of this point can be found in Part 4, Sec. A.3.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>12E. DETAIL: Begin re-transmitting packets from the returned expected ackID value. Further discussion of this point can be found in Part 4, Sec. A.3.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 12F. DETAIL: Retried packet must eventually be re-transmitted </TD>

<TD>Part 4, Sec. 2.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>13. </TD>

<TD>Stomp and restart-from-retry control symbols have the contents field set to all logic 0s </TD>

<TD>Part 4, Sec. 4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.9 Packet reception compliance list </H2>

<P>This is the list for the device receiving a packet. </P>

<Table>
<Caption>
<P>Table 2-9. General device 8/16 LP-LVDS physical layer packet reception list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>ackIDs are only accepted sequentially </TD>

<TD>Part 4, Sec. 2.3.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>2. </TH>

<TD>Start with ackID=0 after reset </TD>

<TD>Part 4, Sec. 5.6.2.7 Part 4, Sec. 5.8.2.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>3. </TH>

<TD>Every packet causes an acknowledge control symbol with the corresponding ackID field </TD>

<TD>Part 4, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>4. </TH>

<TD>Device must send acknowledge control symbols in same order as packets are received (ackIDs are issued sequentially) </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>5. </TH>

<TD>Device must not send a packet-accepted control symbol before the entire packet has been received and is error free (if error checking is enabled) </TD>

<TD>Part 4, Sec. 4.2.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>Physical layer 2 reserved bits do not affect operation of the device. </TD>

<TD>Part 4, Sec. 2.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>7. </TH>

<TD>Packets are considered completed normally by the receiver if they are completed with a new packet (starting SOP control symbol) or EOP control symbol </TD>

<TD>Part 4, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>8. </TH>

<TD>The contents field in stomp and restart-from-retry control symbols shall not affect operation of the device. </TD>

<TD>Part 4, Sec. 4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>9. </TH>

<TD>Device can accept embedded control symbols </TD>

<TD>Part 4, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9A. DETAIL: Packet-accepted control symbol </TD>

<TD>Part 4, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9B. DETAIL: Packet-retry control symbol </TD>

<TD>Part 4, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9C. DETAIL: Packet-not-accepted control symbol </TD>

<TD>Part 4, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9D. DETAIL: Idle control symbol </TD>

<TD>Part 4, Sec. 4.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9E. DETAIL: Throttle control symbol </TD>

<TD>Part 4, Sec. 4.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9F. DETAIL: Multicast-event control symbol </TD>

<TD>Part 4, Sec. 4.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9G. DETAIL: Link-response control symbol </TD>

<TD>Part 4, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>10. </TH>

<TD>Packets can be canceled using stomp, restart-from-retry, or link-request control symbols </TD>

<TD>Part 4, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 10A. DETAIL: Device sends packet-retry control symbol for canceled packet, except when either the “Input Retry-stopped” or “Input Error-stopped” bits are set in the Port n Error and Status CSR. </TD>

<TD>Part 4, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 10B. DETAIL: Cancellation of a packet during transmission/reception of the packet shall not result in any errors. Note: Cancellation by unexpected Restart-from-Retry results in input error recovery. This should not result in the detection of any other errors  </TD>

<TD>Part 4, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10C. DETAIL: Reception of valid packets after a packet has been cancelled, but before the Input Retry-Stopped Recovery Process has been completed, shall not result in any errors. </TD>

<TD>Part 4, Sec. 2.3.4.1 Part 4, Sec. 4.2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>11. </TH>

<TD>Device encountering a packet retry situation follows the defined retry behavior. Further discussion of this point can be found in Part 4, Sec. A.3.1. </TD>

<TD>Part 1, Sec. 2.3.2.2 Part 4, Sec. 2.3.3 Part 4, Sec. 2.3.4 Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11A. DETAIL: A packet retry situation occurs when an internal hazard or a packet is cancelled when the “Port OK” bit is set in the Port n Error and Status CSR, with the following exception. If the packet was canceled with a link-request /input-status or (optional) restart-from-retry control symbol, this is not a packet retry situation. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11B. DETAIL: Change the “Input Retry-stopped” bit to 1 in the Port n Error and Status CSR when a packet retry situation has been detected. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11C. DETAIL: Send a packet-retry control symbol with the expected ackID value. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11D. DETAIL: Device silently discards packets when the “Input Retry-stopped” bit is set in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11E. DETAIL: Device must detect control symbol errors when the “Input Retry-stopped” bit is set in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11F. DETAIL: Change the “Input Retry-stopped” bit to 0 in the Port n Error and Status CSR when a restart-from-retry or a restart-from-error (link-request/input-status) control symbol is received. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>12. </TH>

<TD>An end point processing element port shall accept an error-free packet of priority N if the port has enough space for the packet in the input buffer space of the port allocated for packets of priority N. </TD>

<TD>Part 1, Sec. 2.3.3 Part 4, Sec. 2.3.3.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 12A. DETAIL: An error free packet of priority N is rejected if insufficient buffer space exists. The receiving port sets the ‘Input Retry-stopped’ bit to 1 in the Port n Error and Status CSR. </TD>

<TD>Part 4, Sec. 2.3.3.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>13. </TD>

<TD>Accepting an input packet of a priority cannot be contingent on successfully transmitting a packet of a less than or equal priority from any of its ports. </TD>

<TD>Part 1, Sec. 2.3.3 Part 4, Sec. 2.3.3.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>14. </TD>

<TD>A generated packet-not-accepted control symbol uses a defined cause field encoding </TD>

<TD>Part 4, Sec. 4.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 14A. DETAIL: “General error”(0b111) cause is used to indicate any input error situations. </TD>

<TD>Part 4, Sec. 4.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>15. </TD>

<TD>A RapidIO device will accept packets of length up to 276 bytes. </TD>

<TD>Part 4, Sec. 2.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.10 Switch device specific compliance list </H2>

<P>This list contains specific requirements for switch devices only. </P>

<Table>
<Caption>
<P>Table 2-10. General device 8/16 LP-LVDS physical layer switch device specific list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device is compliant to packet delivery ordering rules. </TD>

<TD>Part 4, Sec. 2.3.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: A switch shall not alter the priority of a packet. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1B. DETAIL: Packet forwarding decisions made by a switch processing element shall provide a consistent output port selection which is based solely on the value of the destinationID field carried in the packet. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1C. DETAIL: A switch processing element shall not change the order of packets comprising a transaction request flow (packets with the same sourceID, the same destinationID, the same priority, the same CRF value (if supported), and ftype != 8) as the packets pass through the switch. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1D. DETAIL: A switch processing element shall not allow lower priority non-maintenance packets (ftype != 8) to pass higher priority non-maintenance packets with the same sourceID and destinationID as the packets pass through the switch. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1E. DETAIL: A switch processing element shall not allow a priority N maintenance packet (ftype = 8) to pass another maintenance packet of priority N or greater that takes the same path through the switch (same switch input port and same switch output port) and has the same CRF value, if supported. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>Device is compliant to deadlock prevention rules. </TD>

<TD>Part 4, Sec. 2.3.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2A. DETAIL: A RapidIO fabric shall be dependency cycle free for all operations that do not require a response. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: A switch processing element port shall accept an error-free packet of priority N if there is no packet of priority greater than or equal to N that was previously received by the port and is still waiting in the switch to be forwarded. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: A switch processing element port that transmits a priority N packet that is forced to retry by the connected device shall select a packet of priority greater than N, if one is available, for transmission. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>3. </TH>

<TD>Switch device provides Multicast-event processing </TD>

<TD>Part 4, 3.7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3A. DETAIL: When a switch processing element receives a Multicast-Event control symbol, the switch shall forward the Multicast-Event by issuing a Multicast-Event control symbol from each port that is designated in the port’s CSR as a Multicast-Event output port. The maximum value of Multicast-Event forwarding delay and delay variation shall be defined in switch device specification. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: A switch port shall never forward a Multicast-Event control symbol back to the device from which it received a Multicast-Event control symbol regardless of whether the port is designated a Multicast-Event output or not. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: In the event that two or more Multicast-Event control symbols are received by a switch processing element close enough in time that more than one is present in the switch at the same time, at least one of the Multicast-Event control symbols shall be forwarded. The others may be forwarded or discarded (device dependent). </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.11  Flow control compliance list </H2>

<P>This list defines RapidIO 8/16 LP-LVDS link level flow control. </P>

<Table>
<Caption>
<P>Table 2-11. General device 8/16 LP-LVDS physical layer flow control list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Device supports receiver-controlled flow control. </TD>

<TD>Part 4, Sec. 2.3.4.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Device sends buf_status=0xF in all appropriate control symbols (packet-accepted, packet-retry, status). </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>Device supports transmitter-controlled flow control. </TD>

<TD>Part 4, Sec. 2.3.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 2A. DETAIL: Device supports flow control mode negotiation procedure. </TD>

<TD>Part 4, Sec. 2.3.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 2A1. DETAIL: If device supports transmitter-controlled flow control and detects that its link partner also supports transmitter-controlled flow control, it shall use transmitter-controlled flow control. Otherwise, it shall use receiver-controlled flow control. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 2B. DETAIL: Device sends the number of maximum length packet buffers currently available for packet reception (or 0xE in case this number is greater than 0xE) in buf_status field in appropriate control symbols (packet-accepted, packet-retry, status). A port may report a smaller number of buffers than it actually has available, but it shall not report a greater number. </TD>

<TD>Part 4, Sec. 2.3.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>When using transmitter-controlled flow control, a packet for which the receiver has indicated that it has buffers is never retried for reason of lack of resources in accordance with buffer prioritization rules. </TD>

<TD>Part 4, Sec. 2.3.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.12 Recoverable errors compliance list </H2>

<P>Recoverable errors are typically transmission errors or physical layer protocol violation errors and the recovery algorithm can be used to maintain communications on the link without losing any data. A compliant device must recover from a single error. Recovery from an error during the recovery from a prior error is application specific. Error detection can only be accomplished by the receiver of a packet or control symbol, never the sender. </P>

<Table>
<Caption>
<P>Table 2-12. General device 8/16 LP-LVDS physical layer recoverable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device detects the link Input errors </TD>

<TD>Part 4, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A DETAIL: Requested training pattern is embedded in a packet or used to terminate a packet </TD>

<TD>Part 4, Sec. 3.7.1.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B DETAIL: S bit parity failure </TD>

<TD>Part 4, Sec. 2.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C DETAIL: Incorrect CRC for a packet </TD>

<TD>Part 4, Sec. 2.4.2 Part 4, Sec. 2.4.6 Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C1. DETAIL: CRC is checked against the polynomial specified in Part 4, Sec. 2.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C2. DETAIL: CRC errors are detected at the 80 byte embedded CRC. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C3. DETAIL: Corruption of the ackID, S, S, or rsrv fields, all resident in the first 16 bits of the packet header, shall not result in a CRC error being detected. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C4. DETAIL: For purposes of computing the CRC value, the ackID, S, S, and rsrv fields, all resident in the first 16 bits of the packet header, shall be treated as logic 0s. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D DETAIL: Unexpected ackID value in a packet </TD>

<TD>Part 4, Sec. 2.4.5.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D1. DETAIL: Device shall detect unexpected ackID error for a canceled packet (i.e. enter input error recovery instead of input retry recovery). Further discussion of this point can be found in Part 4, Sec. A. </TD>

<TD>Part 4, Sec. 2.4.5.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1E DETAIL: Received Packet exceeds the 276 byte maximum packet size limit </TD>

<TD>Part 4, Sec. 2.4.5.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1F DETAIL: Received corrupt control symbol </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1G DETAIL: Did not receive idle control symbol following requested maintenance training </TD>

<TD>Part 4, Sec. 3.7.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1H DETAIL: Framing signal toggles at an illegal time </TD>

<TD>Part 4, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>Device encounters link Input errors as defined in point 1 above. </TD>

<TD>Part 4, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2A. DETAIL: Change the “Input Error-stopped” bit to 1 in the Port n Error and Status CSR. Further discussion of this point can be found in Part 4, Sec. A.4.1. </TD>

<TD>Part 4, Sec. 2.4.5.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>3. </TH>

<TD>If the Re-transmit Suppression Support bit is set (bit 25 of the Processing Elements Features CAR), suppression of error recovery on packet CRC errors is supported. </TD>

<TD>Part 4, Sec. 2.4.5.1.1 Part 4, Sec. 5.4.1 Part 4, Sec. 5.5.2.6 Part 4, Sec. 5.6.2.9 Part 4, Sec. 5.7.2.5 Part 4, Sec. 5.8.2.9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3A. DETAIL: The Re-transmit Suppression Mask field is only valid if bit 25 of the Processing Elements Features CAR is set. Otherwise, this field acts as reserved bits. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3B. DETAIL: Error recovery suppression is disabled if the entire Re-transmit Suppression Mask field is set to 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3C. DETAIL: Packets of a specific flow may have their re-transmission suppressed if the corresponding bit of the Re-transmit Suppression Mask is set in the Port n Control CSR, as defined in the version 1.3 RapidIO specification. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>When the “Input Error-stopped” bit is set in the Port n Error and Status register, the port must follow the input error-recovery procedure </TD>

<TD>Part 4, Sec. 2.4.5.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: Send a packet-not-accepted control symbol to the sending device. Further discussion of this point can be found in Part 4, Sec. A.4.1. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Device silently discards all packets until a restart-from-error (link-request/input-status) control symbol is encountered. Further discussion of this point can be found in Part 4, Sec. A.4.1. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: Change “Input Error-stopped” bit to 0 in the Port n Error and Status CSR. Further discussion of this point can be found in Part 4, Sec. A.4.1. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>Device detects Output link errors </TD>

<TD>Part 4, Sec. 2.4.5.1.2 Part 4, Sec. 2.4.5.1.4 Part 4, Sec. 3.7.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: Received “packet-not-accepted” control symbol </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5B. DETAIL: Acknowledge control symbol time-out </TD>

<TD>Part 4, Sec. 2.4.5.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5C. DETAIL: Any acknowledge control symbol with an unexpected ackID value </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5D. DETAIL: Unexpected “packet-retry” control symbol </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5E. DETAIL: Unexpected training pattern </TD>

<TD>Part 4, Sec. 3.7.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>6. </TH>

<TD>Device encounters Output link errors as defined in point 5 above. </TD>

<TD>Part 4, Sec. 2.4.5.1.2 Part 4, Sec. 2.4.5.1.4 Part 4, Sec. 3.7.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Change the “Output Error-stopped” bit to 1 in the Port n Error and Status CSR. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>7. </TH>

<TD>While the “Output Error-stopped” bit is set in the Port n Error and Status CSR the device must follow the output error-recovery procedure. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7A. DETAIL: Device stops transmitting new packets. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7B. DETAIL: Device sends link-request/input-status (restart-from-error) control symbol if no link-request control symbol is already outstanding (must wait for previous one to complete) and waits for link-response control symbol. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7C. DETAIL: Change the “Output Error-stopped” bit to 0 in the Port n Error and Status CSR. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7D. DETAIL: Start re-transmitting at the ackID value returned with the received link-response control symbol. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>8. </TH>

<TD>When the ‘Port OK’ bit is set in the Port n Error and Status CSR, the device detects protocol violations. </TD>

<TD>Part 4, Sec. 3.7.1.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8A. DETAIL: Unsolicited packet-accepted or packet-retry acknowledge control symbol </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8B. DETAIL: Received packet-accepted control symbol before packet transmission has completed </TD>

<TD>Part 4, Sec. 4.2.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8C. DETAIL: Received link-request control symbol before sending link-response control symbol for previous link-response/input-status control symbol </TD>

<TD>Part 4, Sec. 2.6 Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8D. DETAIL: Unexpected link-response control symbol </TD>

<TD>Part 4, Sec. 2.6.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8E. DETAIL: Unexpected restart-from-retry control symbol </TD>

<TD>Part 4, Sec. 4.3 Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8F DETAIL: Unexpected stomp control symbol </TD>

<TD>Part 4, Sec. 4.3 Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8G. DETAIL: Unexpected eop control symbol </TD>

<TD>Part 4, Sec. 4.3 Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8H. DETAIL: Training pattern request occurs at illegal location </TD>

<TD>Part 4, Sec. 3.7.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>9. </TD>

<TD>Device encounters a protocol violation as defined in point 8 above. </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 9A. DETAIL: Change the “Output Error-stopped” or/and “Input Error-stopped” bits to 1 in the Port n Error and Status CSR, depending on conditions noted in items 1, 2, 4 and 5 of this table. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>10. </TD>

<TD>Any transmission error encountered during error recovery. Note: Some transmission errors cause subsequent protocol violations. The recovery algorithm can be used to recover from multiple transmission errors but that behavior is not required for compliance. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.13 Non-recoverable errors compliance list </H2>

<P>There are a relatively small number of non-recoverable errors at the physical layer. </P>

<P>Behavior of the interface is not defined for these events. </P>

<P>tha t </P>

<Table>
<Caption>
<P>Table 2-13. General device 8/16 LP-LVDS physical layer non-recoverable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Device does not respond to link-request/send-training control symbol properly. No response time is specified. A reasonable test procedure should be followed to demonstrate this behavior. </TD>

<TD>Part 4, Sec. 3.7.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Late or no response to throttle request </TD>

<TD>Part 4, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Device is attempting error recovery and ackID received in link-response control symbol does not make sense (device cannot complete recovery). Further discussion of this point can be found in Part 4, Sec. A.4. </TD>

<TD>Part 4, Sec. 2.4.5.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>Link-request control symbol to link-response control symbol time-out. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Part 4, Sec. 5.5.2.2 Part 4, Sec. 5.6.2.2 Part 4, Sec. 5.7.2.2 Part 4, Sec. 5.8.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>Device port receives packets before device both sent and received one idle control symbol between 256 iterations of the training pattern. </TD>

<TD>Part 4, Sec. 3.7.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>Any transmission error encountered during error recovery. Note: Some transmission errors cause subsequent protocol violations. The recovery algorithm can be used to recover from multiple transmission errors but that behavior is not required for compliance. </TD>

<TD>Table 2-12 above </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>2.14 State machines interaction compliance list </H2>

<P>There are some rules of output error, input error, output retry, input retry state </P>

<P>machine interaction. </P>

<Table>
<Caption>
<P>Table 2-14. General device 8/16 LP-LVDS physical layer state machines interaction list </P>
</Caption>

<TR>
<TD>Item no. </TD>

<TD>Compliance item </TD>

<TD>Specification reference </TD>

<TD>Device Class (Generic, 1, 2, 3) </TD>

<TD>Inter-op Item </TD>
</TR>

<TR>
<TD>1. </TD>

<TD>If an input error situation was detected while the ‘Input Retry-stopped’ bit is 1 in the Port n Error and Status CSR, device shall change the ‘Input Retry-stopped’ bit to 0 and change the ‘Input Error-stopped’ bit to 1 in the Port n Error and Status CSR. The input retry recovery procedure stops, and the input error recovery will be followed. Further discussion of this point can be found in Part 4, Sec. A.3.1 and Part 4, Sec. A.4.1. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>If an output error situation was detected while the ‘Output Retry-stopped’ bit is 1 in the Port n Error and Status CSR, device shall change the ‘Output Retry-stopped’ bit to 0 and change the ‘Output Error-stopped’ bit to 1 in the Port n Error and Status CSR. The output retry recover procedure stops, and the output error recovery procedure will be followed. Further discussion of this point can be found in Part 4, Sec. A.3.2 and Part 4, Sec. A.4.2. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Input state machines and output state machines shall work independently from each other. Further discussion of this point can be found in Part 4, Sec. A. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 3A.DETAIL: If the ‘Input Retry-Stopped’ or ‘Input Error-Stopped’ bits are set in the Port n Error and Status CSR, the device shall follow input retry/error recovery even if the condition causing the two previously mentioned bits to be changed to 1 was detected while the device was performing the output retry/error procedure. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 3B.DETAIL: If the ‘Output Retry-Stopped’ or ‘Output Error-Stopped’ bits are set in the Port n Error and Status CSR, the device shall follow output retry/error recovery even if the condition causing the two previously mentioned bits to be changed to 1 was detected while the device was performing input retry/error procedure. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 3C.DETAIL: If an input retry/error situation and an output retry/error situation are detected simultaneously, the device shall start both input and output recovery procedures. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>If device is following input error recovery, all subsequent input port errors shall not affect operation of the device. Further discussion of this point can be found in Part 4, Sec. A.4.1. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>If device is following output error recovery, all subsequent output port errors shall not affect operation of the device. Further discussion of this point can be found in Part 4, Sec. A.4.2. </TD>

<TD>Part 4, Sec. 2.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>Blank Page </P>

<P>Chapter 3 1x/4x LP-Serial Physical LayerChecklists </P>

<Sect>
<H2>3.1 Introduction </H2>

<P>This chapter contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for 1x/4x LP-Serial Physical Layer devices. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The 1x/4x LP-Serial Physical layer inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>3.2 General specification compliance list </H2>

<P>This section specifies general requirements for a compliant device. </P>

<P>Reads and writes to CSRs and CARs are referenced from RapidIO transactions received by a device. </P>

<Table>
<Caption>
<P>Table 3-1. General device 1x/4x LP-Serial physical layer general compliance list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Device assigns reserved packet fields to logic 0s. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 Part 6, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Reserved packet field contents do not affect operation of the device. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>Implementation-defined packet fields do not affect operation of the device unless the function is understood by the receiving device. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>4. </TD>

<TD>Received reserved packet field encodings do not affect operation of the device if it is not necessary for the field to be defined for the requested transaction. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>5. </TD>

<TD>A received reserved packet field encoding is regarded as an error if it is necessary for the field to be defined for the requested transaction. Applied to Physical Layer fields. </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>All registers are 32 bits in size, and aligned to 32 bit boundaries. </TD>

<TD>Part 1, Sec. 5 Part 2, Sec. 5 Part 3, Sec. 3 Part 4, Sec. 5 Part 6, Sec. 6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>7. </TD>

<TD>Reads to reserved CAR bits return logic 0s. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>Writes to CARs do not affect operation of the device. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>9. </TD>

<TD>Reads to implementation-defined CAR bits return the implementation defined value. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>10. </TD>

<TD>Writes to implementation-defined CAR bits do not affect operation of the device. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>11. </TD>

<TD>Reads to reserved CARs do not cause an error. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>12. </TD>

<TD>Reads to reserved CARs return logic 0s when read. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>13. </TD>

<TD>Writes to reserved CARs do not cause an error. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>14. </TD>

<TD>Writes to reserved CARs do not affect the operation of the device. Applied to Physical Layer CARs. Note that no Physical Layer CARs are defined in version 1.3 of the RapidIO specification. </TD>

<TD>Part 1, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>15. </TD>

<TD>Reads to reserved CSRs and reserved Extended Features register bits return logic 0s. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2, Part 6, Sec. 6.2, Table 6-1. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>16. </TD>

<TD>Writes to reserved CSRs and reserved Extended Features register bits do not affect operation of the device. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2, Part 6, Sec. 6,2, Table 6-1. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>17. </TD>

<TD>Reads to reserved CSRs and reserved Extended Features registers do not cause an error. Applied to Physical CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>18. </TD>

<TD>Reads to reserved CSRs and reserved Extended Features registers return logic 0s when read. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2, Part 6, Sec. 6, Table 6-1. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>19. </TD>

<TD>Writes to reserved CSRs and reserved Extended Features registers do not cause an error. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>20. </TD>

<TD>Writes to reserved CSRs and reserved Extended Features registers do not affect operation of the device. Applied to Physical Layer CSRs and Extended Features Space. </TD>

<TD>Part 1, Sec. 5.2, Part 6, Sec. 6.2, Table 6-1. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.3 Signal names compliance lists </H2>

<P>The defined signals must exist, although the actual names used on a particular device may vary. The actual names used must allow an unambiguous match to the names defined in the 8/16 LP-LVDS physical specification. </P>

<Sect>
<H3>3.3.1 1x device compliance list 3.3.2 4x device compliance list </H3>

<Table>
<Caption>
<P>Table 3-2. General device 1x/4x LP-Serial physical layer 1x symmetric device pins </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Signal name </TH>

<TH>I/O </TH>

<TH>Description </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>TD[0], TD[0] </TD>

<TD>O </TD>

<TD>Differential pair, lane 0 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>RD[0], RD[0] </TD>

<TD>I </TD>

<TD>Differential pair, lane 0 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<Caption>
<P>Table 3-3. General device 1x/4x LP-Serial physical layer 4x symmetric device pins </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Signal name </TH>

<TH>I/O </TH>

<TH>Description </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>TD[0], TD[0] </TD>

<TD>O </TD>

<TD>Differential pair, lane 0 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>TD[1], TD[1] </TD>

<TD>O </TD>

<TD>Differential pair, lane 1 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>TD[2], TD[2] </TD>

<TD>O </TD>

<TD>Differential pair, lane 2 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>TD[3], TD[3] </TD>

<TD>O </TD>

<TD>Differential pair, lane 3 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>RD[0], RD[0] </TD>

<TD>I </TD>

<TD>Differential pair, lane 0 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>RD[1], RD[1] </TD>

<TD>I </TD>

<TD>Differential pair, lane 1 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>RD[2], RD[2] </TD>

<TD>I </TD>

<TD>Differential pair, lane 2 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>RD[3], RD[3] </TD>

<TD>I </TD>

<TD>Differential pair, lane 3 </TD>

<TD>Part 6, Sec. 7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>3.4 Basic functionality compliance list </H2>

<P>This is the list for basic functionality for the device. </P>

<Table>
<Caption>
<P>Table 3-4. General device 1x/4x LP-Serial physical layer basic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device meets target AC specifications </TD>

<TD>Part 6, Sec. 8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>1x/4x ports must be able to function as 1x ports </TD>

<TD>Part 6, Sec. 4.5.10 Part 6, Sec. 4.7.3.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Control symbols shall follow 24-bit control symbol format. </TD>

<TD>Part 6, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3A. DETAIL: CRC for the symbols shall be properly calculated and placed into a crc field. </TD>

<TD>Part 6, Sec. 3.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>Undefined control symbols (those having a reserved or undefined value in the stype0, stype1, or cmd field) do not affect operation of the device. Note that cmd field values of 1-7 are reserved for Start-of-packet, Stomp, End-of-Packet, Restart-from-Retry and Multicast Event. If only one part of the symbol (stype0, stype1 or cmd) is undefined then it shall not affect operation of the device and the other part shall be processed. </TD>

<TD>Part 6, Sec.3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: The link-request control symbols with reserved cmd field encoding shall cancel packet whose transmission is in progress, but itself shall not affect operation of the device and no error shall be reported </TD>

<TD>Part 6, Sec. 3.5.5 Part 6, Sec. 5.11.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>If the CRF bit is not supported, transaction request flow A is mapped to priority 0. If the CRF bit is supported, transaction request flow A is mapped to priority 0 if CRF=0. Otherwise, if CRF=1, transaction request flow B is mapped to priority 0. </TD>

<TD>Part 7, Sec. 4.5 Part 1, Sec. 2.3 Part 6, Sec. 5.4.3 Part 6, Sec. 5.9 Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: Request packets are transmitted at priority level 0 </TD>

<TD>Part 7, Sec. 4.5 Part 6, Sec. 5.4.3 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5B. DETAIL: Response packets are transmitted at priority level 1, 2, or 3 </TD>

<TD>Part 6, Sec. 5.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>If the CRF bit is not supported, transaction request flow B is mapped to priority 1. If the CRF bit is supported, transaction request flow C is mapped to priority 1 if CRF=0. Otherwise, if CRF=1, transaction request flow D is mapped to priority 1. </TD>

<TD>Part 7, Sec. 4.5 Part 1, Sec. 2.3 Part 6, Sec. 5.4.3 Part 6, Sec. 5.9 Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Request packets are transmitted at priority level 1 </TD>

<TD>Part 7, Sec. 4.5 Part 6, Sec. 5.4.3 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: Response packets are transmitted at priority level 2, or 3 </TD>

<TD>Part 6, Sec. 5.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>7. </TH>

<TD>If the CRF bit is not supported, transaction request flow C is mapped to priority 2. If the CRF bit is supported, transaction request flow E is mapped to priority 2 if CRF=0. Otherwise, if CRF=1, transaction request flow F is mapped to priority 2. </TD>

<TD>Part 7, Sec. 4.5 Part 1, Sec. 2.3 Part 6, Sec. 5.4.3 Part 6, Sec. 5.9 Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7A. DETAIL: Request packets are transmitted at priority level 2 </TD>

<TD>Part 7, Sec. 4.5 Part 6, Sec. 5.4.3 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 7B. DETAIL: Response packets are transmitted at priority level 3 </TD>

<TD>Part 6, Sec. 5.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>8. </TH>

<TD>In a processing element, a higher priority packet generated before a lower priority packet with the same source ID and destination ID is always transmitted before the lower priority packet. </TD>

<TD>Part 6, Sec. 5.9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>9. </TH>

<TD>Packets received by a processing element are processed in the order they were received. </TD>

<TD>Part 6, Sec. 5.9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>10. </TH>

<TD>Packets with the same priority level and CRF bit setting cannot pass each other.  Packets with the CRF bit set at a given priority are allowed to pass packets with the CRF bit clear at the same priority. </TD>

<TD>Part 6, Sec. 5.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>11. </TH>

<TD>At the transmitter, packets of higher priority may pass packets of a lower priority level. </TD>

<TD>Part 6, Sec. 5.4.3 Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>12. </TH>

<TD>All registers in the 1x/4x/LP-Serial Physical Layer Specification Extended Features data structure can be read and/or written, as per constraints specified in Part 6, Chapter 6. The Extended Features Space is located at bytes offsets 0x0100 through 0xFFFC of the device configuration space. </TD>

<TD>Part 6, Sec. 6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A. DETAIL: Port Maintenance Block Header CSR is read-only, and is compliant with the following: </TD>

<TD>Part 6, Sec. 6.5.2.1 Part 6, Sec. 6.6.2.1 Part 6, Sec. 6.7.2.1 Part 6, Sec. 6.8.2.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A1. DETAIL: Port Maintenance Block Header CSR has the proper Extended Features block ID in the EF_ID field. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A2. DETAIL: Port Maintenance Block Header EF_PTR field reset value is implementation dependant. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B. DETAIL: Port Link Time-out Control CSR; reset value of time-out value field is 0xFFFFFF </TD>

<TD>Part 6, Sec. 6.5.2.2 Part 6, Sec. 6.6.2.2 Part 6, Sec. 6.7.2.2 Part 6, Sec. 6.8.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B1. DETAIL: Port Link Time-out Control CSR Bits 0-23 are writable, and time-out value varies with value written. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B2. DETAIL: Port Link Time-out Control CSR Bits 24-31 cannot change value from 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 12C. DETAIL: Port Response Time-out Control CSR; reset value of the time-out value field is 0xFFFFFF (end point devices only) </TD>

<TD>Part 6, Sec. 6.5.2.3 Part 6, Sec. 6.6.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12C1. DETAIL: Port Response Time-out Control CSR Bits 0-23 are writable, and time-out value varies with value written. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12C2. DETAIL: Port Response Time-out Control CSR Bits 24-31 cannot change value from 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D. DETAIL: Port General Control CSR; reset value is implementation dependant </TD>

<TD>Part 6, Sec. 6.5.2.4 Part 6, Sec. 6.6.2.4 Part 6, Sec. 6.7.2.3 Part 6, Sec. 6.8.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D1. DETAIL: Verify Host field accurately reflects the capabilities of the device. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D2. DETAIL: Verify Master Enable field accurately reflects the capabilities of the device. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D3. DETAIL: Verify Discovered field is set to 1 as soon as a maintenance write request is received to this register bit and if Discovered bit is 0 after reset for this device. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E. DETAIL: Port n Error and Status CSR; reset value is 0x00000001 </TD>

<TD>Part 6, Sec. 6.5.2.5 Part 6, Sec. 6.6.2.8 Part 6, Sec. 6.7.2.4 Part 6, Sec. 6.8.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E1. DETAIL: Verify that fields in the Port n Error and Status CSR are set on the appropriate conditions. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E2. DETAIL: Verify that the following fields are cleared by writing 1 to them: Output Retry-encountered, Output Error-encountered, Input Error-encountered, Post-write Pending, Port Error. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E3. DETAIL: Verify that the following fields do not change their values when written to: Output Retried, Output Retry-stopped, Output Error-stopped, Input Retry-stopped, Input Error-stopped, Port OK, Port Un-initialized </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F. DETAIL: Port n Control CSR is compliant with the following: </TD>

<TD>Part 6, Sec. 6.5.2.6 Part 6, Sec. 6.6.2.9 Part 6, Sec. 6.7.2.5 Part 6, Sec. 6.8.2.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F1. DETAIL: Reset value of the following fields is implementation dependant: Port Width, Initialized Port Width, Output Port Enable, Input Port Enable (if applicable, also Multicast Event Participant, Enumeration Boundary). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F2. DETAIL: Reset value of the following fields is logic 0s: Port Width Override, Port Disable, Error Checking Disable (if applicable, also Re-transmit Suppression Mask). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F3. DETAIL: Reset value of the Port Type field is implementation defined. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F4. DETAIL: bits 13, 15-19, 28-30 are reserved (always logic 0s). Any bits not included in the implementation are also reserved. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 12F5. DETAIL: The following fields are read-only: Port Width, Initialized Port Width, Port Type. All other fields of the Port n Control CSR are read/write, if the implementation supports their existence. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F6. DETAIL: A software write to the Port Width Override bits will cause a port to re-initialize. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G. DETAIL: For devices which support end point functionality with software assisted error recovery (EF_ID = 0x0002), the Port n Link Maintenance Request CSR register exists for each port at the correct offset. </TD>

<TD>Part 6, Sec. 6.6.2.5 Part 6, Sec. 6.8.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G1. DETAIL: A write to the Port n Link Maintenance Request CSR results in the correct control symbol being sent. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G2. DETAIL: A read of the Port n Link Maintenance Request CSR returns the last command sent. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12G3. DETAIL: The reset value of the Port n Link Maintenance Request CSR is 0. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H. DETAIL: For devices which support end point functionality with software assisted error recovery (EF_ID = 0x0002), the Port n Link Maintenance Response CSR register exists for each port at the correct offset. </TD>

<TD>Part 6, Sec. 6.6.2.6 Part 6, Sec. 6.8.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H1. DETAIL: The first read of the Port n Link Maintenance Response CSR register will return the correct response for the last command sent by the Port n Link Maintenance Request CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H2. DETAIL: Subsequent reads of the Port n Link Maintenance Response CSR register have the response_valid field cleared. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H3. DETAIL: The reset value of the Port n Link Maintenance Response CSR register is 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12H4. DETAIL: All bits in the Port n Link Maintenance Response CSR register are read only. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I. DETAIL: For devices which support end point functionality with software assisted error recovery (EF_ID = 0x0002), the Port n Local ackID CSR register exists for each port at the correct offset. </TD>

<TD>Part 6, Sec. 6.6.2.7 Part 6, Sec. 6.8.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I1. DETAIL: The Port n Local ackID CSR register always returns the correct value when read locally. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 12I2. DETAIL: Writing the Outbound_ackID field will force the retransmission of the corresponding outstanding unacknowledged packet, whose ackID=Outbound_ackID. </TD>

<TD>Part 6, Sec. 6.6.2.7 Part 6, Sec. 6.8.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I3. DETAIL: When read from the RapidIO port, the Port n Local ackID CSR register always returns values as if the maintenance read request had not occurred. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I4. DETAIL: The reset value of the Port n Local ackID CSR register is 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I5. DETAIL: All fields of the Port n Local ackID CSR registers may be written to. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12I6. DETAIL: Bits 1-4, 8-15, and 24-26 are reserved (always logic 0s). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12J. DETAIL: For a general end point device that supports software assisted error recovery, in the Port n Link Maintenance Request CSRs, the reset value of the command field is logic 0’s. </TD>

<TD>Part 6, Sec. 6.6.2.5 Part 6, Sec. 6.8.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12K. DETAIL: For a general end point device that supports software assisted error recovery, the Port n Link Maintenance Response CSRs are read only and are compliant with the following: </TD>

<TD>Part 6, Sec. 6.6.2.6 Part 6, Sec. 6.8.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12K1. DETAIL: Reset values of the response_valid, ackID_status and link_status fields are logic 0s. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12L. DETAIL: For a general end point device that supports software assisted error recovery, in the Port n Local ackID CSRs the reset values of the all fields are logic 0s. </TD>

<TD>Part 6, Sec. 6.6.2.7 Part 6, Sec. 6.8.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12M. DETAIL: Processing Elements Features CAR is read-only, and is compliant with the following: </TD>

<TD>Part 6, Sec. 6.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12M1. DETAIL: The values of Re-transmit Suppression Support and CRF Support are implementation dependent. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>13. </TH>

<TD>Device follows system initialization and exploration inter-operability procedure </TD>

<TD>Part 7, Sec. 2.2 Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13A. DETAIL: End point agent device that contain a boot ROM is initially assigned base device ID=0xFE at power-up </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13B. DETAIL: End point agent device without a boot ROM is initially assigned base device ID=0xFF at power-up </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13C. DETAIL: System host device is initially assigned a non-reserved base device ID at power-up (end point device only) </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 13D. DETAIL: Host device sets the Discovered bit at power-up </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13E. DETAIL: Agent device resets the Discovered bit at power-up </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13F. DETAIL: Host device sets the Master Enable bit at power-up (end point device only) </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Class 2,3 </TD>

<TD/>
</TR>

<TR>
<TD>• 13G. DETAIL: Agent device resets the Master Enable bit at power-up (end point device only) </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13H. DETAIL: Device with switch functionality defaults route information to allow boot ROM access by system host </TD>

<TD>Part 7, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 13I. DETAIL: Switch device must send maintenance responses that it generates to the port that the maintenance request was received on </TD>

<TD>Part 7, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>14. </TH>

<TD>A port shall time out if an acknowledgement control symbol for a packet is never received. </TD>

<TD>Part 6, Sec. 5.11.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 14A. DETAIL: Verify that the maximum time-out value is between 3 and 6 seconds. A reasonable test procedure should be followed for simulation environments. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>15. </TH>

<TD>A request shall time out if a response packet is never received. </TD>

<TD>Part 6, Sec. 5.11.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 15A. DETAIL: Verify that the maximum time-out value is between 3 and 6 seconds.   A reasonable test procedure should be followed for simulation environments. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>16. </TH>

<TD>The pattern for comma detection during lane synchronization establishment shall be 0011111010/1100000101. </TD>

<TD>Part 6, Sec. 4.5.7.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>17. </TH>

<TD>Device follows 8B/10B encoding rules. </TD>

<TD>Part 6, Sec. 4.5.3 Part 6, Sec. 4.5.4 Part 6, Sec. 4.5.6, Table 4-1, Part 6, Sec. 4.5.6, Table 4-2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 17A. DETAIL: Selection of code group for a given data value is dependent upon the data value and the running disparity of the code-group that has just been generated by the encoder. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 17B. DETAIL: Selection of code groups is restricted to code groups captured in Part 6, Tables 4-1 and 4-2. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 17C. DETAIL: After each character is encoded, the resulting code-group shall be used by the encoder to update the running disparity. </TD>

<TD>Part 6, Sec. 4.5.3 Part 6, Sec. 4.5.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>18. </TH>

<TD>Device follows 8B/10B decoding rules. </TD>

<TD>Part 6, Sec. 4.5.3, Part 6, Sec. 4.5.6, Part 6, Table 4-1, Part 6, Table 4-2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 18A. DETAIL: Decoding of a code-group into a data/special character is dependent on the code-group and the running disparity of the received code-group that has just been decoded by the decoder. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 18B. DETAIL: Decoding of code groups is restricted to code groups captured in Part 6, Tables 4-1 and 4-2. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 18C. DETAIL: If a code-group can’t be decoded to a defined data/special character, the code-group is decoded to a character that is flagged in some manner as invalid. </TD>

<TD>Part 6, Sec. 4.5.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 18D. DETAIL: After each code-group is decoded, the decoded code-group shall be used by the decoder to update the decoder running disparity. </TD>

<TD>Part 6, Sec. 4.5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>19. </TH>

<TD>A 1x/4x port operating in 1x mode shall transmit identical character streams of delimited control symbols and packets (as well as generated idle sequence) over both lane 0 and lane 2 until such time as either lane 0 or lane 2 has been selected as the 1x lane to be received on by the initialization state machine. </TD>

<TD>Part 6, Sec. 4.5.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>20. </TH>

<TD>A 1x/4x port operating in 1x mode must be able to allow the link partner to disable the unused lane (the lane not selected by the initialization state machine). The link partner may or may not elect to disable this lane. </TD>

<TD>Part 6, Sec. 4.5.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>21. </TH>

<TD>A 1x LP-Serial port (or a 1x/4x port operating in 1x mode) shall encode and transmit the character stream of delimited control symbols and packets received from the upper layers over the link in the order the characters were received from the upper layers. </TD>

<TD>Part 6, Sec. 4.5.10 Part 6, Sec.6.8.2.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>22. </TH>

<TD>A 1x/4x port operating in 1x mode shall, on reception, select the code-group stream from either lane 0 or 2 according to the state of the 1x/4x_initialization state machine. </TD>

<TD>Part 6, Sec. 4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>23. </TH>

<TD>A 1x/4x port operating in 4x mode shall follow the following transmission/reception rules: </TD>

<TD>Part 6, Sec. 4.5.11 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 23A. DETAIL: On transmission the port shall stripe the character stream of delimited control symbols and packets across the four lanes before 8B/10B encoding beginning with lane 0. After striping, each of the 4 streams of characters shall be independently 8B/10B encoded and transmitted. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 23B. DETAIL: When neither delimited control symbols nor packets are available from the upper layers for transmission, the 4x idle sequence shall be transmitted. This can be achieved by feeding the 1x idle sequence in parallel to the inputs of the encoders for all four lanes for encoding and transmission on the four lanes. The 1x sequence is not striped across the four lanes. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 23C. DETAIL: On reception, each lane shall be 8B/10B decoded. After decoding, the four lanes shall be aligned. After alignment, the columns shall be destriped into a single character stream and passed to the upper protocol layers. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 23D. DETAIL: 8B/10B Encoding/Decoding shall be performed for each lane independently. Running disparity shall be calculated independently for each lane for transmission and reception. </TD>

<TD>Part 6, Sec. 4.5.11 Part 6, Sec. 4.5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 23E. DETAIL: The maximum lane skew that can be un-ambiguously corrected is the time it takes to transmit 7 code-groups on a lane. </TD>

<TD>Part 6, Sec. 4.5.11, Part 6, Sec. 8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>24. </TH>

<TD>On start of transmission, the transmitter shall use negative disparity. </TD>

<TD>Part 6, Sec 4.5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>25. </TH>

<TD>On start of transmission, the receive may use negative or positive disparity. </TD>

<TD>Part 6, Sec 4.5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>26. </TH>

<TD>Port follows rules for transmission bit ordering </TD>

<TD>Part 6, Sec 4.5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>27. </TH>

<TD>Port detects all single bit code group errors as defined in Part 6, Section 4.5.8, Table 4-4. </TD>

<TD>Part 6, Sec 4.5.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 27A. DETAIL: All single bit code group errors shall be treated as recoverable errors by the receiver. </TD>

<TD>Part 6, Sec 4.5.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.5 AC electrical compliance list </H2>

<P>This is the list for electrical compliance of serial RapidIO signals. </P>

<P>All measurements must be taken in accordance with discussions/guidance captured in Part 6, Chapter 8. All speeds quoted in Table 3-5 are clock rates. </P>

<Table>
<Caption>
<P>Table 3-5. General device 1x/4x LP-Serial physical layer AC electrical list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Short run transmitter 1.25 GHz baud rate signals must meet specifications defined in Part 6, Sec. 8.5, Table 8-1 </TD>

<TD>Part 6, Sec. 8.5, Table 8-1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Short run transmitter 2.5 GHz baud rate signals must meet specifications defined in Part 6, Sec. 8.5, Table 8-2 </TD>

<TD>Part 6, Sec. 8.5, Table 8-2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Short run transmitter 3.125 GHz baud rate signals must meet specifications defined in Part 6, Sec. 8.5, Table 8-3 </TD>

<TD>Part 6, Sec. 8.5, Table 8-3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>Long run transmitter 1.25 GHz baud rate signals must meet specifications defined in Part 6, Sec. 8.5, Table 8-4. </TD>

<TD>Part 6, Sec. 8.5, Table 8-4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>Long run transmitter 2.5 GHz baud rate signals must meet specifications defined in Part 6, Sec. 8.5, Table 8-5. </TD>

<TD>Part 6, Sec. 8.5, Table 8-5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>Long run transmitter 3.125 GHz baud rate signals must meet specifications defined in Part 6, Sec. 8.5, Table 8-6 </TD>

<TD>Part 6, Sec. 8.5, Table 8-6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>Transmitter Output Eye measurements must meet specifications defined in Part 6, Sec. 8.5, Table 8-7 for the various short/long run baud rates. </TD>

<TD>Part 6, Sec. 8.5, Table 8-7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>1.25 GHz receiver signals must meet specifications as defined in Part 6, Sec. 8.6, Table 8-8. </TD>

<TD>Part 6, Sec. 8.6, Table 8-8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>2.5 GHz receiver signals must meet specifications as defined in Part 6, Sec. 8.6, Table 8-9. </TD>

<TD>Part 6, Sec. 8.6, Table 8-9 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>10. </TD>

<TD>3.125 GHz receiver signals must meet specifications as defined in Part 6, Sec. 8.6, Table 8-10. </TD>

<TD>Part 6, Sec. 8.6, Table 8-10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>11. </TD>

<TD>1.25 GHz receiver signals must meet the receiver eye opening diagrammed in Part 6, Sec. 8.7, Figure 8-4 and specified in Part 6, Sec. 8.7, Table 8-11. </TD>

<TD>Part 6, Sec. 8.7, Figure 8-4 Part 6, Sec. 8.7, Table 8-11 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>12. </TD>

<TD>2.5 GHz receiver signals must meet the receiver eye opening diagrammed in Part 6, Sec. 8.7, Figure 8-4 and specified in Part 6, Sec. 8.7, Table 8-11. </TD>

<TD>Part 6, Sec. 8.7, Figure 8-4 Part 6, Sec. 8.7, Table 8-11 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>13. </TD>

<TD>3.125 GHz receiver signals must meet the receiver eye opening diagrammed in Part 6, Sec. 8.7, Figure 8-4 and specified in Part 6, Sec. 8.7, Table 8-11. </TD>

<TD>Part 6, Sec. 8.7, Sec. 8.7, Figure 8-4 Part 6, Sec. 8.7, Table 8-11 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.6 Link initialization compliance list </H2>

<P>This is the list for device link initialization. </P>

<Table>
<Caption>
<P>Table 3-6. General device 1x/4x LP-Serial physical layer link initialization list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device operating in 1X mode must follow the link synchronization procedure. </TD>

<TD>Part 6, Sec. 4.7.3.3 Part 6, Sec. 5.3.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: In the Port n Error and Status CSR, the ’Port OK’ bit will be 0 and the ’Port Uninitialized’ bit will be 1 after device reset. This is the expected visible behavior when the link is in the ‘NO_SYNC’ state of Part 6, Figure 4-9. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: After reset, for a device operating in 1X mode the Port n Error and Status CSR Port OK bit will be change to 1 and the ’Port Uninitialized’ bit will be set to 0 if 128 commas are received without an /INVALID/ code group for all lanes of a device, and 7 error-free status control symbols are received with no intervening errors. This is the expected visible behavior when the link transitions to the ‘SYNC’ state of Part 6, Figure 4-9. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: When the Port n Error and Status CSR ’Port OK’ bit is 1 and the ’Port Uninitialized’ bit is 0, the ’Port OK’ bit is changed to 0 and the ’Port Uninitialized’ bit is changed to 1 if two or more /INVALID/ code groups are detected within 255 code groups on any one lane of a device. This is the expected visible behavior when the link transitions out of the ‘SYNC’ state of Part 6, Figure 4-9. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: When the Port n Error and Status CSR ’Port OK’ bit is 0 and the ’Port Uninitialized’ bit is 1 after condition 1C is met, the ’Port OK’ bit changes to 1 and the ’Port Uninitialized’ bit is set to 0 only if 128 commas are received without an /INVALID/ code group being received, and 7 error-free status control symbols are received with no intervening errors. This is the expected visible behavior when the link transitions back to the ‘SYNC’ state of Part 6, Figure 4-9. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>2. </TH>

<TD>1x/4x device must follow the link alignment procedure. </TD>

<TD>Part 6, Sec. 4.7.3.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: After the device reset, a 1x/4x device shall have the Port n Error and Status CSR ’Port OK’ bit is 0 and the ’Port Uninitialized’ bit is 1. This is the expected visible behavior when the link transitions to the ‘NOT_ALIGNED’ state of Part 6, Figure 4-10. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: After reset, for a device operating in 1x4x mode, the Port n Error and Status CSR Port OK bit will change to 1 and the Port Uninitialized bit will be set to 0 if each lane has received 128 commas without an /INVALID/ code group, four consecutive ||A|| are achieved without an intervening alignment error, and 7 error-free status control symbols are received with no intervening errors. This is the expected visible behavior when the link transitions to the ‘ALIGNED’ state of Part 6, Figure 4-10. </TD>

<TD>Part 6, Sec. 4.7.3.4 Part 6, Sec. 5.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: A ||A|| condition is achieved even if the /A/ in each lane are skewed by up to 7 code groups. </TD>

<TD>Part 6, Sec. 4.5.11 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2D. DETAIL: For a device operating in 1x4x mode after achieving the condition of 2B, the Port n Error and Status CSR Port OK bit will change to 0 and the Port Uninitialized bit will be set to 1 if two alignment errors are received with less than four consecutive ||A|| between them, or if a lane reaches the condition described in 1C. This is the expected visible behavior when the link transitions out of the ‘ALIGNED’ state of Part 6, Figure 4-10. </TD>

<TD>Part 6, Sec. 4.7.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2E. DETAIL: After reaching the condition in 2D, the Port n Error and Status CSR Port OK bit will change to 1 and the Port Uninitialized bit will be set to 0 when all lanes reach the condition described in 2B. This is the expected visible behavior when the link transitions back to the ‘ALIGNED’ state of Part 6, Figure 4-10. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>3. </TH>

<TD>1x device must follow the following initialization procedure. </TD>

<TD>Part 6, Sec. 4.7.3.5 Part 6, Sec. 4.7.1 Part 6, Sec. 5.3.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3A. DETAIL: After reset, the link output driver is disabled for long enough to force initialization of the link partner. From item 1B, the time required to transmit two or more link symbols should be sufficient. This is the expected visible behavior when the link is in the ‘SILENT’ state of Part 6, Figure 4-11. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: After the time accounted for in 3A has passed, the link output driver is enabled and shall transmit continuous idle packets until the condition in 1B is achieved. This is the expected visible behavior when the link is in the ‘SEEK’ state of Part 6, Figure 4-11. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: After the condition in 1B is achieved, the port shall transmit the idle sequence interrupted by one status control symbol at least every 1024 transmitted code-groups until the port has received an error free status control symbol from the connected port. This is the expected visible behavior when the link enters the ‘1X_MODE’ state of Part 6, Figure 4-11. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>•  3D. DETAIL: After the port achieves the condition in 3C, the port shall transmit the idle sequence and a minimum of 15 status control symbols and shall receive an additional 6 error free status control symbols with no intervening detected errors before beginning transmission of packets and other (non-status) control symbols. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>4. </TH>

<TD>1x/4x device must follow the following initialization procedure. </TD>

<TD>Part 6, Sec. 4.7.3.6 Part 6, Sec. 4.7.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: After reset, the link output drivers are disabled for long enough to force initialization of the link partner. From item 1B, the time required to transmit two or more link symbols should be sufficient. This is the expected visible behavior when the link enters the ‘SILENT’ state of Part 6, Figure 4-12. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: After the time for step 4A has expired, the device shall enable lane 0 and lane 2 and transmit the idle sequence on both lanes. This is the expected visible behavior when the link enters the ‘SEEK’ state of Part 6, Figure 4-12. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: Once the condition in 1B is achieved for either lane 0 or lane 2, the port shall also enable lanes 1 and 3 and begin transmission of the idle sequence on all lanes. This is the expected visible behavior when the link enters the ‘DISCOVERY’ state of Part 6, Figure 4-12. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4D. DETAIL: The device shall transmit across lanes 0 through 3 in 4x mode if the condition in 3C is achieved and the device is not forced by application dependent means to work in 1x mode. This is the expected visible behavior when the link enters the ‘4X_MODE’ state of Part 6, Figure 4-12. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4E. DETAIL: The device shall transmit on lane 0 if the condition in 4C is not achieved and the condition in 1B is achieved for lane 0 and the device is not forced by application dependent means to work in 1x mode on lane 2. This is the expected visible behavior when the link enters the ‘1X_MODE_LANE0’ state of Part 6, Figure 4-12. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4F. DETAIL: The device shall transmit on lane 2 if the condition in 4C is not achieved, the condition in 1B is not achieved for lane 0 or the device is forced by application dependent means to work in 1x mode on lane 2, and the condition in 1B is achieved for lane 2 . This is the expected visible behavior when the link enters the ‘1X_MODE_LANE2’ state of Part 6, Figure 4-12. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4G. DETAIL: If the condition in 4E or 4F is achieved, the device shall disable output drivers on lanes 1 and 3. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4H. DETAIL: If the conditions in 1C occur when the device is transmitting only on port 0 or only on port 2, the port will behave as per 4A. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4I. DETAIL: If the conditions in 2D occur when the device is transmitting on all four lanes, the port will behave as per 4A. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>4. </TH>

<TD>• 4J. DETAIL: After an LP-Serial port is initialized, it shall transmit the idle sequence interrupted by one status control symbol at least every 1024 transmitted code-groups until the port has received an error free status control symbol from the connected port. </TD>

<TD>Part 6, Sec. 5.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4K. DETAIL: After an initialized LP-Serial port has received an error free status control symbol from the connected port, the port shall transmit the idle sequence and a minimum of 15 status control symbols and shall receive an additional 6 error free status control symbols with no intervening detected errors before entering the normal operational state. Once in the normal operational state, the port may begin the transmission of packets and other (non-status) control symbols. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.7 Link maintenance compliance list </H2>

<P>This is the list for link maintenance functionality. </P>

<Table>
<Caption>
<P>Table 3-7. General device 1x/4x LP-Serial physical layer link maintenance list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Link-request/input-status control symbol causes a link-response control symbol </TD>

<TD>Part 6, Sec. 5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>2. </TH>

<TD>Link-response control symbol port_status field indicates input port status prior to receiving the link-request/input-status (restart-from-error) </TD>

<TD>Part 6, Sec. 3.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2A.DETAIL: Error means unrecoverable problem encountered, won’t accept any packets </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Retry-stopped means that input port is stopped due to a retry and will not accept packets until receiving a “restart-from-retry” or a “restart-from-error” control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: Error-stopped means that input port is stopped due to a transmission error and will not accept packets until receiving a “restart-from-error” control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2D. DETAIL: OK means that the input port is operating and can communicate with the connected device </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2E. DETAIL: A link-response control symbol with a reserved port_status field value shall not affect the operation of the device. Note that this may result in a device time out waiting for a non-reserved status link response. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Link-request/reset control symbol causes the device to reset after 4 link-request/reset control symbols in a row without any intervening packets or other control symbols, except status control symbols. Response time for reset is implementation specific. </TD>

<TD>Part 6, Sec. 3.5.5.1 Part 6, Sec. 5.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>Link-request/input-status, link-response control symbol pair forces completion of all preceding activity. </TD>

<TD>Part 6, Sec. 5.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: All preceding packets have generated acknowledge control symbol if applicable </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Returned ackID_status correctly indicates next expected ackID. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>Device doesn’t issue more than one outstanding link-request control symbol. </TD>

<TD>Part 6, Sec. 5.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: Transmission of another link control symbol must be delayed until the reception of the expected link-response control symbol or time-out. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.8 Packet transmission compliance list </H2>

<P>This is the list for the device transmitting a packet, and applies to all devices, as all generic devices are required to generate response packets. </P>

<Table>
<Caption>
<P>Table 3-8. General device 1x/4x LP-Serial physical layer packet transmission list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device cannot issue more than 31 unacknowledged packets </TD>

<TD>Part 6, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ackIDs are always issued sequentially (exception when a retry or error causes the device to back up) </TD>

<TD>Part 6, Sec. 5.4.2 Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Start with ackID=0 after reset </TD>

<TD>Part 6, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>The 2 physical layer reserved bits are set to logic 0s when a request or response packet is created. </TD>

<TD>Part 6, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>A response packet for a request packet can never be transmitted before the acknowledge control symbol for the request packet </TD>

<TD>Part 6, Sec. 5.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>Embedded CRC properly inserted </TD>

<TD>Part 6, Sec. 2.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Don’t insert embedded CRC if packet is 80 bytes or less. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: Insert embedded CRC if packet is 81 bytes or more </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>7. </TH>

<TD>Packets that are not aligned to the 32-bit boundary are padded into alignment with 16 bits of logic 0 </TD>

<TD>Part 6, Sec. 2.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7A. DETAIL: Pad data is inserted after the final CRC code for the packet. </TD>

<TD>Part 6, Sec 2.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>8. </TH>

<TD>Packet CRC values are correctly calculated </TD>

<TD>Part 6, Sec. 2.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8A. DETAIL: the final CRC value is the continuation of the embedded CRC and embedded CRC is included in the running calculation (applicable only for packets greater than 80 bytes) </TD>

<TD>Part 6, Sec. 2.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8B. DETAIL: CRC values are computed according to the polynomial specified in Part 6, Section 2.4.2. </TD>

<TD>Part 6, Sec. 2.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8C. DETAIL: Incorrect values in Physical Layer header fields (AckID, bit 0 of rsvd) do not result in CRC errors being detected. </TD>

<TD>Part 6, Sec 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>9. </TH>

<TD>Switch devices shall not allow data to be corrupted internal to the device without detection. </TD>

<TD>Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>10. </TH>

<TD>Packets are completed normally with a new packet (starting SOP control symbol) or EOP control symbol </TD>

<TD>Part 6, Sec. 5.4.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>11. </TH>

<TD>Packets are canceled using stomp, restart-from-retry, or link-request control symbols </TD>

<TD>Part 6, Sec. 5.4.1.2 Part 6, Sec. 3.5.2 Part 6, Sec. 3.5.4 Part 6, Sec. 3.5.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>12. </TH>

<TD>Device receiving packet-retry control symbol follows the defined retry behavior. Further discussion of this point can be found in Part 6, Sec. A.2.2. </TD>

<TD>Part 1, Sec. 2.32.2 Part 6, Sec. 5.7.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12A. DETAIL: Change the “Output Retry-stopped” bit to 1 in the Port n Error and Status CSR when a packet-retry control symbol is received. Further discussion of this point can be found in Part 6, Sec. A.2.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12B. DETAIL: Complete transmission of current packet if applicable, don’t transmit new packets. Further discussion of this point can be found in Part 6, Sec. A.2.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12C. DETAIL: Send a restart-from-retry control symbol to the receiving device. Further discussion of this point can be found in Part 6, Sec. A.2.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12D. DETAIL: Change the “Output Retry-stopped” bit to 0 in the Port n Error and Status CSR when the output port internal retry recovery procedure is complete. Further discussion of this point can be found in Part 6, Sec. A.2.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12E. DETAIL: Begin re-transmitting packets from the returned expected ackID value. Further discussion of this point can be found in Part 6, Sec. A.2.2. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 12F. DETAIL: Retried packet must eventually be re-transmitted </TD>

<TD>Part 6, Sec. 3.4.2 Part 6, Sec. 5.7.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>13. </TH>

<TD>Control symbols are inserted only a multiple of 4 character boundary within a packet. </TD>

<TD>Part 6, Sec. 5.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>14. </TH>

<TD>/PD/ character is used to delimit a control symbol which contains packet delimiter, /SC/ is used for other control symbols </TD>

<TD>Part 6, Sec. 4.5.7.1 Part 6, Sec. 4.5.7.2 Part 6, Sec. 5.3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 14A DETAIL: Restart-from-retry and link-request may only be packet delimiters if a packet is in progress. </TD>

<TD>Part 6, Sec. 3.5.4 Part 6, Sec. 3.5.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>15. </TH>

<TD>Stype1 control symbols are transmitted using the correct format and encodings, as per Part 6 Table 3-6. </TD>

<TD>Part 6, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.9 Packet reception compliance list </H2>

<P>This is the list for the device receiving a packet or control symbol. </P>

<Table>
<Caption>
<P>Table 3-9. General device 1x/4x LP-Serial physical layer packet reception list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>ackIDs are only accepted sequentially </TD>

<TD>Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>2. </TH>

<TD>Start with ackID=0 after reset </TD>

<TD>Part 6, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>3. </TH>

<TD>Every packet causes an acknowledge control symbol with the corresponding ackID field </TD>

<TD>Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>4. </TH>

<TD>Device sends Stype0 control symbols with correct parameter0 and parameter1 values </TD>

<TD>Part 6, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: Packet Accepted control symbols contain the AckID of the packet being accepted as parameter 0, and the buf_status as parameter 1. Buf_status is encoded as per the definition in Part 6, Table 3-3. </TD>

<TD>Part 6, Sec. 3.4.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4B. DETAIL: Packet Retry control symbols contain the AckID of the packet being retried as parameter 0, and the buf_status as parameter 1. Buf_status is encoded as per the definition in Part 6, Table 3-3. </TD>

<TD>Part 6, Sec. 3.4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4C. DETAIL: Packet-Not-Accepted control symbols contain an undefined value as parameter 0. The cause for not accepting the packet is contained in parameter 1. Cause is encoded as per the definition in Part 6, Table 3-4. Buf_status is encoded as per the definition in Part 6, Table 3-3. </TD>

<TD>Part 6, Sec. 3.4.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4D. DETAIL: Status control symbols contain the ackID of the next expected packet as parameter 0, and the buf_status as parameter 1. Buf_status is encoded as per the definition in Part 6, Table 3-3. </TD>

<TD>Part 6, Sec 3.4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4E. DETAIL: Link Response symbols contain the ackID of the next expected packet as parameter 0, and the port status as parameter 1.   Port Status is encoded as per the definition in Part 6, Table 3-5. </TD>

<TD>Part 6, Sec 3.4.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4F. DETAIL: Successful reception of 32 packets results in linear progression though all possible ackID_status/packet_ackID values. ackID_status after receipt of packet n is n+1. </TD>

<TD>Part 6, Sec. 5.4.2 Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>5. </TH>

<TD>Device must send acknowledge control symbols in same order as packets are received (ackIDs are issued sequentially) </TD>

<TD>Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>Device must not send a packet-accepted control symbol before the entire packet has been received and is error free (if error checking is enabled) </TD>

<TD>Part 6, Sec. 3.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>7. </TH>

<TD>Physical layer reserved bits do not affect operation of the device. </TD>

<TD>Part 6, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>8. </TH>

<TD>Packets are considered completed normally by the receiver if they are completed with a new packet (starting SOP control symbol) or EOP control symbol. </TD>

<TD>Part 6, Sec. 5.4.1.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>9. </TH>

<TD>Device can accept embedded control symbols with any combination of the encodings of stype1 and stype0 captured in items 9A through 9G below. </TD>

<TD>Part 6, Sec. 5.3.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9A. DETAIL: STYPE1 - Multicast-event control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9B. DETAIL: STYPE 1 - NOP control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9C. DETAIL: STYPE 0 - Packet-accepted control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9D. DETAIL: STYPE 0 - Packet-retry control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9E. DETAIL: STYPE 0 - Packet-not-accepted control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9F. DETAIL: STYPE 0 - Status control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9G. DETAIL: STYPE 0 - Link-response control symbol </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 9H. DETAIL: All embedded control symbols must begin on a 4-character boundary of the packet. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>10. </TH>

<TD>Packets can be canceled using stomp, restart-from-retry, or link-request control symbols </TD>

<TD>Part 6, Sec. 5.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 10A. DETAIL: Device sends packet-retry control symbol for canceled packet, except when either the “Input Retry-stopped” or “Input Error-stopped” bits are set in the Port n Error and Status CSR. </TD>

<TD>Part 6, Sec. 5.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 10B. DETAIL: Cancellation of a packet during transmission/reception of the packet shall not result in any errors. Note: Cancellation by unexpected Restart-from-Retry results in input error recovery. This should not result in the detection of any other errors  </TD>

<TD>Part 6, Sec. 5.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10C. DETAIL: Reception of valid packets after a packet has been cancelled, but before the Input Retry-Stopped Recovery Process has been completed, shall not result in any errors. </TD>

<TD>Part 6, Sec. 5.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>11. </TH>

<TD>Device encountering a packet retry situation follows the defined retry behavior. Further discussion of this point can be found in Part 6, Sec. A.2.1. </TD>

<TD>Part 6, Sec. 5.7.2.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11A. DETAIL: Packet retry situation is an internal hazard or a packet is cancelled when the “Port OK” bit is set in the Port n Error and Status CSR, with the following exception. If the packet was canceled with a link-request/input-status control symbol or Restart-From-Retry control symbol, this is not a packet retry situation. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11B. DETAIL: Change the “Input Retry-stopped” bit to 1 in the Port n Error and Status CSR when a packet retry situation has been detected. If packet has been canceled with unexpected restart-from-retry (i.e. input port received restart-from-retry canceling the packet while the “Port OK” bit is set to 1 in the Port n Error and Status CSR), also trigger output error recovery. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11C. DETAIL: Send a packet-retry control symbol with the expected ackID value </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11D. DETAIL: Device silently discards packets when the “Input Retry-stopped” bit is set in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11E. DETAIL: Device must detect control symbol errors when the “Input Retry-stopped” bit is set in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11F. DETAIL: Change the “Input Retry-stopped” bit to 0 in the Port n Error and Status CSR when a restart-from-retry or a restart-from-error (link-request/input-status) control symbol is received </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>12. </TH>

<TD>An end point processing element port shall accept an error-free packet of priority N if the port has enough space for the packet in the input buffer space of the port allocated for packets of priority N. </TD>

<TD>Part 1, Sec. 2.3.3 Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 12A. DETAIL: An error free packet of priority N is rejected if insufficient buffer space exists. The receiving port sets the ‘Input Retry-stopped’ bit to 1 in the Port n Error and Status CSR. </TD>

<TD>Part 6, Sec. 5.7.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>13. </TH>

<TD>Accepting an input packet of a priority cannot be contingent on successfully transmitting a packet of a less than or equal priority from any of its ports. </TD>

<TD>Part 1, Sec. 2.3.3 Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>14. </TH>

<TD>A generated packet-not-accepted control symbol uses a defined cause field encoding </TD>

<TD>Part 6, Sec. 3.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 14A. DETAIL: “General error”(0b11111) cause is used to indicate any input error situations. </TD>

<TD>Part 6, Sec. 3.4.3 Part 6, Sec. 5.11.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>15. </TH>

<TD>A RapidIO device will accept packets of length up to 276 bytes. </TD>

<TD>Part 6, Sec. 2.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.10 Switch device specific compliance list </H2>

<P>This list contains specific requirements for switch devices only. </P>

<Table>
<Caption>
<P>Table 3-10. General device 1x/4x LP-Serial physical layer switch device specific list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device is compliant to packet delivery ordering rules. </TD>

<TD>Part 6, Sec. 5.9 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: A switch shall not alter the priority of a packet. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1B. DETAIL: Packet forwarding decisions made by a switch processing element shall provide a consistent output port selection which is based solely on the value of the destinationID field carried in the packet. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1C. DETAIL: A switch processing element shall not change the order of packets comprising a transaction request flow (packets with the same sourceID, the same destinationID, the same priority, the same CRF value (if supported), and ftype != 8) as the packets pass through the switch. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1D. DETAIL: A switch processing element shall not allow lower priority non-maintenance packets (ftype != 8) to pass higher priority non-maintenance packets with the same sourceID and destinationID as the packets pass through the switch. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1E. DETAIL: A switch processing element shall not allow a priority N maintenance packet (ftype = 8) to pass another maintenance packet of priority N or greater that takes the same path through the switch (same switch input port and same switch output port) and has the same CRF value, if supported. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>Device is compliant to deadlock prevention rules. </TD>

<TD>Part 6, Sec. 5.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2A. DETAIL: A RapidIO fabric shall be dependency cycle free for all operations that do not require a response. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: A switch processing element port shall accept an error-free packet of priority N if there is no packet of priority greater than or equal to N that was previously received by the port and is still waiting in the switch to be forwarded. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: A switch processing element port that transmits a priority N packet that is forced to retry by the connected device shall select a packet of priority greater than N, if one is available, for transmission. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>3. </TH>

<TD>Switch device provides Multicast-event processing </TD>

<TD>Part 6, Sec. 5.3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3A. DETAIL: When a switch processing element receives a Multicast-Event control symbol, the switch shall forward the Multicast-Event by issuing a Multicast-Event control symbol from each port that is designated in the port’s CSR as a Multicast-Event output port. The maximum value of Multicast-Event forwarding delay and delay variation shall be defined in switch device specification. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: A switch port shall never forward a Multicast-Event control symbol back to the device from which it received a Multicast-Event control symbol regardless of whether the port is designated a Multicast-Event output or not. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: In the event that two or more Multicast-Event control symbols are received by a switch processing element close enough in time that more than one is present in the switch at the same time, at least one of the Multicast-Event control symbols shall be forwarded. The others may be forwarded or discarded (device dependent). </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.11  Flow control compliance list </H2>

<P>This list defines RapidIO 1x/4x LP-Serial link level flow control. </P>

<Table>
<Caption>
<P>Table 3-11. General device 1x/4x LP-Serial physical layer flow control list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Device supports receiver-controlled flow control. </TD>

<TD>Part 6, Sec. 5.7.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Device sends buf_status=0x1F in all appropriate control symbols (packet-accepted, packet-retry, status). </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>Device supports transmitter-controlled flow control. </TD>

<TD>Part 6, Sec. 5.7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 2A. DETAIL: Device supports flow control mode negotiation procedure. </TD>

<TD>Part 6, Sec. 5.7.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 2A1. DETAIL: If device supports transmitter-controlled flow control and detects that its link partner also supports transmitter-controlled flow control, it shall use transmitter-controlled flow control. Otherwise, it shall use receiver-controlled flow control. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 2B. DETAIL: Device sends the number of maximum length packet buffers currently available for packet reception (or 0x1E in case this number is greater than 0x1E) in buf_status field in appropriate control symbols (packet-accepted, packet-retry, status). A port may report a smaller number of buffers than it actually has available, but it shall not report a greater number. </TD>

<TD>Part 6, Sec. 5.7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>When using transmitter-controlled flow control, a packet for which the receiver has indicated that it has buffers is never retried for reason of lack of resources in accordance with buffer prioritization rules. </TD>

<TD>Part 6, Sec. 5.7.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>Device shall send a control symbol containing the buf_status field to its link partner at least once every 1024 code groups after an 1x/4x LP-Serial link is initialized. </TD>

<TD>Part 6, Sec. 5.7.2 Part 6, Sec. 5.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.12 Recoverable errors compliance list </H2>

<P>Recoverable errors are typically transmission errors or physical layer protocol violation errors and the recovery algorithm can be used to maintain communications on the link without losing any data. A compliant device must recover from a single error. Recovery from an error during the recovery from a prior error is application specific. Error detection can only be accomplished by the receiver of a packet or control symbol, never the sender. </P>

<Table>
<Caption>
<P>Table 3-12. General device 1x/4x LP-Serial physical layer recoverable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Device detects the link Input errors </TD>

<TD>Part 6, Sec. 5.11.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: invalid code-group </TD>

<TD>Part 6, Sec. 5.11.2.2 Part 6, Sec. 5.10.2.3.2 Part 6, Sec. 5.11.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: valid but illegal character (non-data character inside packet or control symbol, or any valid character other than A, K, or R in an idle sequence) </TD>

<TD>Part 6, Sec. 5.11.2.2 Part 6, Sec. 5.10.2.3.2 Part 6, Sec. 5.11.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: Incorrect CRC for a packet </TD>

<TD>Part 6, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C1. DETAIL: CRC is checked against the polynomial specified in Part 6, Sec. 2.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C2. DETAIL: CRC errors are detected at the 80 byte embedded CRC. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C3. DETAIL: Corruption of the ackID field or the most significant bit in the rsvd field, both resident in the first 16 bits of the packet header, shall not result in a CRC error being detected. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C4. DETAIL: For purposes of computing the CRC value, the ackID field and the most significant bit in the rsvd field, both resident in the first 16 bits of the packet header, shall be treated as logic 0s. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: Unexpected ackID value in a packet </TD>

<TD>Part 6, Sec. 5.11.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D1. DETAIL: Device shall detect unexpected ackID error for a canceled packet (i.e. enter input error recovery instead of input retry recovery). Further discussion of this point can be found in Part 6, Sec. A. </TD>

<TD>Part 6, Sec. 5.11.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1E. DETAIL: Device shall detect reception of a packet greater than 276 bytes in length. </TD>

<TD>Part 6, Sec. 5.11.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1F. DETAIL: Incorrect CRC for a control symbol </TD>

<TD>Part 6, Sec. 5.11.2.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>Device encounters link Input errors as defined in point 1 above. </TD>

<TD>Part 6, Sec. 5.11.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2A. DETAIL: Change the “Input Error-stopped” bit to 1 in the Port n Error and Status CSR. Further discussion of this point can be found in Part 6, Sec. A.3.1. </TD>

<TD>Part 6, Sec. 5.11.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>3. </TH>

<TD>If the Re-transmit Suppression Support bit is set (bit 25 of the Processing Elements Features CAR), suppression of error recovery on packet CRC errors is supported. </TD>

<TD>Part 6, Sec. 5.11.2.4 Part 6, Sec. 6.4.1 Part 6, Sec. 6.5.2.6 Part 6, Sec. 6.5.2.6 Part 6, Sec. 6.5.2.6 Part 6, Sec. 6.5.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3A. DETAIL: The Re-transmit Suppression Mask field is only valid if bit 25 of the Processing Elements Features CAR is set. Otherwise, this field acts as reserved bits. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: Error recovery suppression is disabled if the entire Re-transmit Suppression Mask field is set to 0. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: Packets of a specific flow may have their re-transmission suppressed if the corresponding bit of the Re-transmit Suppression Mask is set in the Port n Control CSR, as defined in the version 1.3 RapidIO specification. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>When the “Input Error-stopped” bit is set in the Port n Error and Status CSR, the port must follow the input error-recovery procedure. Further discussion of this point can be found in Part 6, Sec. A.3.1. </TD>

<TD>Part 6, Sec. 5.11.2.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: Send a packet-not-accepted control symbol to the sending device </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Device silently discards all packets until a restart-from-error (link-request/input-status) control symbol is encountered </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: Change the “Input Error-stopped” bit to 0 in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>Device detects Output link errors </TD>

<TD>Part 6, Sec. 5.11.2 Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: Received “packet-not-accepted” control symbol </TD>

<TD>Part 6, Sec. 5.11.2 Part 6, Sec. 5.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5B. DETAIL: Acknowledge control symbol time-out </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5C. DETAIL: Any acknowledge control symbol with an unexpected ackID value </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5D. DETAIL: Unexpected Retry Control Symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>Device encounters Output link errors as defined in point 5 above. Further discussion of this point can be found in Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Change the “Output Error-stopped” bit to 1 in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>7. </TH>

<TD>While the “Output Error-stopped” bit is set in the Port n Error and Status CSR, the device must follow the output error-recovery procedure. Further discussion of this point can be found in Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7A.DETAIL: Device stops transmitting new packets </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7B. DETAIL: Device sends link-request/input-status (restart-from-error) control symbol if no link-request control symbol is already outstanding (must wait for previous one to complete) and waits for link-response control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7C. DETAIL: Change the “Output Error-stopped” bit to 0 in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 7D. DETAIL: Start re-transmitting at the ackID value returned with the received link-response control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>8. </TH>

<TD>When the ‘Port OK’ bit is set in the Port n Error and Status CSR, the device detects protocol violations </TD>

<TD>Part 6, Sec. 5.11.2.3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8A. DETAIL: Any acknowledge control symbol with an unexpected ackID value </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8B. DETAIL: Unsolicited (unexpected) acknowledge control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8C. DETAIL: Received link-request control symbol before sending link-response control symbol for previous link-response/input-status control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8D. DETAIL: Unexpected link-response control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8E. DETAIL: Unexpected restart-from-retry control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8F DETAIL: Unexpected stomp control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 8G. DETAIL: Unexpected eop control symbol </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>9. </TH>

<TD>Device encounters a protocol violation as defined in item 8 above. Further discussion of this point can be found in Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 5.11.2.3.1 Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 9A. DETAIL: Change the “Output Error-stopped” bit to 1 or/and “Input Error-stopped” bit to 1 in the Port n Error and Status CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>10. </TH>

<TD>Any transmission error encountered during error recovery. Note: Some transmission errors cause subsequent protocol violations. The recovery algorithm can be used to recover from multiple transmission errors but that behavior is not required for compliance. </TD>

<TD>Part 6, Sec. 5.11.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.13 Non-recoverable errors compliance list </H2>

<P>There is a number of non-recoverable errors at the physical layer. Behavior of the </P>

<P>interface is not defined for these events. </P>

<P>tha t </P>

<Table>
<Caption>
<P>Table 3-13. General device 1x/4x LP-Serial physical layer non-recoverable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Device does not respond to the initialization sequence. No response time is specified. A reasonable test procedure should be followed to demonstrate this behavior. </TD>

<TD>Part 6, Sec. 4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Device is attempting error recovery and ackID received in link-response control symbol does not make sense (device cannot complete recovery). Further discussion of this point can be found in Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 5.11.2.3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Link-request control symbol to link-response control symbol time-out. Further discussion of this point can be found in Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 6.5.2.2 Part 6, Sec. 6.6.2.2 Part 6, Sec. 6.7.2.2 Part 6, Sec. 6.8.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>Any transmission error encountered during error recovery. Note: Some transmission errors cause subsequent protocol violations. The recovery algorithm can be used to recover from multiple transmission errors but that behavior is not required for compliance. </TD>

<TD>Table 3-12 above </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.14 State machines interaction compliance list </H2>

<P>There are some rules of output error, input error, output retry, input retry state </P>

<P>machine interactions. </P>

<P>tha t </P>

<Table>
<Caption>
<P>Table 3-14. General device 1x/4x LP-Serial physical layer state machines interaction list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>If an input error situation was detected while the ‘Input Retry-stopped’ bit is 1 in the Port n Error and Status CSR, the device shall change the ‘Input Retry-stopped’ bit to 0 and change the ‘Input Error-stopped’ bit to 1 in the Port n Error and Status CSR. The input retry recovery procedure stops, and the input error recovery will be followed. Further discussion of this point can be found in Part 6, Sec. A.2.1 and Part 6, Sec. A.3.1. </TD>

<TD>Part 6, Sec. 5.11.2.6 Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>If an output error situation was detected while the ‘Output Retry-stopped’ bit is 1 in the Port n Error and Status CSR, the device shall change the ‘Output Retry-stopped’ bit to 0 and change the ‘Output Error-stopped’ bit to 1 in the Port n Error and Status CSR. The output retry recover procedure stops, and the output error recovery procedure will be followed. Further discussion of this point can be found in Part 6, Sec. A.2.2 and Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 5.11.2.6 Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Input state machines and output state machines shall work independently from each other. Further discussion of this point can be found in Part 6, Sec. A. </TD>

<TD>Part 6, Sec. 5.11.2.6 Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 3A. DETAIL: If the ‘Input Retry-Stopped’ or ‘Input Error-Stopped’ bits are set in the Port n Error and Status CSR, the device shall follow input retry/error recovery even if the condition causing the two previously mentioned bits to be changed to 1 was detected while the device was performing the output retry/error procedure. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 3B. DETAIL: If the ‘Output Retry-Stopped’ or ‘Output Error-Stopped’ bits are set in the Port n Error and Status CSR, the device shall follow output retry/error recovery even if the condition causing the two previously mentioned bits to be changed to 1 was detected while the device was performing input retry/error procedure. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 3C. DETAIL: If an input retry/error situation and an output retry/error situation were detected simultaneously, the device shall start both input and output recovery procedures. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>If device is following input error recovery, all subsequent input port errors shall not affect operation of the device. Further discussion of this point can be found in Part 6, Sec. A.3.1. </TD>

<TD>Part 6, Sec. 5.11.2.6 Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>If device is following output error recovery, all subsequent output port errors shall not affect operation of the device. Further discussion of this point can be found in Part 6, Sec. A.3.2. </TD>

<TD>Part 6, Sec. 5.11.2.6 Part 6, Sec. 5.11.2.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.15 Retimer and repeater compliance list </H2>

<P>This is a list for retimer and repeater devices. </P>

<Table>
<Caption>
<P>Table 3-15. General device 1x/4x LP-Serial physical layer retimer and repeater device specific list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-operabilit y Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Up to two retimers are allowed between 2 end nodes </TD>

<TD>Part 6, Sec. 4.6.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>A retimer may insert up to one /R/ code-group immediately following a /K/ code-group sequence, or remove one /R/ code-group that immediately follows a /K/ code-group sequence. </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>A retimer may retime links operating at the same width only (i.e. cannot connect a link operating at 1x to a link operating at 4x). </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>4. </TD>

<TD>Repeaters do not interpret or alter the bit stream in any way. </TD>

<TD>Part 6, Sec. 4.6.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>3.16 Sequence generation compliance list </H2>

<P>This is the list for idle and compensation sequences and status symbol generation functionality. </P>

<Table>
<Caption>
<P>Table 3-16. General device 1x/4x LP-Serial physical layer sequence generation list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>At least once per 5000 code-groups a port operating in 1x mode (4x mode) shall transmit a compensation sequence of /K/R/R/R/ codegroup sequence (||K||R||R||R|| column sequence). The compensation sequence shall be transmitted with this rate even when there are packets or control symbols available to transmit to allow clock rate compensation. </TD>

<TD>Part 6, Sec. 4.5.9 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>The idle sequence shall be transmitted continuously over each lane whenever neither packets nor control symbols are being transmitted. </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>Idle sequence may not be inserted in a packet or delimited control symbol. </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 3A. DETAIL: No more than 5000 code-groups should be transmitted between compensation sequences. </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>4. </TD>

<TD>The idle sequence shall be transmitted over each lane as part of the port initialization process. </TD>

<TD>Part 6, Sec. 4.7.3.5 Part 6, Sec. 4.7.3.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>5. </TH>

<TD>The 1x idle sequence shall consist of a sequence of the code-groups /K/, /A/, /R/ and shall be used by ports operating in 1x mode. The 4x idle sequence shall consist of a sequence of the columns ||K||, ||A||, ||R|| and shall be used by ports operating in 4x mode. </TD>

<TD>Part 6, Sec. 4.5.9 Part 6, Sec. 4.5.7.4 Part 6, Sec. 4.5.7.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 5A. DETAIL: The /K/ code-group provides the receiver with the information it requires to achieve and maintain bit and 10-bit code-group boundary synchronization. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 5B. DETAIL: The ||A|| columns are used for lane alignment on 4x links. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>The idle sequence shall comply with the following rules: </TD>

<TD/>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 6A. DETAIL: The first code-group (column) of an idle sequence generated by a port operating in 1x mode (4x mode) shall be /K/ (||K||). The first code-group (column) shall be transmitted immediately following the last code-group (column) of a packet or delimited control symbol. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 6B. DETAIL: When not transmitting the compensation sequence, all code-groups (columns) following the first code-group (column) of an idle sequence generated by a port operating in 1x mode (4x mode) shall be a pseudo-randomly selected sequence of /A/, /K/, and /R/ (||A||, ||K||, and ||R||) based on a pseudo-random sequence generator of 7th order or greater. The number of non /A/ code-groups (non ||A|| columns) between /A/ code-groups (||A|| columns) in the idle sequence of a port operating in 1x mode (4x mode) shall be not less than 16 and no more than 32. The number of code groups shall be pseudo-randomly selected based on a pseudo-random sequence generator of 7th order or greater. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>Chapter 4  Common Transport Layer Checklists </P>

<Sect>
<H2>4.1 Introduction </H2>

<P>This chapter contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for devices supporting common transport functionality for 8/16 LP-LVDS and 1x/4x LP-Serial compliant devices. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The Common Transport layer inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>4.2 Generic functionality compliance list </H2>

<P>This is the list for generic functionality for the device. </P>

<Table>
<Caption>
<P>Table 4-1. General device common transport layer generic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Items 1 through 20 of Table 2-1, “General device 8/16 LP-LVDS physical layer general compliance list,” on page 12. Applied to Transport Layer fields, CARs and CSRs. </TD>

<TD>Chapter 2, Table 2-1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>2. </TH>

<TD>All necessary CSRs (command and status registers) exist and can be read </TD>

<TD>Part 3, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: Base Device ID CSR; reset value is application and implementation dependant (end point devices only) </TD>

<TD>Part 3, Sec. 3.5.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Host Base Device ID Lock CSR; Host_base_deviceID field reset value is 0xFFFF </TD>

<TD>Part 3, Sec. 3.5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2C. DETAIL: Component Tag CSR; reset value is 0x00000000 </TD>

<TD>Part 3, Sec. 3.5.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2D. DETAIL: Standard Route Configuration Destination ID Select CSR; reset values of the following fields are all 0: Ext_config_en, Config_destID_msb, and Config_destID </TD>

<TD>Part 3, Sec. 3.5.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2E. DETAIL: Standard Route Configuration Port Select CSR; reset values are defined as follows: </TD>

<TD>Part 3, Sec. 3.5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2E1. DETAIL: Reset value of Config_output_port is implementation defined. </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2E2. DETAIL: Reset values of Config_output_port1, Config_output_port2, and Config_output_port3 are 0x00. However, if the extended route table mechanism is not enabled, these fields are these fields are reserved (still a reset value of 0x00). </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2F. DETAIL: Standard Route Default Port CSR; Default_output_port field reset value is 0x00 </TD>

<TD>Part 3, Sec. 3.5.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2G. DETAIL: Processing Element Features CAR, bit 27 accurately reflects device’s ability to support common transport large systems. </TD>

<TD>Part 3, Sec 2.3.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2H. DETAIL: Processing Element Features CAR, bit 23 accurately reflects device’s ability to support the standard route table mechanism. </TD>

<TD>Part 3, Sec 3.4.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2I. DETAIL: Processing Element Features CAR, bit 22 accurately reflects device’s ability to support the extended route table mechanism. </TD>

<TD>Part 3, Sec 3.4.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2J. DETAIL: Switch Route Table Destination ID Limit CAR, bits 16-31 accurately reflects the device’s maximum configurable destination ID value. </TD>

<TD>Part 3, Sec 3.4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>3. </TH>

<TD>Writable CSR fields can be written </TD>

<TD>Part 3, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3A. DETAIL: Host Base Device ID CSR Host_base_deviceID field reset value is 0xFFFF </TD>

<TD>Part 3, Sec 3.5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3B. DETAIL: When Host Base Device ID CSR Host_base_deviceID field value is 0xFFFF, the field value can be changed to any value. </TD>

<TD>Part 3, Sec 3.5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3C. DETAIL: When Host Base Device ID CSR Host_base_deviceID field value is not 0xFFFF, the field value will change to 0xFFFF when a value equal to the current field value is written. </TD>

<TD>Part 3, Sec 3.5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3D. DETAIL: When Host Base Device ID CSR Host_base_deviceID field value is not 0xFFFF, the field value does not change when a value not equal to the current field value is written. </TD>

<TD>Part 3, Sec 3.5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3E. DETAIL: When the Host Base Device ID CSR Host_base_deviceID field value is equal to 0xFFFF, and 0xFFFF is written to the field, subsequent writes of values not equal to 0xFFFF behave as per 3B, 3C and 3D above. </TD>

<TD>Part 3, Sec 3.5.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3F. DETAIL: The Component Tag CSR component_tag field can be written to any value. </TD>

<TD>Part 3, Sec 3.5.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3G. DETAIL: The Standard Route Configuration Destination ID Select CSR fields are writable when this function is supported by the implementation. Otherwise, this register acts as a reserved register and cannot be written. </TD>

<TD>Part 3, Sec 3.5.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3H. DETAIL: The Standard Route Configuration Port Select CSR fields are writable when this function is supported by the implementation. Otherwise, this register acts as a reserved register and cannot be written. </TD>

<TD>Part 3, Sec 3.5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3I. DETAIL: The Standard Route Default Port CSR Default_output_port field can be written to any value when this function is supported by the implementation. Otherwise, this register acts as a reserved register and cannot be written. </TD>

<TD>Part 3, Sec 3.5.6 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>4. </TH>

<TD>Standard and extended route table configuration mechanisms function as described. </TD>

<TD>Part 3, Sec. 3.5.4 Part 3, Sec. 3.5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: When read, the Standard Route Configuration Port Select CSR returns the switch output port configurations when this function is supported by the implementation. Otherwise, this register acts as a reserved register and returns all 0’s. </TD>

<TD>Part 3, Sec 3.5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4B. DETAIL: When written, the Standard Route Configuration Port Select CSR updates the switch output port configurations when this function is supported by the implementation. Otherwise, this register acts as a reserved register and returns all 0’s. </TD>

<TD>Part 3, Sec 3.5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4C. DETAIL: Ext_config_en bit enables/disables extended configuration support when this function is supported by the implementation. Otherwise, this register acts as a reserved register and returns all 0’s. </TD>

<TD>Part 3, Sec 3.5.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>4.3 Packet transmission compliance list </H2>

<P>This is the list for the device transmitting a packet (a slave device is required to generate response packets). </P>

<Table>
<Caption>
<P>Table 4-2. General device common transport layer packet transmission list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Comment </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>tt field matches the size of the destID/sourceID fields. Certification requires small (8-bit) device ID fields; 16-bit device ID support optional. </TD>

<TD>Part 3, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: tt field is always 0 if Processing Element Features CAR Common Transport Large System Support field value is 0. </TD>

<TD>Part 3, sec. 3.4.1 Part 3, sec. 2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>small transport type (tt=0) is supported (8-bit device ID fields) </TD>

<TD>Part 3, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>large transport type (tt=1) is supported (16-bit device ID fields) </TD>

<TD>Part 3, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>tt most significant bit is reserved (always logic 0) </TD>

<TD>Part 3, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>End point-free switch responds to maintenance requests with the hop_count=0 when received, otherwise decrement hop_count, recompute CRC and route to proper output port </TD>

<TD>Part 3, Sec. 2.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 5A. DETAIL: The response to a maintenance packet has hop_count field set to 0xFF </TD>

<TD>Part 3, Sec 2.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>6. </TD>

<TD>Switches retransmit all packets not destined for them without altering the packet, other than detailed in point 5 above. </TD>

<TD>Part 3, Sec 2.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>7. </TD>

<TD>Response packets are sent with the source and destination ID fields reversed from the corresponding request packet </TD>

<TD>Part 3, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>4.4 Packet reception compliance list </H2>

<P>This is the list for the device receiving a packet. </P>

<Table>
<Caption>
<P>Table 4-3. General device common transport layer packet reception list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>End point-free switch responds to maintenance requests with the hop_count=0 when received </TD>

<TD>Part 3, Sec. 2.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>4.5 Detectable errors compliance list </H2>

<P>Transport layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 4-4. General device common transport layer detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Received reserved tt field encoding. </TD>

<TD>Part 3, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>For switch devices, if the destination ID has no valid output port set. </TD>

<TD>Part 3, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>Blank Page </P>

<P>Chapter 5 I/O Logical Layer Checklists </P>

<Sect>
<H2>5.1 Introduction </H2>

<P>This chapter contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for devices supporting I/O logical functionality for 8/16 LP-LVDS and 1x/4x LP-Serial compliant devices. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The I/O Logical layer inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>5.2 Basic functionality compliance list </H2>

<P>This is the list for basic functionality for RapidIO devices. </P>

<Table>
<Caption>
<P>Table 5-1. General device I/O logical layer basic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Items 1 through 20 of Table 2-1, “General device 8/16 LP-LVDS physical layer general compliance list,” on page 12 and/or items 1 through 20 of Table 3-1, “General device 1x/4x LP-Serial physical layer general compliance list,” on page 42, depending on the physical layer(s) supported by the device. Note that these requirements are applied to the Logical Layer fields of CARs &amp; CSRs. </TD>

<TD>Chapter 2, Table 2-1 Chapter 3, Table 3-1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>The address field of a packet is a double-word (8 byte) aligned address </TD>

<TD>Part 1, Sec. 4.1.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>Multiple double-word data payloads are linear starting at the specified address </TD>

<TD>Part 1, Sec. 4.1.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>4. </TD>

<TD>Multiple double-word data payloads are aligned to a double-word boundary </TD>

<TD>Part 1, Sec. 4.1.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>5. </TD>

<TD>Multiple double-word data payloads must be less than or equal to the transfer size as indicated by the wrsize/rdsize and wdptr fields. </TD>

<TD>Part 1, Sec. 4.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>Sub-double-word data payloads have a defined data payload, properly aligned and padded to a double-word boundary </TD>

<TD>Part 1, Sec. 3.3 Part 1, Sec. 3.4 Part 1, Sec. 4.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>Response packets have the transaction ID of the associated request packet </TD>

<TD>Part 1, Chp. 3.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>8. </TD>

<TD>Responses that are not expected to have a data payload must not have a data payload </TD>

<TD>Part 1, Sec. 4.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>Responses shall not contain a data payload if the response status is “ERROR” </TD>

<TD>Part 1, Sec. 4.2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>10. </TH>

<TD>All necessary CARs (capabilities registers) exist and can be read </TD>

<TD>Part 1, Sec. 5.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 10A. DETAIL: Device Identity CAR; bits 0-15: value is implementation dependant • bits 16-31: value is vendor specific as assigned by the RapidIO Trade Association. </TD>

<TD>Part 1, Sec. 5.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10B. DETAIL: Device Information CAR; value is vendor and implementation dependant </TD>

<TD>Part 1, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10C. DETAIL: Assembly Identity CAR; bits 0-15: value is implementation dependant bits 16-31: value is vendor specific as assigned by the RapidIO Trade Association </TD>

<TD>Part 1, Sec. 5.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10D. DETAIL: Assembly Information CAR; value is vendor and implementation dependant </TD>

<TD>Part 1, Sec. 5.4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10E. DETAIL: Processing Element Features CAR; value is implementation dependant; must indicate support for 34-bit address format packets. Only check 10F is bit 3 is set. </TD>

<TD>Part 1, Sec. 5.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10F. DETAIL: Switch Port Information CAR; value is implementation dependant (switch devices only) </TD>

<TD>Part 1, Sec. 5.4.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10G. DETAIL: Source Operations CAR; value is implementation dependant </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 10H. DETAIL: Destination Operations CAR; value is implementation dependant (end point devices only) </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>11. </TH>

<TD>All necessary CSRs (command and status registers) exist and can be read </TD>

<TD>Part 1, Sec. 5.5 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 11A. DETAIL: Processing Element Logical Layer Control CSR: reset value of the Extended addressing control field is 0b001 (end point devices only) </TD>

<TD>Part 1, Sec. 5.5.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 11B: DETAIL: Local Configuration Space Base Address 0 CSR: value dependant on addressing mode supported. Bit 0 - reserved for all addressing modes. Bits 1-16 reserved for 34-bit and 50-bit addressing modes only. Bit 17-31 reserved for 34-bit addressing mode. </TD>

<TD>Part 1, Sec. 5.5.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 11C: DETAIL: Local Configuration Space Base Address 1 CSR: value is implementation dependant. Bit0 - reserved for 34 bit addressing mode only. </TD>

<TD>Part 1, Sec 5.5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>12. </TH>

<TD>Writable CSR fields can be written </TD>

<TD>Part 1, Sec. 5.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>13. </TH>

<TD>All registers in the Extended Features data structure are double-word (8 byte) aligned. </TD>

<TD>Part 1, Sec. 5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>14. </TH>

<TD>All Extended Features blocks lie completely within the Extended Features Space in the register address map </TD>

<TD>Part 1, Sec. 5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>15. </TD>

<TD>Extended Features list is terminated with an Extended Features pointer value of logic 0s </TD>

<TD>Part 1, Sec. 5.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>16. </TD>

<TD>The response to a maintenance packet has the logical transaction, status, and TID fields and data payload (if applicable) set according to the request. </TD>

<TD>Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>
</Sect>

<Sect>
<H2>5.3 Target transaction support compliance list </H2>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 5-2. General device I/O logical layer target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>MAINTENANCE read transaction </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: MAINTENANCE read request size of 4 bytes must be supported </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1B. DETAIL: MAINTENANCE read request generates a MAINTENANCE read response </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1C. DETAIL: MAINTENANCE read response payload size matches requested size </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• 1D. DETAIL: Response data for a MAINTENANCE packet consists of one or more double words, although sub-double-word data may have been requested. </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>MAINTENANCE write transaction </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: MAINTENANCE write request size of 4 bytes must be supported </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: MAINTENANCE write request generates a MAINTENANCE write responses </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: MAINTENANCE write response does not contain a data payload </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>5.4 Source transaction support compliance list </H2>

<P>General compliance does not require a device to initiate any operations. </P>
</Sect>

<Sect>
<H2>5.5 Detectable errors compliance list </H2>

<P>I/O logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 5-3. General device I/O logical layer detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>MAINTENANCE write packet data payload length is not 4B, 8B, or multiple double-word quantity up to 64B. </TD>

<TD>Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Received MAINTENANCE read packet has a data payload </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Received MAINTENANCE write packet has no data payload </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>Received MAINTENANCE packet uses a reserved field encoding for a required field </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>Received MAINTENANCE packet uses illegal combinations of field encodings, for example a 128 byte data payload. </TD>

<TD>Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>5.6 Class 1 compliance lists </H2>

<P>A Class 1 device must meet all requirements specified in the General device compliance checklists. The only difference between Class 1 compliance and general device compliance is in logical layer transaction support. </P>

<Sect>
<H3>5.6.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 5-4. Class 1 device logical layer target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1A. DETAIL: NREAD operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: NWRITE operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: SWRITE operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: NWRITE_R operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>NREAD transaction </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 4.1.5 </TD>

<TD>Class 1, 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: NREAD request generates a response packet which always contain data payloads of one or more double-words, although sub-double-word data may have been requested </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 4.1.5 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: NREAD response data payload is of the requested size and alignment </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 4.1.5 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: Maximum NREAD request can be 256 bytes. </TD>

<TD>Part 1, Sec. 4.1.2, Table 4-3 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>3.</TH>

<TD> NWRITE transaction </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3A. DETAIL: NWRITE request does not generate a response packet </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: Maximum NWRITE data payload can be 256 bytes </TD>

<TD>Part 1, Sec. 4.1.2, Table 4-4 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: All NWRITE requests containing a data payload smaller than 8 bytes must be padded to 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3D. DETAIL: NWRITE request payload is a multiple of 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>4.</TH>

<TD> SWRITE transaction </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: SWRITE request does not generate a response packet </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Maximum SWRITE data payload can be 256 bytes </TD>

<TD>Part 1, Sec. 4.1.2, Table 4-4 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: SWRITE request payload is a minimum of 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 Part 1, Sec. 4.1.8 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 4D. DETAIL: SWRITE request payload is a multiple of 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 Part 1, Sec. 4.1.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>NWRITE_R transaction </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 5A. DETAIL: NWRITE_R request generates a response packet </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5B. DETAIL: Maximum NWRITE_R data payload can be 256 bytes </TD>

<TD>Part 1, Sec. 4.1.2, Table 4-4 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5C. DETAIL: NWRITE_R response packet has no payload. </TD>

<TD>Part 1, Sec. 4.1.2, Table 4-4 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5D. DETAIL: All NWRITE_R requests containing a data payload smaller than 8 bytes must be padded to 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 5E. DETAIL: NWRITE_R request payload is a multiple of 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>NREAD, NWRITE and SWRITE transactions operate on memory regardless of system wide cache/coherence mechanism. </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 3.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>5.6.2 Source transaction support compliance list </H3>

<P>I/O device class 1 compliance does not require the device to initiate any operations. </P>
</Sect>

<Sect>
<H3>5.6.3 Detectable errors compliance list </H3>

<P>I/O logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 5-5. Class 1 device logical layer detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>NWRITE, SWRITE and NWRITE_R request packet data payload exceeds size specified in wrsize field </TD>

<TD>Part 1, Sec. 4.1.7 Part 1, Sec. 4.1.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>NWRITE, SWRITE and NWRITE_R request packet data payload exceeds 256 bytes </TD>

<TD>Part 1, Sec. 4.1.7 Part 1, Sec. 4.1.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>Received read request packet has a data payload </TD>

<TD>Part 1, Sec. 4.1.5 Part 1, Sec. 4.1.10 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>Received NWRITE, SWRITE or NWRITE_R request packet has no data payload </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 Part 1, Sec. 4.1.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>Received request packet uses a reserved field encoding for a required field </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>Received request packet uses illegal combinations of field encodings. For example, any ATOMIC transaction of more than 4 bytes. </TD>

<TD>Part 1, Sec. 4.1.7 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>Unsupported transaction requested </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>Received NWRITE, NWRITE_R, SWRITE request data payload is not padded to a multiple of 8 bytes. </TD>

<TD>Part 1, Sec. 3.4 Part 1, Sec. 3.5 </TD>

<TD>Class 1, 2, 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>5.7 Class 2 compliance lists </H2>

<P>A Class 2 device must meet all requirements specified in the General device and Class 1 compliance checklists. The only difference between Class 2 compliance and Class 1 compliance is in logical layer transaction support. </P>

<Sect>
<H3>5.7.1 Basic functionality compliance list </H3>

<P>A class 2 device is the source as well as the target of transactions. </P>

<Table>
<Caption>
<P>Table 5-6. Class 2 device logical layer basic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Outstanding transaction IDs are unique for each outstanding request transaction between a particular transaction source and destination pair. </TD>

<TD>Part 1, Sec. 3.1 </TD>

<TD>Class 2 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>5.7.2 Target transaction support compliance list </H3>

<P>There are no additional transaction types for the device as a transaction target. </P>
</Sect>

<Sect>
<H3>5.7.3 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 5-7. Class 2 device logical layer source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1A. DETAIL: NREAD operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: NWRITE operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: NWRITE_R operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: SWRITE operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>NREAD transaction </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 4.1.5 </TD>

<TD>Class 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: NREAD packet never has a data payload </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 4.1.5 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: NREAD packet must properly specify the requested size and alignment </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 4.1.5 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>3.</TH>

<TD> NWRITE transaction </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3A. DETAIL: NWRITE packets always contain data payloads of one or more double-words, although sub-double-word data may be specified </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: NWRITE packet must properly specify the data payload size and alignment </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: NWRITE packet actual data payload size may be less than the specified size (multiple double-word only) </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>NWRITE_R transaction </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: NWRITE_R packets always contain data payloads of one or more double-words, although sub-double-word data may be specified </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: NWRITE_R packet must properly specify the data payload size and alignment </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: NWRITE_R packet actual data payload size may be less than the specified size (multiple double-word only) </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TH>5.</TH>

<TD> SWRITE transaction </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.8 </TD>

<TD>Class 2, 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 5A. DETAIL: SWRITE packets always contain data payloads of one or more double-words </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 4.1.8 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>5.7.4 Detectable errors compliance list </H3>

<P>I/O logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 5-8. Class 2 device logical layer detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Received unsolicited response packet </TD>

<TD>Part 1, Sec. 3.1 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>NREAD “DONE” response packet data payload is more or less than requested data quantity </TD>

<TD>Part 1, Sec. 3.3.1 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>3. </TD>

<TD>NREAD “DONE” response packet has no data payload </TD>

<TD>Part 1, Sec. 3.3.1 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>NREAD “DONE” response packet data payload is not a multiple of 8 bytes. </TD>

<TD>Part 1, Sec. 3.3.1 Part 1, Sec. 3.4 Part 1, Sec. 3.5 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>NWRITE_R response has a data payload. </TD>

<TD>Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>Response packet time-out </TD>

<TD>Part 4, Sec. 2.4.3 Part 6, Sec. 5.11.1 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>Received “ERROR” response status </TD>

<TD>Part 1, Sec. 3.1 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>“ERROR” response packet has a data payload </TD>

<TD>Part 1, Sec. 4.2.3 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>Received response packet has reserved field encoding </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>

<TR>
<TD>10. </TD>

<TD>NWRITE/NWRITE_R packet data size exceeds specified size. </TD>

<TD>Part 1, Sec. 3.3.2 Part 1, Sec. 3.3.3 Part 1, Sec. 4.1.7 </TD>

<TD>Class 2, 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>5.8 Class 3 compliance lists </H2>

<P>An I/O Class 3 device must meet all requirements specified in the General device and I/O Class 2 compliance checklists. The only difference between I/O Class 3 compliance and I/O Class 2 compliance is in logical layer transaction support. </P>

<Sect>
<H3>5.8.1 Basic functionality compliance list </H3>

<P>An I/O class 3 device is the source as well as the target of transactions. </P>

<Table>
<Caption>
<P>Table 5-9. Class 3 device logical layer basic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Response packets have the letter/mbox/msgseg fields of the associated request packet </TD>

<TD>Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>Outstanding letter/mbox/msgseg/xmbox fields are unique for a particular transaction source and destination pair and the values cannot be reused by the sending device until the entire message operation has completed </TD>

<TD>Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>5.8.2 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 5-10. Class 3 device logical layer target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1A. DETAIL: Atomic set operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>MAINTENANCE port-write transaction </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: MAINTENANCE port-write does not cause a MAINTENANCE response </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: MAINTENANCE port-write is discarded if the receiver does not have the resources to accept the port-write. </TD>

<TD>Part 1, Sec. 4.1.10 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>ATOMIC set transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3A. DETAIL: ATOMIC set response returns the unmodified data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: Logic 1s are written after the data is read </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.2 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: Receive • msglen = 0 • ssize = 8B • mbox = 0 • letter = 0 • Above parameters are the minimum required for a device to indicate that it supports messages. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Verify correct receipt of out of order message segments. </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: Response to a MESSAGE request never has a data payload </TD>

<TD>Part 2, Sec. 4.3.1 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>5.8.3 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 5-11. Class 3 device logical layer source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1A. DETAIL: Atomic set operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.1 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: Send • msglen = 0 • ssize = 8B •  mbox = 0 • letter = 0 • Above parameters are the minimum required for a device to indicate that it supports messages. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: MESSAGE packets always have data payloads </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: MESSAGE transaction payload is a multiple of 8 bytes in size. </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2D. DETAIL: Up to 16 individual MESSAGE transactions are allowed in one data message operation </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2E. DETAIL: A “RETRY” response may cause the MESSAGE packet to be re-issued. A transaction request that is retried must be transmitted in order to complete. </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2F. DETAIL: A response status of “ERROR” on any message packet causes termination of the message. </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2G. DETAIL: Device generates the number of packets specified in the msglen field for a message operation </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2H. DETAIL: All packets for a message operation must be of the same size and of the size specified in the ssize field (exception: data payload for the last packet in a message operation can be less than the size specified in the ssize field) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2I. DETAIL: Send multiple outstanding messages to common mbox &amp; letter but different msgseg/xmbox. Responses must be associated with the correct message target_info. </TD>

<TD>Part 2, Sec. 4.3.3 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2J. DETAIL: All transactions for the same message must have the same (xmbox, if applicable) mbox and letter field values </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>5.8.4 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 5-12. Class 3 device logical layer detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>ATOMIC set request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2A. DETAIL: Received MESSAGE packet has no data payload </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: MESSAGE transaction payload is not a multiple of 8 bytes in size </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: For multiple packet data message operations, msgseg value is greater than msglen value for the same sender, mailbox and letter. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2D. DETAIL: For multiple packet data message operations, msgseg or xmbox value is repeated and there was not a “RETRY” response for the previous usage for the same sender, mailbox and letter. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2E. DETAIL: Received MESSAGE packet data payload is not of the size specified in the ssize field (exception for last packet which may be less) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2F. DETAIL: Logical timeout on a message transaction is detected by the transmitter. </TD>

<TD>Part 4, Sec. 2.4.3 Part 6, Sec. 5.11.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2G. DETAIL: Received MESSAGE response for destID/mailbox/letter/msgseg/xmbox that is not in use. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2H. DETAIL: Received MESSAGE response with ERROR status. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Illegal response for given request type </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>

<P>Blank Page </P>

<P>Chapter 6 Message Passing Logical LayerChecklists </P>
</Sect>
</Sect>
</Sect>
</Sect>
</Sect>
</Sect>

<Sect>
<H2>6.1 Introduction </H2>

<P>This chapter contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for devices supporting only Message Passing logical functionality for 8/16 LP-LVDS and 1x/4x LP-Serial compliant devices. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The Message Passing Logical layer inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>6.2 Basic functionality compliance list </H2>

<P>This is the list for basic functionality for RapidIO devices which only support message passing logical functionality. </P>

<Table>
<Caption>
<P>Table 6-1. General device message passing logical layer basic functionality list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Items 1 through 20 of Table 2-1, “General device 8/16 LP-LVDS physical layer general compliance list,” on page 12 and/or items 1 through 20 of Table 3-1, “General device 1x/4x LP-Serial physical layer general compliance list,” on page 42, depending on the physical layer(s) supported by the device. Note that these requirements are applied to the Logical Layer fields of CARs &amp; CSRs. </TD>

<TD>Chapter 2, Table 2-1 Chapter 3, Table 3-1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>2. </TH>

<TD>MESSAGE request payloads are always a multiple of double words in size. </TD>

<TD>Part 2, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>DOORBELL requests always have a 2 byte ‘Info’ field instead of a payload. </TD>

<TD>Part 2, Sec. 3.3.1 Part 2, Sec. 4.2.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>Response packets have the transaction ID of the associated request packet </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH>5. </TH>

<TD>Responses to DOORBELL and MESSAGE requests never have data. </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>All necessary CARs (capabilities registers) exist and can be read </TD>

<TD>Part 1, Sec. 5.4 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 6A. DETAIL: Device Identity CAR; bits 0-15: value is implementation dependant • bits 16-31: value is vendor specific as assigned by the RapidIO Trade Association. </TD>

<TD>Part 1, Sec. 5.4.1 Part 7, Sec. 3.2.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: Device Information CAR; value is vendor and implementation dependant </TD>

<TD>Part 1, Sec. 5.4.2 Part 7, Sec. 3.2.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6C. DETAIL: Assembly Identity CAR; bits 0-15: value is implementation dependant bits 16-31: value is vendor specific as assigned by the RapidIO Trade Association </TD>

<TD>Part 1, Sec. 5.4.3 Part 7, Sec. 3.2.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6D. DETAIL: Assembly Information CAR; value is vendor and implementation dependant </TD>

<TD>Part 1, Sec. 5.4.4 Part 7, Sec. 3.2.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6E. DETAIL: Source Operations CAR; value is implementation dependant </TD>

<TD>Part 2, Sec. 5.4.1 Part 1, Sec. 5.4.7 Part 7, Sec. 3.2.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6F. DETAIL: Destination Operations CAR; value is implementation dependant </TD>

<TD>Part 2, Sec. 5.4.2 Part 1, Sec. 5.4.8 Part 7, Sec. 3.2.1.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>7. </TH>

<TD>The response to a maintenance packet has the logical transaction, status, and TID fields and data payload (if applicable) set according to the request. </TD>

<TD>Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>8. </TD>

<TD>For MESSAGEs, response packets have the letter/mbox/msgseg fields of the associated request packet </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>For MESSAGEs, outstanding letter/mbox/mseg fields are unique for a particular transaction source and destination pair and the values cannot be reused by the sending device until the entire message operation has completed </TD>

<TD>Part 2, Sec. 3.1 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>6.3 	Message passing target transaction support 
compliance list 
</P>

<P>This is the list for the device as a target of message passing logical layer transactions. </P>

<Table>
<Caption>
<P>Table 6-2. General device message passing logical layer target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>MAINTENANCE read transaction </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: MAINTENANCE read request size of 4 bytes must be supported </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: MAINTENANCE read request generates a MAINTENANCE read response </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: MAINTENANCE read response payload size matches requested size </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: Response data for a MAINTENANCE packet consists of one or more double words, although sub-double-word data may have been requested. </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>MAINTENANCE write transaction </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: MAINTENANCE write request may be for 4 bytes </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: MAINTENANCE write request generates a MAINTENANCE write responses </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: MAINTENANCE write response does not contain a data payload </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>MESSAGE transaction (if device supports MESSAGEs) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 3A. DETAIL: Receive msglen = 0 ssize = 8B mbox = 0 letter = 0 Above parameters are the minimum required for a device to indicate that it supports messages. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: Verify correct receipt of out of order message segments. </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: Response to a MESSAGE request never has a data payload </TD>

<TD>Part 2, Sec. 4.3.1 Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>DOORBELL transaction (if device supports DOORBELLs) </TD>

<TD>Part 2, Sec. 3.3.1 Part 2, Sec. 4.2.4 Part 2, Sec. 4.3.3 Part 2, Sec. 5.4.2 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 4A. DETAIL: Receive a DOORBELL transaction </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: Response to a DOORBELL transaction never has a data payload. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: Response to a DOORBELL transaction is DONE, RETRY or ERROR. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>6.4 	Message passing source transaction support compliance list </P>

<P>This is the list for the device as a source of message passing logical layer </P>

<P>transactions. </P>

<Table>
<Caption>
<P>Table 6-3. General device message passing logical layer source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>DOORBELL transaction (if supported by device) </TD>

<TD>Part 2, Sec. 3.3.1 Part 2, Sec. 4.2.4 Part 2, Sec. 4.3.3 Part 2, Sec. 5.4.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: Send DOORBELL transaction, verify correct management of TID. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: Receive DONE, RETRY or ERROR response transaction, verify correct matching to DOORBELL request transaction. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: Receive DONE, RETRY or ERROR response transaction, verify correct matching to DOORBELL request transaction. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>2. </TH>

<TD>MESSAGE transaction (if supported by device) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.1 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: Send msglen = 0 ssize = 8B mbox = 0 letter = 0 Above parameters are the minimum required for a device to indicate that it supports messages. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 5.4.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: MESSAGE packets always have data payloads </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: MESSAGE transaction payload is a multiple of 8 bytes in size. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2D. DETAIL: Up to 16 individual MESSAGE transactions are allowed in one data message operation </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2E. DETAIL: A “RETRY” response may cause the MESSAGE packet to be re-issued. A transaction request that is retried must be transmitted in order to complete. </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2F. DETAIL: Device generates the number of packets specified in the msglen field for a message operation </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2G. DETAIL: All packets for a message operation must be of the same size and of the size specified in the ssize field (exception: data payload for the last packet in a message operation can be less than the size specified in the ssize field) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2H. DETAIL: Send multiple outstanding messages to common mbox &amp; letter but different msgseg/xmbox. Responses must be associated with the correct message target_info. </TD>

<TD>Part 2, Sec. 4.3.3 Part 2, Sec 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2I. DETAIL: All transactions for the same message must have the same mbox, letter, msglen or xmbox, and size field values </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>For devices which support both DOORBELL and MESSAGE transactions, verify that the TID values for DOORBELL and MESSAGE responses are managed correctly. </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>6.5 Message passing detectable errors compliance list </H2>

<P>Message passing logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the receiver of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 6-4. General device message passing logical layer detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>MAINTENANCE write packet data payload length is not 4B, 8B, or multiple double-word quantity up to 64B. </TD>

<TD>Part 1, Sec. 4.1.10 Part 1, Sec. 3.4 Part 1, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>Received MAINTENANCE read packet has a data payload </TD>

<TD>Part 1, Sec. 3.4.1 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Received MAINTENANCE write packet has no data payload </TD>

<TD>Part 1, Sec. 3.41 Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>4. </TH>

<TD>Received MAINTENANCE packet uses a reserved field encoding for a required field </TD>

<TD>Part 1, Sec. 4.1.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>5. </TH>

<TD>Received MAINTENANCE packet uses illegal combinations of field encodings, for example a 128 byte data payload. </TD>

<TD>Part 1, Sec. 4.1.10 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: Received MESSAGE packet has no data payload </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: MESSAGE transaction payload is not a multiple of 8 bytes in size </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6C. DETAIL: For multiple packet data message operations, msgseg value is greater than msglen value for the same sender, mailbox and letter. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6D. DETAIL: For multiple packet data message operations, msgseg or xmbox value is repeated and there was not a “RETRY” response for the previous usage for the same sender, mailbox and letter. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6E. DETAIL: Received MESSAGE packet data payload is not of the size specified in the ssize field (exception for last packet which may be less) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6F. DETAIL: Logical timeout on a message transaction is detected by the transmitter. </TD>

<TD>Part 4, Sec. 2.4.3 Part 6, Sec. 5.11.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6G. DETAIL: Received MESSAGE response for destID/mailbox/letter/msgseg/xmbox that is not in use. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6H. DETAIL: Received MESSAGE response with ERROR status. </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.1 Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>7. </TD>

<TD>DOORBELL transaction </TD>

<TD>Part 2, Sec. 3.3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 7A. DETAIL: Received DOORBELL packet is longer than allowed. </TD>

<TD>Part 2, Sec. 4.2.4 Part 2, Sec. 4.3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 7B. DETAIL: Received DONE response using a TID that is not in use. </TD>

<TD/>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>Illegal response for given request type </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>Chapter 7 Logical Layer OptionalFunctionality Checklists </P>

<Sect>
<H2>7.1 Introduction </H2>

<P>This chapter contains the optional I/O and Message Passing logical functionality inter-operability and certification checklists for 8/16 LP-LVDS and 1x/4x LP-Serial compliant devices. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The optional I/O and Message Passing layer inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>7.2 Atomic clear compliance lists </H2>

<P>A device supporting the atomic clear operation must meet these additional Logical Layer specification compliance requirements. </P>

<Sect>
<H3>7.2.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-1. Atomic clear target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic clear operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC clear transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC clear response returns unmodified read data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: Logic 0s are written after the data is read </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.2.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-2. Atomic clear source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Atomic clear operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>ATOMIC clear can only request 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.2.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-3. Atomic clear detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>ATOMIC clear request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.3 Atomic increment compliance lists </H2>

<P>A device supporting the atomic increment operation must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.3.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-4. Atomic increment target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic increment operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC increment transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC increment response returns unmodified read data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: Read data is incremented then written to memory </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.3.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-5. Atomic increment source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Atomic increment operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>ATOMIC increment can only request 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.3.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-6. Atomic increment detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>ATOMIC increment request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.4 Atomic decrement compliance lists </H2>

<P>A device supporting the atomic decrement operation must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.4.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-7. Atomic decrement target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic decrement operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC decrement transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC decrement response returns unmodified read data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: Read data is decremented then written to memory </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.4.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-8. Atomic decrement source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Atomic decrement operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>ATOMIC decrement can only request 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.4.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-9. Atomic decrement detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>ATOMIC decrement request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.5 Atomic test-and-swap compliance lists </H2>

<P>A device supporting the atomic test-and-swap operation must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.5.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-10. Atomic test-and-swap target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic test-and-swap operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC test-and-swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC test-and-swap response returns unmodified read data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: ATOMIC test-and-swap compares read data to 0 and writes with supplied data if compare is true </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.5.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-11. Atomic test-and-swap source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic test-and-swap operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC test-and-swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC test-and-swap can only request 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: ATOMIC test-and-swap transaction must have a data payload </TD>

<TD>Part 1, Sec. 3.3.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.5.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-12. Atomic test-and-swap detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Atomic test-and-swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: ATOMIC test-and-swap request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: ATOMIC test-and-swap transaction does not have a data payload </TD>

<TD>Part 1, Sec. 3.3.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: Response to ATOMIC test-and-swap transaction does not have a data payload </TD>

<TD>Part 1, Sec. 4.1.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.6 Atomic swap compliance lists </H2>

<P>A device supporting the atomic swap operation must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.6.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-13. Atomic swap target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic swap operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC swap response returns unmodified read data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: ATOMIC swap unconditionally writes with supplied data. </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.6.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-14. Atomic swap source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic swap operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC swap can only request 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: ATOMIC swap transaction must have a data payload </TD>

<TD>Part 1, Sec. 3.3.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.6.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-15. Atomic swap detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Atomic swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: ATOMIC swap request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: ATOMIC swap transaction does not have a data payload </TD>

<TD>Part 1, Sec. 3.3.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: Response to ATOMIC swap transaction does not have a data payload </TD>

<TD>Part 1, Sec. 4.1.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.7 Atomic compare-and-swap compliance lists </H2>

<P>A device supporting the atomic compare-and-swap operation must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.7.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-16. Atomic compare-and-swap target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Destination Operations CAR must indicate target support for </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic compare-and-swap operations </TD>

<TD>Part 1, Sec. 5.4.8 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC compare-and-swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC compare-and-swap response returns unmodified read data </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: Read-modify-write operation is never interrupted by another operation to the same address </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: ATOMIC compare-and-swap compares read data to the first 8 bytes of the payload. If they are equal, it writes the second 8 bytes of payload to the memory location. </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.7.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-17. Atomic compare-and-swap source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Source Operations CAR must indicate source support for </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Generic </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TH/>

<TD>• 1A. DETAIL: Atomic compare-and-swap operations </TD>

<TD>Part 1, Sec. 5.4.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>ATOMIC compare-and-swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 2A. DETAIL: ATOMIC compare-and-swap can only request 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: ATOMIC compare-and-swap transaction must have a data payload </TD>

<TD>Part 1, Sec. 3.3.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 2C. DETAIL: ATOMIC compare-and-swap transaction data payload must be two double words (16-bytes). This is different than other ATOMIC transactions. </TD>

<TD>Part 1, Sec. 4.1.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.7.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-18. Atomic compare-and-swap detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Atomic compare-and-swap transaction </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: ATOMIC compare-and-swap request is for other than 1, 2, or 4 bytes </TD>

<TD>Part 1, Sec. 3.3.4 Part 1, Sec. 4.1.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: ATOMIC compare-and-swap transaction does not have a data payload </TD>

<TD>Part 1, Sec. 3.3.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: Response to ATOMIC compare-and-swap transaction does not have a data payload </TD>

<TD>Part 1, Sec. 4.1.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: Response to ATOMIC compare-and-swap transaction data payload must be two double words (16-bytes). </TD>

<TD>Part 1, Sec. 4.1.7 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.8 Doorbell compliance lists </H2>

<P>A device supporting the doorbell operation must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.8.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-19. Doorbell target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>DOORBELL transaction </TD>

<TD>Part 2, Sec. 3.3.1 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Response to a DOORBELL transaction packet never has a data payload </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>DOORBELL transaction packets are placed in the doorbell message queue within the processing element </TD>

<TD>Part 2, Sec. 3.3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.8.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-20. Doorbell source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>DOORBELL transaction </TD>

<TD>Part 2, Sec. 3.3.1 Part 2, Sec. 4.2.4 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: Send srcTID = 0-255, info field - 16 bytes </TD>

<TD>Part 2, Sec. 4.2.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: DOORBELL transaction packets never have data payloads </TD>

<TD>Part 2, Sec. 4.2.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: A “RETRY” response may cause the DOORBELL packet to be re-issued. A transaction request that is retried must be transmitted in order to complete. </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: Send multiple outstanding doorbells to different Transaction ID’s. Responses must be associated with the correct doorbell (targetTID). </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.8.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-21. Doorbell detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>DOORBELL transaction </TD>

<TD>Part 2, Sec. 3.3.1 Part 2, Sec. 4.2.4 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: DOORBELL transaction packet has a data payload </TD>

<TD>Part 2, Sec. 4.2.4 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 1B. DETAIL: Response to DOORBELL transaction packets has a data payload </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>DOORBELL transaction packets are not placed in the doorbell message queue </TD>

<TD>Part 2, Sec. 3.3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>
</Sect>

<Sect>
<H2>7.9 Data message compliance lists </H2>

<P>A device supporting data message operations to mailboxes 1, 2, or 3 or containing mailboxes 1, 2, or 3 must meet these additional Logical layer specification compliance requirements. </P>

<Sect>
<H3>7.9.1 Target transaction support compliance list </H3>

<P>This is the list for the device as a transaction target. </P>

<Table>
<Caption>
<P>Table 7-22. Data message target transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD/>

<TD>• 1A. DETAIL: Receive msglen = 0-15 = 1-16 packets ssize = 8,16,32,64,128,256B mbox = 0-3 letter = 0-3 msgseg &lt;= msglen (or xmbox 0-15) </TD>

<TD>Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 1B. DETAIL: Verify correct receipt of out of order message segments. </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD/>

<TD>• 1C. DETAIL: Response to a MESSAGE transaction packet never has a data payload </TD>

<TD>Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>2. </TD>

<TD>MESSAGE transaction packets are placed in the targeted mailbox within the processing element </TD>

<TD>Part 2, Sec. 3.3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.9.2 Source transaction support compliance list </H3>

<P>This is the list for the device as a transaction source. </P>

<Table>
<Caption>
<P>Table 7-23. Data message source transaction support list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: Send msglen = 0-15 = 1-16 packets ssize = 8,16,32,64,128,256B mbox = 0-3 letter = 0-3 msg_seg &lt;= msglen (or xmbox 0-15) </TD>

<TD>Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: MESSAGE packets always have data payloads </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: MESSAGE data payload is a multiple of 8 bytes in size. </TD>

<TD>Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: Up to 16 individual MESSAGE transactions are allowed in one data message operation </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1E. DETAIL: A “RETRY” response may cause the MESSAGE packet to be re-issued. A transaction request that is retried must be transmitted in order to complete. </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1F. DETAIL: All packets for a message operation have the same mbox and letter field values </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1G. DETAIL: Device generates the number of packets specified in the msglen field for a message operation </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1H. DETAIL: All packets for a message operation must be of the same size and of the size specified in the ssize field (exception: data payload for the last packet in a message operation can be less than the size specified in the ssize field) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1I. DETAIL: Send multiple outstanding messages to common mbox &amp; letter but different msgseg/xmbox. Responses must be associated with the correct message (target_info). </TD>

<TD>Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H3>7.9.3 Detectable errors compliance list </H3>

<P>Logical layer errors are generally not recoverable in hardware. They may be recoverable in software. The device is always the target of a packet for error detection. </P>

<Table>
<Caption>
<P>Table 7-24. Data message detectable errors list </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>MESSAGE transaction </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 Part 2, Sec. 4.3.3 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>

<TR>
<TD>• 1A. DETAIL: Received MESSAGE packet has no data payload </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: MESSAGE transaction data payload is not a multiple of 8 bytes in size </TD>

<TD>Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1C. DETAIL: More than 16 individual MESSAGE transactions are used in one data message operation </TD>

<TD>Part 2, Sec. 3.3.2 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1D. DETAIL: msgseg value is greater than msglen value </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1E. DETAIL: msgseg value is repeated and there was not a “RETRY” response for the previous usage </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1F. DETAIL: Received MESSAGE packet data payload is not of the size specified in the ssize field (exception for last packet which may be less) </TD>

<TD>Part 2, Sec. 3.3.2 Part 2, Sec. 4.2.5 </TD>

<TD>Class 3 </TD>

<TD/>
</TR>

<TR>
<TD>• 1G. DETAIL: Logical timeout on message transaction causes retransmission </TD>

<TD>Part 2, Sec. 3.1 </TD>

<TD>Class 3 </TD>

<TD>Inter-op </TD>
</TR>
</Table>

<P>Blank Page </P>

<P>Chapter 8 Multicast Checklists </P>
</Sect>
</Sect>
</Sect>

<Sect>
<H2>8.1 Introduction </H2>

<P>This chapter contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for devices supporting the </P>

<P>RapidIO Interconnect Specification Part 11: Multicast Extensions Specification, Revision 1.3.1. </P>

<P>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in Part 7: System and Device Inter-operability Specification, Rev. 1.3. </P>

<P>The last column, ‘Inter-op Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-op Item’ column with the word ‘Inter-op’ can be made to work between two devices. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite. A standard test suite does not yet exist. </P>

<P>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </P>

<P>The multicast inter-operability and certification checklist is broken down into a number of sub-lists. </P>
</Sect>

<Sect>
<H2>8.2 Behavioral Certification List </H2>

<P>This section specifies general requirements for a compliant device which supports multicast functionality. </P>

<P>Reads and writes to CSRs and CARs are reference from RapidIO transactions received by a device. </P>

<Table>
<Caption>
<P>Table 8-1. Multicast Packet Behavior Certification List </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TD>1. </TD>

<TD>Packets multicast are not modified by the multicasting device. </TD>

<TD>Part 11, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>2. </TD>

<TD>The destination ID of a packet is used to determine if the packet will be multicast. </TD>

<TD>Part 11, Sec. 2.1 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>3. </TD>

<TD>There is one set of multicast masks for the entire switch. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>4. </TD>

<TD>When the destination ID of a packet matches that of a destination ID associated with a multicast mask, the packet is multicast to all egress ports configured in the multicast mask, except that a packet is never multicast out of the port that it was received on. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>5. </TD>

<TD>The defined CSRs allow multicast masks to be configured. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>6. </TD>

<TD>The implementation of the defined CSRs allow a destination ID to be associated with at most one multicast mask per port. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>7. </TD>

<TD>The last association operation performed for a destination ID dictates which multicast mask is associated with that destination ID. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>8. </TD>

<TD>Packets to be multicast using a multicast mask with no egress ports selected are dropped without error notification. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>9. </TD>

<TD>The state of multicast masks after reset is that no egress ports are selected. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>10. </TD>

<TD>After reset, no destination IDs are associated with multicast masks. </TD>

<TD>Part 11, Sec. 2.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>11. </TD>

<TD>Multicast packets in the same multicast group with the same flowID received on the same ingress port are multicast on egress ports in the same order they were received on the ingress port. </TD>

<TD>Part 11, Sec. 2.4 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>12. </TD>

<TD>Packets which do not require a response can be multicast. Packets which do require a response result in implementation specific behavior. </TD>

<TD>Part 11, Sec. 2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>
</Sect>

<Sect>
<H2>8.3 Multicast Programming Model Certification Lists </H2>

<P>This is the list of requirements for the multicast registers and programming model. </P>

<Table>
<Caption>
<P>Table 8-2. Multicast Programming Model Certification List </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>1. </TH>

<TD>Processing Element Features CAR </TD>

<TD>Part 11, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1A. DETAIL: If the device supports the multicast extensions, bit 21 of the Processing Element Features CAR has a value of 1. </TD>

<TD>Part 11, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 1B. DETAIL: Bit 21 of the Processing Element Features CAR is read only. </TD>

<TD>Part 11, Sec. 3.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>2. </TH>

<TD>Switch Multicast Support CAR is read only, and is compliant with the following: </TD>

<TD>Part 11, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2A. DETAIL: If device supports the ‘simple association’ model, bit 0 has a value of 1. If the device does not support the ‘simple association’ model, bit 0 has a value of 0. </TD>

<TD>Part 11, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 2B. DETAIL: If device supports the ‘simple association’ model, the Switch Multicast Information CAR must indicate support for block association operations. </TD>

<TD>Part 11, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>3. </TH>

<TD>Switch Multicast Information CAR is read only, and compliant with the following: </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3A. DETAIL: If the device supports block association operations, bit 0 has a value of 1. If block association operations are not supported, bit 0 has a value of 0. </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3B. DETAIL: If the device supports per port association operations, bit 1 has a value of 1. If per port association operations are not supported, bit 1 has a value of 0. </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3C. DETAIL: The maximum number of destination IDs that can be associated with a single multicast mask is contained in bits 2 through 15. </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3D. DETAIL: The number of multicast masks that exist in the device is contained in bits 16 through 31. </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 3E. DETAIL: The maximum number of destination IDs/multicast masks that can be programmed using a block association operation is contained in bits 16 through 31. </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>4. </TH>

<TD>The Multicast Mask Port CSR operates correctly. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4A. DETAIL: Associations between destination IDs and multicast masks are not affected by any read or write operation performed on the Multicast Mask Port CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4B. DETAIL: The index of the multicast mask that is the subject of the register operations is contained in bits 0 through 15 (Mcast_Mask). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4C. DETAIL: The egress port that is the subject of the multicast mask operations is contained in bits 16 through 23 (Egress_Port_Num). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4D. DETAIL: The command value that indicates which multicast mask operation to perform is contained in bits 25-27 (Mask_Cmd). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4E. DETAIL: All multicast Mask_Cmd commands operate correctly when the value in the Mcast_Mask field is less than the value of the MaxMcastMasks field in the Switch Multicast Information CAR. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.5 Part 11, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4F. DETAIL: All multicast Mask_Cmd commands operate correctly when the value in the Egress_Port_Num field is less than the value of the Port_Total field in the Switch Port Information CAR. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.5 Part 11, Sec. 4.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4G. DETAIL: All multicast Mask_Cmd commands operate correctly when the value in the Mask_Cmd field is that of a defined command (0b000, 0b001, 0b010, 0b100, 0b101). </TD>

<TD>Part 11, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4H. DETAIL: The capability to perform Write-to-Verify commands must be present. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2.4 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>• 4H1. DETAIL: When the Multicast Mask Port CSR is written with a Mask_Cmd field value of 0b000, the set of egress ports enabled for each multicast masks is not affected. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4H2. DETAIL: The value of Port_Present after a Write_to_Verify command is unchanged until the next Write_to_Verify command is written to the Multicast Mask Port CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4H3. DETAIL: Bit 31 is read as 1 after a Write_to_Verify command is written to the Multicast Mask Port CSR only when the specified egress port in the specified multicast mask is enabled. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 4I. DETAIL: The capability to perform Add_Port commands must be present. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2.2 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>• 4I1. DETAIL: When a register write to the Multicast Mask Port CSR occurs with a value of 0b001 in the Mask_Cmd field, the egress port identified by the value in the Egress_Port_Num field is enabled in the multicast mask identified by the value in the Mcast_Mask field. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4J. DETAIL: The capability to perform Delete_Port commands must be present. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2.3 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>• 4J1. DETAIL: When a register write to the Multicast Mask Port CSR occurs with a value of 0b010 in the Mask_Cmd field, the egress port identified by the value in the Egress_Port_Num field is disabled in the multicast mask identified by the value in the Mcast_Mask field. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4K. DETAIL: The capability perform Delete_All_Ports commands must be present. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4K1. DETAIL: When a register write to the Multicast Mask Port CSR occurs with a value of 0b100 in the Mask_Cmd field, all egress ports are disabled in the multicast mask identified by the value in the Mcast_Mask field. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2.1 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4K2. DETAIL: When a register write to the Multicast Mask Port CSR occurs with a value of 0b100 in the Mask_Cmd field, the value in the Egress_Port_Num field does not affect the operation of the command. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4L. DETAIL: The capability to perform Add_All_Ports commands must be present. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 4.2.2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4L1. DETAIL: When a register write to the Multicast Mask Port CSR occurs with a value of 0b101 in the Mask_Cmd field, all egress ports are enabled in the multicast mask identified by the value in the Mcast_Mask field. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4L2. DETAIL: When a register write to the Multicast Mask Port CSR occurs with a value of 0b101 in the Mask_Cmd field, the value in the Egress_Port_Num field does not affect the operation of the command. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 4M. DETAIL: After reset, the Multicast Mask Port CSR value is 0x00000000. </TD>

<TD>Part 11, Sec. 3.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH>5. </TH>

<TD>The Multicast Associate Select CSR operates correctly. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5A. DETAIL: The egress ports selected in each multicast mask are not affected by any read or write operation performed on the Multicast Associate Select CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5B. DETAIL: The associations between destination IDs and multicast masks are not affected by any read or write operation performed on the Multicast Associate Select CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5C. DETAIL: The most significant 8 bits of the large (16 bit) destination ID that is the subject of associate operations is contained in bits 0 through 7 (Large_DestID). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5D. DETAIL: The least significant 8 bits of the destination ID that is the subject of associate operations is contained in bits 8 through 15 (DestID). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5E. DETAIL: The index of the multicast mask that is the subject of associate operations is contained in bits 16 through 31 (Mcast_Mask_Num). </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5G. DETAIL: Multicast Assoc_Cmd commands operate correctly when the value in the Mcast_Mask_Num field is less than the value of the MaxMcastMasks field in the Switch Multicast Information CAR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 5H. DETAIL: After a reset, the value of the Multicast Associate Select CSR is 0x00000000. </TD>

<TD>Part 11, Sec. 3.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH>6. </TH>

<TD>The Multicast Associate Operation CSR operates correctly. </TD>

<TD>Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6A. DETAIL: The egress ports selected in each multicast mask are not affected by any read or write operation performed on the Multicast Associate Operation CSR. </TD>

<TD>Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6B. DETAIL: The number of sequential destination IDs and multicast masks to be affected by an associate operation can be controlled by the value in bits 0 to 15 (Assoc_Blksize) of the Multicast Associate Operation CSR only if bit 0 in the Switch Multicast Information CAR has a value of 1. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6C. DETAIL: The ingress port for an associate operation can be controlled by the value in bits 16 to 23 (Ingress_Port) of the Multicast Associate Operation CSR only if bit 1 in the Switch Multicast Information CAR has a value of 1. </TD>

<TD>Part 11, Sec. 3.5 Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 6D. DETAIL: The Large_DestID field in the Multicast Associate Select CSR is used to select the destination ID for an associate operation only when bit 24 (Large_Transport) in the Multicast Associate Operation CSR has a value of 1. </TD>

<TD>Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6E. DETAIL: Selection of the specific associate </TD>

<TD>Part 11, Sec. 3.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>operation is controlled by bits 25 and 26 </TD>

<TD>Part 11, Sec. 4.3 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>(Assoc_Cmd) in the Multicast Associate Operation CSR. </TD>

<TD>Part 11, Sec. 4.4 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 6F. DETAIL: Multicast Assoc_Cmd commands </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>operate correctly when bit 1 in the Switch </TD>

<TD>Part 11, Sec. 3.7 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>Multicast Information CAR has a value of 1 and </TD>

<TD>Part 11, Sec. 4.3 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>the value in the Ingress_Port field is less than the value of the Port_Total field in the Switch Port </TD>

<TD>Part 11, Sec. 4.4 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>Information CAR. </TD>

<TD/>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 6G. DETAIL: Multicast Assoc_Cmd commands operate correctly when bit 0 in the Switch Multicast Information CAR has: a value of 1 AND the value in the Mcast_Mask_Num field of the Switch Multicast Select CSR added to the value of the Assoc_Blksize field in the Multicast Associate Operation CSR is less than the value of the MaxMcastMasks field in the Switch Multicast Information CAR. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6H. DETAIL: Multicast Assoc_Cmd commands operate correctly when bit 0 in the Switch Multicast Information CAR has: a value of 1 AND the Large_DestID/DestID fields added to the value of Assoc_Blksize is not greater than the maximum destination ID, as indicated by the Large_Transport field in the Switch Multicast Operation CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6I. DETAIL: When the Assoc_Cmd value is written to a value defined in the specification (0b00, 0b10, 0b11), the function defined in the specification is performed correctly. </TD>

<TD>Part 11, Sec. 3.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6J. DETAIL: The capability to perform Write_To_Verify commands must be present. </TD>

<TD>Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.4.6 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>• 6J1. DETAIL: When the Multicast Associate Operation CSR is written with an Assoc_Cmd field value of 0b00, associations between any destination ID and any multicast mask are not affected. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<Caption>
<P>Table 8-2. Multicast Programming Model Certification List </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 6J2. DETAIL: After a write to the Multicast Associate Operation CSR when the Assoc_Cmd field value is 0b00, a read of the Multicast Associate Operation CSR has a value of 1 in bit 31 only if an association exists between the destination ID and multicast mask specified by the values of the Large_DestID, DestID and Mcast_Mask_Num fields in the Multicast Associate Select CSR and the value of the Large_Transport and Ingress Port (if bit 1 in the Switch Multicast Information CAR has a value of 1) fields in the Multicast Associate Operation CSR. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.4.6 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6J3. DETAIL: A read of the Multicast Associate </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>Operation CSR returns 1 in bit 31 to indicate an </TD>

<TD>Part 11, Sec. 3.6 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>association exists between the destination ID and </TD>

<TD>Part 11, Sec. 3.7 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>multicast mask specified by the current values of the Large_DestID, DestID and Mcast_Mask_Num fields in the Multicast Associate Select CSR and the value of the Large_Transport and Ingress Port (if bit 1 in the Switch Multicast Information CAR has a value of 1) fields in the Multicast Associate Operation CSR only if the Assoc_Cmd field value is 0b00. </TD>

<TD>Part 11, Sec. 4.4.6 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 6K. DETAIL: The capability to perform Delete_Assoc commands must be present. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.4.5 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>• 6K1. DETAIL: WHEN the Block_Assoc field in the Switch Multicast Information CAR has a value of 0 AND the Multicast Associate Operation CSR is written with an Assoc_Cmd field value of 0b10, THEN any association is removed between the destination ID and multicast mask specified by the current values of the Large_DestID, DestID and Mcast_Mask_Num fields in the Multicast Associate Select CSR and the value of the Large_Transport and Ingress Port (if bit 1 in the Switch Multicast Information CAR has a value of 1) fields in the Multicast Associate Operation CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 6K2. DETAIL: WHEN • the Block_Assoc field in the Switch Multicast Information CAR has a value of 1 • the Multicast Associate Operation CSR is written with an Assoc_Cmd field value of 0b10 •  AND the Large_DestID/DestID fields added to the value of Assoc_Blksize is not greater than the maximum destination ID, as indicated by the Large_Transport field in the Switch Multicast Operation CSR •  THEN any association is removed between the block of destination IDs and multicast masks specified by the current values of the Large_DestID, DestID and Mcast_Mask_Num fields in the Multicast Associate Select CSR and the value of the Large_Transport, Assoc_Blksize and Ingress_Port (if bit 1 in the Switch Multicast Information CAR has a value of 1) fields in the Multicast Associate Operation CSR. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.4.5 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6K3. DETAIL: The associations deleted in 6K2 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>are between the first destination ID and the first </TD>

<TD/>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>multicast mask, the second destination ID and the </TD>

<TD/>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>second multicast mask, the third destination ID </TD>

<TD/>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>and the third multicast mask, and so on. </TD>

<TD/>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 6K4. DETAIL: If bit 1 in the Switch Multicast Information CAR has a value of 1, the associations in 6K1 and 6K2 are removed only on the ingress port selected by the Ingress_Port field value. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6K5. DETAIL: WHEN </TD>

<TD>Part 11, Sec. 3.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• the Delete_Assoc command is written to the </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>Multicast Associate Operation CSR </TD>

<TD>Part 11, Sec. 3.6 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>•  bit 0 of the Switch Multicast Information CAR has a value of 1, •  bit 0 in the Switch Multicast Support CAR has a value of 1, </TD>

<TD>Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4.5 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>•  the Assoc_Blksize field in the Multicast Associate Operation CSR has a value of MaxMCastMasks - 1 • the Mcast_Mask_Num field value is 0 •  AND the Large_DestID/DestID fields added to the value of Assoc_Blksize is not greater than the maximum destination ID, as indicated by the Large_Transport field in the Switch Multicast Operation CSR • THEN the associations specified in 6K3 will be removed. </TD>

<TD/>

<TD/>

<TD/>
</TR>
</Table>

<Table>
<Caption>
<P>Table 8-2. Multicast Programming Model Certification List </P>
</Caption>

<TR>
<TH>Item no. </TH>

<TD>Compliance item </TD>

<TD>Specification reference </TD>

<TD>Device Class (Generic, 1, 2, 3) </TD>

<TD>Inter-op Item </TD>
</TR>

<TR>
<TH/>

<TD>• 6L. DETAIL: The capability to perform Add_Assoc commands must be present. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.4.1 </TD>

<TD>Generic </TD>

<TD>Interop </TD>
</TR>

<TR>
<TD>• 6L1. DETAIL: WHEN • the Block_Assoc field in the Switch Multicast Information CAR has a value of 0 • AND the Multicast Associate Operation CSR is written with an Assoc_Cmd field value of 0b11, • THEN an association is created between the destination ID and multicast mask specified by the current values of the Large_DestID, DestID and Mcast_Mask_Num fields in the Multicast Associate Select CSR and the value of the Large_Transport and Ingress Port (if bit 1 in the Switch Multicast Information CAR has a value of 1) fields in the Multicast Associate Operation CSR. </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6L2. DETAIL: WHEN </TD>

<TD>Part 11, Sec. 3.4 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TH/>

<TD>• the Block_Assoc field in the Switch Multicast </TD>

<TD>Part 11, Sec. 3.6 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>Information CAR has a value of 1 </TD>

<TD>Part 11, Sec. 3.7 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TH/>

<TD>• the Multicast Associate Operation CSR is written with an Assoc_Cmd field value of 0b11 •  AND the Large_DestID/DestID fields added to the value of Assoc_Blksize is not greater than the maximum destination ID controlled by the Large_Transport field in the Switch Multicast Operation CSR •  THEN associations are created between the block of destination IDs and multicast masks specified by the current values of the Large_DestID, DestID and Mcast_Mask_Num fields in the Multicast Associate Select CSR and the value of the Large_Transport, Assoc_Blksize and Ingress Port (if bit 1 in the Switch Multicast Information CAR has a value of 1) fields in the Multicast Associate Operation CSR. </TD>

<TD>Part 11, Sec. 4.4.3 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 6L3. DETAIL: The associations created in 6L2 are between the first destination ID and the first multicast mask, the second destination ID and the second multicast mask, the third destination ID and the third multicast mask, and so on. </TD>

<TD>Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.4.2 Part 11, Sec. 4.4.3 </TD>

<TD>Generic </TD>

<TD/>
</TR>

<TR>
<TD>• 6L4. DETAIL: If bit 1 in the Switch Multicast Information CAR has a value of 1, the associations in 6L1 and 6L2 are created only on the ingress port selected by the Ingress_Port field value. </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<Table>
<TR>
<TH>Item no. </TH>

<TH>Compliance item </TH>

<TH>Specification reference </TH>

<TH>Device Class (Generic, 1, 2, 3) </TH>

<TH>Inter-op Item </TH>
</TR>

<TR>
<TH/>

<TD>• 6M. DETAIL: WHEN • the Add_Assoc command is written to the Multicast Associate Operation CSR •  bit 0 in the Switch Multicast Support CAR has a value of 1 • the Mcast_Mask_Num field in the Multicast Associate Select CSR has a value of 0 •  the Assoc_Blksize field in the Multicast Associate Operation CSR has a value of MaxMCastMasks - 1 •  AND the Large_DestID/DestID fields added to the value of Assoc_Blksize is not greater than the maximum destination ID, as indicated by the Large_Transport field in the Switch Multicast Operation CSR • THEN the multicast associations specified in 6L3 are added. </TD>

<TD>Part 11, Sec. 3.3 Part 11, Sec. 3.4 Part 11, Sec. 3.6 Part 11, Sec. 3.7 Part 11, Sec. 4.3 Part 11, Sec. 4.4.3 </TD>

<TD/>

<TD/>
</TR>

<TR>
<TD>• 6N. DETAIL: After a reset, the Multicast Associate Operation CSR has a value of 0x00000000. </TD>

<TD>Part 11, Sec. 3.7 </TD>

<TD>Generic </TD>

<TD/>
</TR>
</Table>

<P>Blank Page </P>

<P>Blank Page Blank Page </P>
</Sect>
</Part>
</TaggedPDF-doc>
