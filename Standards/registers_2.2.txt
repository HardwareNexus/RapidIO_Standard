'Section', 'Block_ID', 'Bits', 'Field', 'Description'
'5.4.1 Device Identity CAR (Configuration Space Offset 0x0)', 'STD_REG', '0-15', 'DeviceIdentity', 'Device identifier'
'5.4.1 Device Identity CAR (Configuration Space Offset 0x0)', 'STD_REG', '16-31', 'DeviceVendorIdentity', 'Device vendor identifier'
'5.4.2 Device Information CAR (Configuration Space Offset 0x4)', 'STD_REG', '0-31', 'DeviceRev', 'Device revision level'
'5.4.3 Assembly Identity CAR (Configuration Space Offset 0x8)', 'STD_REG', '0-15', 'AssyIdentity', 'Assembly identifier'
'5.4.3 Assembly Identity CAR (Configuration Space Offset 0x8)', 'STD_REG', '16-31', 'AssyVendorIdentity', 'Assembly vendor identifier'
'5.4.4 Assembly Information CAR (Configuration Space Offset 0xC)', 'STD_REG', '0-15', 'AssyRev', 'Assembly revision level'
'5.4.4 Assembly Information CAR (Configuration Space Offset 0xC)', 'STD_REG', '16-31', 'ExtendedFeaturesPtr', 'Pointer to the first entry in the extended features list'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '0', 'Bridge', 'PE can bridge to another interface. Examples are PCI, proprietary processor buses, DRAM, etc.'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '1', 'Memory', 'PE has physically addressable local address space and can be accessed as an end point through non-maintenance (i.e. non-coherent read and write) operations. This local address space may be limited to local configuration registers, or could be on-chip SRAM, etc.'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '2', 'Processor', 'PE physically contains a local processor or similar device that executes code. A device that bridges to an interface that connects to a processor does not count (see bit 0 above).'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '3', 'Switch', 'PE can bridge to another external RapidIO interface - an internal port to a local end point does not count as a switch port. For example, a device with two RapidIO ports and a local end point is a two port switch, not a three port switch, regardless of the internal architecture.'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '4-27', '—', 'Reserved'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '28', 'Extended features', 'PE has extended features list; the extended features pointer is valid'
'5.4.5 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '29-31', 'Extended addressing support', 'Indicates the number address bits supported by the PE both as a source and target of an operation. All PEs shall at minimum support 34 bit addresses. 0b111 - PE supports 66, 50, and 34 bit addresses 0b101 - PE supports 66 and 34 bit addresses 0b011 - PE supports 50 and 34 bit addresses 0b001 - PE supports 34 bit addresses All other encodings reserved'
'5.4.6 Switch Port Information CAR (Configuration Space Offset 0x14)', 'STD_REG', '0-15', '—', 'Reserved'
'5.4.6 Switch Port Information CAR (Configuration Space Offset 0x14)', 'STD_REG', '16-23', 'PortTotal', 'The maximum number of external RapidIO ports on the processing element 0b00000000 - Reserved 0b00000001 - Reserved 0b00000010 - 2 ports 0b00000011 - 3 ports 0b00000100 - 4 ports ... 0b11111111 - 255 ports'
'5.4.6 Switch Port Information CAR (Configuration Space Offset 0x14)', 'STD_REG', '24-31', 'PortNumber', 'This is the external port number from which the maintenance read operation accessed this register. Ports are numbered starting with 0x00.'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '0-13', '—', 'Reserved'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '14-15', 'Implementation Defined', 'Defined by the device implementation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '16', 'Read', 'PE can support a read operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '17', 'Write', 'PE can support a write operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '18', 'Streaming-write', 'PE can support a streaming-write operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '19', 'Write-with-response', 'PE can support a write-with-response operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '20-21', '—', 'Reserved'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '22', 'Atomic (compare-and-swap)', 'PE can support an atomic compare-and-swap operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '23', 'Atomic (test-and-swap)', 'PE can support an atomic test-and-swap operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '24', 'Atomic (increment)', 'PE can support an atomic increment operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '25', 'Atomic (decrement)', 'PE can support an atomic decrement operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '26', 'Atomic (set)', 'PE can support an atomic set operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '27', 'Atomic (clear)', 'PE can support an atomic clear operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '28', 'Atomic (swap)', 'PE can support an atomic swap operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '29', 'Port-write', 'PE can support a port-write operation'
'5.4.7 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '30-31', 'Implementation Defined', 'Defined by the device implementation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '0-13', '—', 'Reserved'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '14-15', 'Implementation Defined', 'Defined by the device implementation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '16', 'Read', 'PE can support a read operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '17', 'Write', 'PE can support a write operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '18', 'Streaming-write', 'PE can support a streaming-write operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '19', 'Write-with-response', 'PE can support a write-with-response operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '20-21', '—', 'Reserved'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '22', 'Atomic (compare-and-swap)', 'PE can support an atomic compare-and-swap operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '23', 'Atomic (test-and-swap)', 'PE can support an atomic test-and-swap operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '24', 'Atomic (increment)', 'PE can support an atomic increment operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '25', 'Atomic (decrement)', 'PE can support an atomic decrement operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '26', 'Atomic (set)', 'PE can support an atomic set operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '27', 'Atomic (clear)', 'PE can support an atomic clear operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '28', 'Atomic (swap)', 'PE can support an atomic swap operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '29', 'Port-write', 'PE can support a port-write operation'
'5.4.8 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '30-31', 'Implementation Defined', 'Defined by the device implementation'
'5.5.1 Processing Element Logical Layer Control CSR (Configuration Space Offset 0x4C)', 'STD_REG', '0-28', '—', 'Reserved'
'5.5.1 Processing Element Logical Layer Control CSR (Configuration Space Offset 0x4C)', 'STD_REG', '29-31', 'Extended addressing control', 'Controls the number of address bits generated by the PE as a source and processed by the PE as the target of an operation. 0b100 - PE supports 66 bit addresses 0b010 - PE supports 50 bit addresses 0b001 - PE supports 34 bit addresses (default) All other encodings reserved'
'5.5.2 Local Configuration Space Base Address 0 CSR (Configuration Space Offset 0x58)', 'STD_REG', '0', '—', 'Reserved'
'5.5.2 Local Configuration Space Base Address 0 CSR (Configuration Space Offset 0x58)', 'STD_REG', '1-16', 'LCSBA', 'Reserved for a 34-bit local physical address Reserved for a 50-bit local physical address Bits 0-15 of a 66-bit local physical address'
'5.5.2 Local Configuration Space Base Address 0 CSR (Configuration Space Offset 0x58)', 'STD_REG', '17-31', 'LCSBA', 'Reserved for a 34-bit local physical address Bits 0-14 of a 50-bit local physical address Bits 16-30 of a 66-bit local physical address'
'5.5.3 Local Configuration Space Base Address 1 CSR (Configuration Space Offset 0x5C)', 'STD_REG', '0', 'LCSBA', 'Reserved for a 34-bit local physical address Bit 15 of a 50-bit local physical address Bit 31 of a 66-bit local physical address'
'5.5.3 Local Configuration Space Base Address 1 CSR (Configuration Space Offset 0x5C)', 'STD_REG', '1-31', 'LCSBA', 'Bits 0-30 of a 34-bit local physical address Bits 16-46 of a 50-bit local physical address Bits 32-62 of a 66-bit local physical address'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '0-13', '—', 'Reserved'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '14-15', 'Implementation Defined', 'Defined by the device implementation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '16-19', '—', 'Reserved'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '20', 'Data message', 'PE can support a data message operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '21', 'Doorbell', 'PE can support a doorbell operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '22-29', '—', 'Reserved'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '30-31', 'Implementation Defined', 'Defined by the device implementation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '0-13', '—', 'Reserved'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '14-15', 'Implementation Defined', 'Defined by the device implementation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '16-19', '—', 'Reserved'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '20', 'Data message', 'PE can support a data message operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '21', 'Doorbell', 'PE can support a doorbell operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '22-29', '—', 'Reserved'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '30-31', 'Implementation Defined', 'Defined by the device implementation'
'3.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '0-21', '—', 'Reserved'
'3.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '22', 'Extended route table configuration support', '0b0 - Switch PE does not support the extended route table configuration mechanism 0b1 - Switch PE supports the extended route table configuration mechanism (can only be set if bit 23 is set)'
'3.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '23', 'Standard route table configuration support', '0b0 - Switch PE does not support the standard route table configuration mechanism 0b1 - Switch PE supports the standard route table configuration mechanism'
'3.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '24-26', '—', 'Reserved'
'3.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '27', 'Common transport large system support', '0b0 - PE does not support common transport large systems 0b1 - PE supports common transport large systems'
'3.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '28-31', '—', 'Reserved'
'3.4.2 Switch Route Table Destination ID Limit CAR (Configuration Space Offset 0x34)', 'STD_REG', '0-15', '—', 'Reserved'
'3.4.2 Switch Route Table Destination ID Limit CAR (Configuration Space Offset 0x34)', 'STD_REG', '16-31', 'Max_destID', 'Maximum configurable destination ID 0x0000 - 1 destination ID 0x0001 - 2 destination IDs 0x0002 - 3 destination IDs ... 0xFFFF - 65536 destination IDs'
'3.5.1 Base Device ID CSR (Configuration Space Offset 0x60)', 'STD_REG', '0-7', '—', 'Reserved'
'3.5.1 Base Device ID CSR (Configuration Space Offset 0x60)', 'STD_REG', '8-15', 'Base_deviceID', 'see footnote1', 'This is the base ID of the device in a small common transport system (end point devices only)'
'3.5.1 Base Device ID CSR (Configuration Space Offset 0x60)', 'STD_REG', '16-31', 'Large_base_deviceID', 'see footnote2', 'This is the base ID of the device in a large common transport system (only valid for end point device and if bit 27 of the Processing Element Features CAR is set)'
'3.5.2 Host Base Device ID Lock CSR (Configuration Space Offset 0x68)', 'STD_REG', '0-15', '—', 'Reserved'
'3.5.2 Host Base Device ID Lock CSR (Configuration Space Offset 0x68)', 'STD_REG', '16-31', 'Host_base_deviceID', '0xFFFF', 'This is the base device ID for the PE that is initializing this PE.'
'3.5.3 Component Tag CSR (Configuration Space Offset 0x6C)', 'STD_REG', '0-31', 'component_tag', 'All 0s', 'This is a component tag for the PE.'
'3.5.4 Standard Route Configuration Destination ID Select CSR (Configuration Space Offset 0x70)', 'STD_REG', '0', 'Ext_config_en', '0b0', 'Extended Configuration Enable 0b0 - Extended configuration support is disabled 0b1 - Extended configuration support is enabled (only valid if bit 22 of the Processing Element Features CAR is set)'
'3.5.4 Standard Route Configuration Destination ID Select CSR (Configuration Space Offset 0x70)', 'STD_REG', '1-15', '—', 'Reserved'
'3.5.4 Standard Route Configuration Destination ID Select CSR (Configuration Space Offset 0x70)', 'STD_REG', '16-23', 'Config_destID_msb', '0x00', 'Configuration destination ID most significant byte (only valid if bit 27 of the Processing Element Features CAR is set and the processing element is configured to operate in large transport mode)'
'3.5.4 Standard Route Configuration Destination ID Select CSR (Configuration Space Offset 0x70)', 'STD_REG', '24-31', 'Config_destID', '0x00', 'Configuration destination ID'
'3.5.5 Standard Route Configuration Port Select CSR (Configuration Space Offset 0x74)', 'STD_REG', '0-7', 'Config_output_port3', '0x00', 'Configuration output port3 - This field is reserved if extended route table mechanism is not enabled'
'3.5.5 Standard Route Configuration Port Select CSR (Configuration Space Offset 0x74)', 'STD_REG', '8-15', 'Config_output_port2', '0x00', 'Configuration output port2 - This field is reserved if extended route table mechanism is not enabled'
'3.5.5 Standard Route Configuration Port Select CSR (Configuration Space Offset 0x74)', 'STD_REG', '16-23', 'Config_output_port1', '0x00', 'Configuration output port1 - This field is reserved if extended route table mechanism is not enabled'
'3.5.5 Standard Route Configuration Port Select CSR (Configuration Space Offset 0x74)', 'STD_REG', '24-31', 'Config_output_port', 'see footnote1', 'Configuration output port'
'3.5.6 Standard Route Default Port CSR (Configuration Space Offset 0x78)', 'STD_REG', '0-23', '—', 'Reserved'
'3.5.6 Standard Route Default Port CSR (Configuration Space Offset 0x78)', 'STD_REG', '24-31', 'Default_output_port', '0x00', 'Default output port'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '0', 'Read', 'PE can support a read operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '1', 'Instruction read', 'PE can support an instruction read operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '2', 'Read-for-ownership', 'PE can support a read-for-ownership operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '3', 'Data cache invalidate', 'PE can support a data cache invalidate operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '4', 'Castout', 'PE can support a castout operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '5', 'Data cache flush', 'PE can support a data cache flush operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '6', 'I/O read', 'PE can support an I/O read operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '7', 'Instruction cache invalidate', 'PE can support an instruction cache invalidate operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '8', 'TLB invalidate-entry', 'PE can support a TLB invalidate-entry operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '9', 'TLB invalidate-entry sync', 'PE can support a TLB invalidate-entry sync operation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '10-13', '—', 'Reserved'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '14-15', 'Implementation Defined', 'Defined by the device implementation'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '16-29', '—', 'Reserved'
'5.4.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '30-31', 'Implementation Defined', 'Defined by the device implementation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '0', 'Read', 'PE can support a read operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '1', 'Instruction read', 'PE can support an instruction read operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '2', 'Read-for-ownership', 'PE can support a read-for-ownership operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '3', 'Data cache invalidate', 'PE can support a data cache invalidate operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '4', 'Castout', 'PE can support a castout operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '5', 'Data cache flush', 'PE can support a flush operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '6', 'I/O read', 'PE can support an I/O read operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '7', 'Instruction cache invalidate', 'PE can support an instruction cache invalidate operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '8', 'TLB invalidate-entry', 'PE can support a TLB invalidate-entry operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '9', 'TLB invalidate-entry sync', 'PE can support a TLB invalidate-entry sync operation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '10-13', '—', 'Reserved'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '14-15', 'Implementation Defined', 'Defined by the device implementation'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '16-29', '—', 'Reserved'
'5.4.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '30-31', 'Implementation Defined', 'Defined by the device implementation'
'6.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '0-3', '—', 'Reserved'
'6.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '4', 'Multiport', 'The bit shall be implemented by devices that support the LP-Serial IDLE2 sequence, but is optional for devices that do not support the LP-Serial IDLE2 sequence. If this bit is not implemented it is Reserved. If this bit is implemented, the Switch Port Information CAR at Configuration Space Offset 0x14 (see RapidIO Part 1: I/O Logical Specification) shall be implemented regardless of the state of bit 3 of the Processing Element Features CAR. Indicates whether the PE implements multiple external RapidIO ports 0b0 - PE does not implement multiple external RapidIO ports 0b1 - PE implements multiple external RapidIO ports'
'6.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '5-24', '—', 'Reserved'
'6.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '25', 'Implementation-defined', 'Implementation-defined'
'6.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '26', 'CRF Support', 'PE supports the Critical Request Flow (CRF) indicator 0b0 - Critical Request Flow is not supported 0b1 - Critical Request Flow is supported'
'6.4.1 Processing Element Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '27-31', '—', 'Reserved'
'6.6.1 LP-Serial Register Block Header (Block Offset 0x0)', 'UNKNOWN', '0-15', 'EF_PTR', 'Hard wired pointer to the next block in the data structure, if one exists'
'6.6.1 LP-Serial Register Block Header (Block Offset 0x0)', 'UNKNOWN', '16-31', 'EF_ID', 'Hard wired Extended Features Block ID'
'6.6.2 Port Link Timeout Control CSR (Block Offset 0x20)', 'UNKNOWN', '0-23', 'timeout value', 'All 1s', 'timeout interval value'
'6.6.2 Port Link Timeout Control CSR (Block Offset 0x20)', 'UNKNOWN', '24-31', '—', 'Reserved'
'6.6.3 Port Response Timeout Control CSR (Block Offset 0x24)', 'UNKNOWN', '0-23', 'timeout value', 'All 1s', 'timeout interval value'
'6.6.3 Port Response Timeout Control CSR (Block Offset 0x24)', 'UNKNOWN', '24-31', '—', 'Reserved'
'6.6.4 Port General Control CSR (Block Offset 0x3C)', 'UNKNOWN', '0', 'Host', 'see footnote1', 'A Host device is a device that is responsible for system exploration, initialization, and maintenance. Agent or slave devices are initialized by Host devices. 0b0 - agent or slave device 0b1 - host device'
'6.6.4 Port General Control CSR (Block Offset 0x3C)', 'UNKNOWN', '1', 'Master Enable', 'see footnote2', 'The Master Enable bit controls whether or not a device is allowed to issue requests into the system. If the Master Enable is not set, the device may only respond to requests. 0b0 - processing element cannot issue requests 0b1 - processing element can issue requests'
'6.6.4 Port General Control CSR (Block Offset 0x3C)', 'UNKNOWN', '2', 'Discovered', 'see footnote3', 'This device has been located by the processing element responsible for system configuration 0b0 - The device has not been previously discovered 0b1 - The device has been discovered by another processing element'
'6.6.4 Port General Control CSR (Block Offset 0x3C)', 'UNKNOWN', '3-31', '—', 'Reserved'
'6.6.5 Port n Link Maintenance Request CSRs (Block Offsets 0x40, 60, ... , 220)', 'UNKNOWN', '0-28', '—', 'Reserved'
'6.6.5 Port n Link Maintenance Request CSRs (Block Offsets 0x40, 60, ... , 220)', 'UNKNOWN', '29-31', 'Command', '0b000', 'Command to be sent in the link-request control symbol. If read, this field returns the last written value.'
'6.6.6 Port n Link Maintenance Response CSRs (Block Offsets 0x44, 64, ... , 224)', 'UNKNOWN', '0', 'response_valid', '0b0', 'If the link-request causes a link-response, this bit indicates that the link-response has been received and the status fields are valid. If the link-request does not cause a link-response, this bit indicates that the link-request has been transmitted. This bit automatically clears on read.'
'6.6.6 Port n Link Maintenance Response CSRs (Block Offsets 0x44, 64, ... , 224)', 'UNKNOWN', '1-20', '—', 'Reserved'
'6.6.6 Port n Link Maintenance Response CSRs (Block Offsets 0x44, 64, ... , 224)', 'UNKNOWN', '21-26', 'ackID_status', '0b000000', 'ackID status field from the link-response control symbol. Bit 21 is only valid for long control symbols.'
'6.6.6 Port n Link Maintenance Response CSRs (Block Offsets 0x44, 64, ... , 224)', 'UNKNOWN', '27-31', 'port_status', '0b00000', 'port status field from the link-response control symbol'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '0', 'Clr_outstanding_ackIDs', '0b0', 'Writing 0b1 to this bit causes all outstanding unacknowledged packets to be discarded. This bit should only be written when trying to recover a failed link. This bit is always logic 0 when read.'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '1', '—', 'Reserved'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '2-7', 'Inbound_ackID', '0b000000', 'Input port next expected ackID value. Bit 2 is only valid for long control symbols.'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '8-17', '—', 'Reserved'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '18-23', 'Outstanding_ackID', '0b000000', 'Output port unacknowledged ackID status. Next expected acknowledge control symbol ackID field that indicates the ackID value expected in the next received acknowledge control symbol. Bit 18 is only valid for long control symbols.'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '24-25', '—', 'Reserved'
'6.6.7 Port n Local ackID CSRs (Block Offsets 0x48, 68, ... , 228)', 'UNKNOWN', '26-31', 'Outbound_ackID', '0b000000', 'Output port next transmitted ackID value. Software writing this value can force retransmission of outstanding unacknowledged packets in order to manually implement error recovery. Bit 26 is only valid for long control symbols.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '0', 'Idle Sequence 2 Support', 'see footnote1', 'Indicates whether the port supports idle sequence 2 for baudrates of less than 5.5 GBaud. 0b0 - idle sequence 2 not supported for baudrates 0b1 - idle sequence 2 supported for baudrates'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '1', 'Idle Sequence 2 Enable', 'see footnote2', 'Controls whether idle sequence 2 is enabled for baudrates of less than 5.5 GBaud. 0b0 - idle sequence 2 disabled for baudrates 0b1 - idle sequence 2 enabled for baudrates The port shall not allow this bit to be set unless idle sequence 2 is supported and shall not allow this bit to be cleared if only idle sequence 2 is supported.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '2', 'Idle Sequence', 'see footnote1', 'Indicates which idle is active. 0b0 - idle sequence 1 is active. 0b1 - idle sequence 2 is active.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '3', '—', 'Reserved'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '4', 'Flow Control Mode', '0b0', 'Indicates which flow control mode is active (read only). 0b0 - receiver-controlled flow control is active. 0b1 - transmitter-controlled flow control is active.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '5-10', '—', 'Reserved'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '11', 'Output Retry-encountered', '0b0', 'Output port has encountered a retry condition.This bit is set when bit 13 is set. Once set, remains set until written with a logic 1 to clear.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '12', 'Output Retried', '0b0', 'Output port has received a packet-retry control symbol and can not make forward progress. This bit is set when bit 13 is set and is cleared when a packet-accepted or a packet-not-accepted control symbol is received (read-only).'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '13', 'Output Retry-stopped', '0b0', 'Output port has received a packet-retry control symbol and is in the "output retry-stopped" state (read-only).'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '14', 'Output Error-encountered', '0b0', 'Output port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 15 is set. Once set, remains set until written with a logic 1 to clear.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '15', 'Output Error-stopped', '0b0', 'Output is in the "output error-stopped" state (read-only).'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '16-20', '—', 'Reserved'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '21', 'Input Retry-stopped', '0b0', 'Input port is in the "input retry-stopped" state (read-only).'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '22', 'Input Error-encountered', '0b0', 'Input port has encountered (and possibly recovered from) a transmission error. This bit is set when bit 23 is set. Once set, remains set until written with a logic 1 to clear.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '23', 'Input Error-stopped', '0b0', 'Input port is in the "input error-stopped" state (read-only).'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '24-26', '—', 'Reserved'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '27', 'Port-write Pending', '0b0', 'Port has encountered a condition which required it to initiate a Maintenance Port-write operation This bit is only valid if the device is capable of issuing a maintenance port-write transaction. Once set remains set until written with a logic 1 to clear.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '28', 'Port Unavailable', 'see footnote3', 'Indicates whether or not the port is available (read only). The port's resources may have been merged with another port to support wider links. 0b0 - The port is available for use. 0b1 - The port is not available for use.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '29', 'Port Error', '0b0', 'Input or output port has encountered an error from which hardware was unable to recover. Once set, remains set until written with a logic 1 to clear.'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '30', 'Port OK', '0b0', 'The input and output ports are initialized and the port is exchanging error-free control symbols with the attached device (read-only).'
'6.6.8 Port n Error and Status CSRs (Block Offset 0x58, 78, ... , 238)', 'UNKNOWN', '31', 'Port Uninitialized', '0b1', 'Input and output ports are not initialized. This bit and bit 30 are mutually exclusive (read-only).'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '0-1', 'Port Width Support', 'see footnote1', 'Indicates port width modes supported by the port (read-only). This field is used in conjunction with the Extended Port Width Support field of this register. The bits of these two fields collectively indicate the port width modes supported by the port in addition to 1x mode which is supported by all ports Bit 0: 0b0 - 2x mode not supported 0b1 - 2x mode supported Bit 1: 0b0 - 4x mode not supported 0b1 - 4x mode supported'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '2-4', 'Initialized Port Width', 'see footnote2', 'Width of the ports after initialized (read only): 0b000 - Single-lane port 0b001 - Single-lane port, lane R 0b010 - Four-lane port 0b011 - Two-lane port 0b100 - Eight-lane port 0b101 - Sixteen-lane port 0b110 - 0b111 - Reserved'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '5 - 7', 'Port Width Override', '0b000', 'Soft port configuration to control the width modes available for port initialization. The bits in this field are used and defined in conjunction with the bits of the Extended Port Width Override field (bits 16-17). When bit [5] = 0b0, bits 16-17 are Reserved When bit [5] = 0b1, bit 6 controls the enabling of 4x mode, bit 7 controls the enabling of 2x mode, bit 16 controls the enabling of 8x mode and bit 17 controls the enabling of 16x mode. Port n Control CSR bits [5-7,16-17] 0b000xx - All lanes widths supported by the port are enabled 0b001xx - Reserved 0b010xx - Force 1x mode, lane R not forced 0b011xx - Force 1x mode, force lane R 0b10000 - Implementation specific behavior 0b10001 - 16x mode enabled; 2x, 4x and 8x modes disabled 0b10010 - 8x mode enabled; 2x, 4x and 16x modes disabled 0b10011 - 8x and 16x modes enabled; 2x and 4x modes disabled 0b10100 - 2x mode enabled; 4x, 8x and 16x modes disabled 0b10101 - 2x and 16x modes enabled; 4x and 8x modes disabled 0b10110 - 2x and 8x modes enabled; 4x and 16x modes disabled 0b10111 - 2x, 8x and 16x modes enabled; 4x mode disabled 0b11000 - 4x mode enabled; 2x, 8x and 16x modes disabled 0b11001 - 4x and 16x modes enabled; 2x and 8x modes disabled 0b11010 - 4x and 8x modes enabled; 2x and 16x modes disabled 0b11011 - 4x, 8x and 16x modes enabled; 2x mode disabled 0b11100 - 2x and 4x modes enabled; 8x and 16x modes disabled 0b11101- 2x, 4x and 16x modes enabled; 8x mode disabled 0b11110 - 2x, 4x and 8x modes enabled; 16x mode disabled 0b11111- 2x, 4x, 8x and 16 x modes enabled The port shall not allow the enabling of a link width mode that is not supported by the port. A change in the value of the Port Width Override or Extended Port Width Override field shall cause the port to re-initialize using the new field value(s).'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '8', 'Port Disable', '0b0', 'Port disable: 0b0 - port receivers/drivers are enabled 0b1 - port receivers/drivers are disabled and are unable to receive/transmit any packets or control symbols'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '9', 'Output Port Enable', 'see footnote3', 'Output port transmit enable: 0b0 - port is stopped and not enabled to issue any packets except to route or respond to I/O logical MAINTENANCE packets. Control symbols are not affected and are sent normally. This is the recommended state after device reset. 0b1 - port is enabled to issue any packets'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '10', 'Input Port Enable', 'see footnote4', 'Input port receive enable: 0b0 - port is stopped and only enabled to route or respond I/O logical MAINTENANCE packets. Other packets generate packet-not-accepted control symbols to force an error condition to be signaled by the sending device. Control symbols are not affected and are received and handled normally. This is the recommended state after device reset. 0b1 - port is enabled to respond to any packet'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '11', 'Error Checking Disable', '0b0', 'This bit disables all RapidIO transmission error checking 0b0 - Error checking and recovery is enabled 0b1 - Error checking and recovery is disabled Device behavior when error checking and recovery is disabled and an error condition occurs is undefined'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '12', 'Multicast-event Participant', 'see footnote5', 'Send incoming Multicast-event control symbols to this port (multiple port devices only)'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '13', '—', 'Reserved'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '14', 'Enumeration Boundary', 'see footnote6', 'An enumeration boundary aware system enumeration algorithm shall honor this flag. The algorithm, on either the ingress or the egress port, shall not enumerate past a port with this bit set. This provides for software enforced enumeration domains within the RapidIO fabric.'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '15', '—', 'Reserved'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '16-17', 'Extended Port Width Override', '0b00', 'Extended soft port configuration to control the width modes available for port initialization. The bits in this field are used and defined in conjunction with the bits in the Port Width Override field. See the Description of the Port Width Override field for the specification of these bits.'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '18-19', 'Extended Port Width Support', 'see footnote7', 'Indicates additional port width modes supported by the port (read-only). This field is used in conjunction with the Port Width Support field of this register. The bits of these two fields collectively indicate the port width modes supported by the port in addition to 1x mode which is supported by all ports Bit 18: 0b0 - 8x mode not supported 0b1 - 8x mode supported Bit 19: 0b0 - 16x mode not supported 0b1 - 16x mode supported'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '20-27', 'Implementation-defined', 'Implementation-defined'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '28-30', '—', 'Reserved'
'6.6.9 Port n Control CSRs (Block Offsets 0x5C, 7C, ... , 23C)', 'UNKNOWN', '31', 'Port Type', 'This indicates the port type (read only) 0b0 - Reserved 0b1 - Serial port'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '0-3', 'Selected Baudrate', '0b0000', 'Indicates the initialized baudrate of the port 0b0000 - no rate selected 0b0001 - 1.25 GBaud 0b0010 - 2.5 GBaud 0b0011 - 3.125 GBaud 0b0100 - 5.0 GBaud 0b0101 - 6.25 GBaud 0b0110 - 0b1111 - Reserved'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '4', 'Baudrate Discovery Support', 'see footnote1', 'Indicates whether automatic baudrate discovery is supported (read-only) 0b0 - Automatic baudrate discovery not supported 0b1 - Automatic baudrate discovery supported'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '5', 'Baudrate Discovery Enable', 'see footnote2', 'Controls whether automatic baudrate discovery is enabled 0b0 - Automatic baudrate discovery disabled 0b1 - Automatic baudrate discovery enable The port shall not allow this bit to be set unless it supports baudrate discovery.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '6', '1.25 GBaud Support', 'see footnote1', 'Indicates whether port operation at 1.25 GBaud is supported (read only) 0b0 - 1.25 GBaud operation not supported 0b1 - 1.25 GBaud operation supported'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '7', '1.25 GBaud Enable', 'see footnote2', 'Controls whether port operation at 1.25 GBaud is enabled 0b0 - 1.25 GBaud operation disabled 0b1 - 1.25 GBaud operation enabled The port shall not allow this bit to be set unless it supports 1.25 GBaud.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '8', '2.5 GBaud Support', 'see footnote1', 'Indicates whether port operation at 2.5 GBaud is supported (read only) 0b0 - 2.5 GBaud operation not supported 0b1 - 2.5 GBaud operation supported'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '9', '2.5 GBaud Enable', 'see footnote2', 'Controls whether port operation at 2.5 GBaud is enabled 0b0 - 2.5 GBaud operation disabled 0b1 - 2.5 GBaud operation enabled The port shall not allow this bit to be set unless it supports 2.5 GBaud.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '10', '3.125 GBaud Support', 'see footnote1', 'Indicates whether port operation at 3.125 GBaud is supported (read only) 0b0 - 3.125 GBaud operation not supported 0b1 - 3.125 GBaud operation supported'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '11', '3.125 GBaud Enable', 'see footnote2', 'Controls whether port operation at 3.125 GBaud is enabled 0b0 - 3.125 GBaud operation disabled 0b1 - 3.125 GBaud operation enabled The port shall not allow this bit to be set unless it supports 3.125 GBaud.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '12', '5.0 GBaud Support', 'see footnote1', 'Indicates whether port operation at 5.0 GBaud is supported (read only) 0b0 - 5.0 GBaud operation not supported 0b1 - 5.0 GBaud operation supported'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '13', '5.0 GBaud Enable', 'see footnote2', 'Controls whether port operation at 5.0 GBaud is enabled 0b0 - 5.0 GBaud operation disabled 0b1 - 5.0 GBaud operation enabled The port shall not allow this bit to be set unless it supports 5.0 GBaud.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '14', '6.25 GBaud Support', 'see footnote1', 'Indicates whether port operation at 6.25 GBaud is supported (read only) 0b0 - 6.25 GBaud operation not supported 0b1 - 6.25 GBaud operation supported'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '15', '6.25 GBaud Enable', 'see footnote2', 'Controls whether port operation at 6.25 GBaud is enabled 0b0 - 6.25 GBaud operation disabled 0b1 - 6.25 GBaud operation enabled The port shall not allow this bit to be set unless it supports 6.25 GBaud'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '16-27', '—', 'Reserved'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '28', 'Enable Inactive Lanes', '0b0', 'The implementation of this bit is optional. When implemented, this bit allows software to force the lanes of the port that are not currently being used to carry traffic, the "inactive lanes", to be enabled for testing while the "active lanes" continue to carry traffic. If this bit is not implemented it is reserved. When a 1x/Nx or 1x/Mx/Nx port is operating in 1x mode where 1 When a 1x/Mx/Nx port is operating in Mx mode where 1 8 or 16, lanes 0 through M-1 are the active lanes and lanes M through N-1 are the inactive lanes. The test mode enabled by the implementation of this bit only allows the testing of the inactive lanes that are supported by both of the connected ports. For example, if a 1x/4x/8x port is connected to a 1x/4x/16x port and the link is operating in 4x mode, only lanes 4 though 7 can be monitored using this test mode. Use of the test mode enabled by the implementation of this bit to monitor the behavior of the inactive lanes requires that this bit must be set in both ports and that all link width modes wider than the desired Mx mode must be disabled in the Port n Control CSR of both ports. Failure to meet these requirements will result in unspecified link behavior. (Modes wider than the desired Mx mode must be disabled so that the Initialization state machine ignores the asserted lane_sync signals from the lanes with forced output enables and does not attempt to enter a mode wider than Mx). If implemented, this bit shall not be asserted when the port is connected to a link that includes retimers as defined in Section 4.11.1, &quot;Retimers&quot;. 0b0: The output enables of all of the lanes controlled by the port are controlled solely by the port's Initialization state machine 0b1: The port's receivers for the inactive lanes are enabled. The port's drivers for the inactive lanes are output enabled if and only if the port's Initialization state machine is not in the SILENT or SEEK state. A continuous IDLE sequence of the same type as is in use on the active lanes shall be transmitted on the inactive lanes when their transmitters are output enabled. The IDLE sequences transmitted on the inactive lanes shall comply with all rules for that type of IDLE sequence including alignment across the inactive lanes, but they are not required to use the same bit sequences or be aligned in any way relative to the IDLE sequences transmitted on the active lanes. If IDLE2 is being used on the active lanes of the port, the inactive lanes of the port shall report their lane number and port width in the CS Field Marker and handle commands carried in the CS Field as if they were active lanes.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '29', 'Data scrambling disable', '0b0', 'Read-write 0b0: transmit scrambler and receive descrambler are enabled. 0b1: The transmit scrambler and receive descrambler are disabled for control symbol and packet data characters. Control symbol and packet data characters are neither scrambled in the transmitter before transmission nor descrambled in the receiver upon reception. The transmit scrambler remains enabled for the generation of pseudo-random data characters for the IDLE2 random data field. This bit is for test use only and shall not be asserted during normal operation.'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '30', 'Remote Transmit Emphasis Control Support', 'see footnote3', 'Indicates whether the port is able to transmit commands to control the transmit emphasis in the connected port 0b0 - The port does not support transmit emphasis adjustment in the connected port 0b - The port supports transmit emphasis adjustment in the connected port'
'6.6.10 Port n Control 2 CSRs (Block Offset 0x54, 74, ... , 234)', 'UNKNOWN', '31', 'Remote Transmit Emphasis Control Enable', 'see footnote4', 'Controls whether the port may adjust the transmit emphasis in the connected port 0b0 - Remote transmit emphasis control is disabled 0b1 - Remote transmit emphasis control is enabled The port shall not let this bit be set unless remote transmit emphasis control is supported and the link to which the port is connect is using idle sequence 2 (IDLE2).'
'6.7.2.1 LP-Serial Register Block Header (Block Offset 0x0)', '0x000D', '0-15', 'EF_PTR', 'Hard wired pointer to the next block in the data structure, if one exists'
'6.7.2.1 LP-Serial Register Block Header (Block Offset 0x0)', '0x000D', '16-31', 'EF_ID', '0x000D', 'Hard wired Extended Features Block ID'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '0-7', 'Port Number', 'The number of the port within the device to which the lane is assigned'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '8-11', 'Lane Number', 'The number of the lane within the port to which the lane is assigned'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '12', 'Transmitter type', 'Transmitter type 0b0 - short run 0b1 - long run'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '13', 'Transmitter mode', 'Transmitter operating mode 0b0 - short run 0b1 - long run'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '14-15', 'Receiver type', 'Receiver type 0b00 - short run 0b01 - medium run 0b10 - long run 0b11 - Reserved'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '16', 'Receiver input inverted', 'This bit indicates whether the lane receiver has detected that the polarity of its input signal is inverted and has inverted its receiver input to correct the polarity. 0b0 - receiver input not inverted 0b1 - receiver input inverted'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '17', 'Receiver trained', 'When the lane receiver controls any transmit or receive adaptive equalization, this bit indicates whether or not all adaptive equalizers controlled by the lane receiver are trained. If the lane supports the IDLE2 sequence, the value of this bit shall be the same as the value in the "Receiver trained" bit in the CS Field transmitted by the lane. 0b0 - One or more adaptive equalizers are controlled by the lane receiver and at least one of those adaptive equalizers is not trained 0b1 - The lane receiver controls no adaptive equalizers or all of the adaptive equalizers controlled by the lane receiver are trained'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '18', 'Receiver lane sync', 'This bit indicates the state of the lane's lane_sync signal. 0b0: lane_sync FALSE 0b1: lane_sync TRUE'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '19', 'Receiver lane ready', 'This bit indicates the state of the lane's lane_ready signal 0b0 - lane_ready FALSE 0b1 - lane_ready TRUE'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '20-23', '8b/10b decoding errors', '0x0', 'This field indicates the number of 8b/10b decoding errors that have been detected for this lane since this register was last read. The field is reset to 0x0 when the register is read. 0x0: No 8b/10b decoding errors have been detected since this register was last read. 0x1: One 8b/10b decoding error has been detected since this register was last read. 0x2: Two 8b/10b decoding errors have been detected since this register was last read. ... 0xD: Thirteen 8b/10b decoding errors have been detected since this register was last read. 0xE: Fourteen 8b/10b decoding errors have been detected since this register was last read. 0xF: At least fifteen 8b/10b decoding errors have been detected since this register was last read.'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '24', 'Lane_sync state change', '0b0', 'Indicates whether the lane_sync signal for this lane has changed state since the bit was last read. This bit is reset to 0b0 when the register is read. This bit provides an indication of the burstiness of the transmission errors detected by the lane receiver. 0b0 - The state of lane_sync has not changed since this register was last read 0b1 - The state of lane_sync has changed since this register was last read'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '25', 'Rcvr_trained state change', '0b0', 'Indicates whether the rcvr_trained signal for this lane has changed state since the bit was last read. This bit is reset to 0b0 when the register is read. A change in state of rcvr_trained indicates that the training state of the adaptive equalization under the control of this receiver has changed. Frequent changes of the training state suggest a problem with the lane. 0b0 - The state of rcvr_trained has not changed since this register was last read 0b1 - The state of rcvr_trained has changed since this register was last read'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '26-27', '—', 'Reserved'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '28', 'Status 1 CSR implemented', 'This bit indicates whether or not the Status 1 CSR is implemented for this lane 0b0 - The Status 1 CSR is not implemented for this lane 0b1 - The Status 1 CSR is implemented for this lane'
'6.7.2.2 Lane n Status 0 CSRs (Block Offsets 0x10, 30, ... , 3F0)', '0x000D', '29-31', 'Status 2-7 CSRs implemented', 'This field indicates the number of implementation specific Status 2-7 CSRs that are implemented for this lane 0b000 - None of the Status 2-7 CSRs are implemented for this lane 0b001 - The Status 2 CSR is implemented for this lane 0b010 - The Status 2 and 3 CSRs are implemented for this lane 0b011 - The Status 2 through 4 CSRs are implemented for this lane 0b100 - The Status 2 through 5 CSRs are implemented for this lane 0b101 - The Status 2 through 6 CSRs are implemented for this lane 0b110 - The Status 2 through 7 CSRs are implemented for this lane 0b111 - Reserved'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '0', 'IDLE2 received', '0b0', 'This bit indicates whether an IDLE2 has been received by the lane since the bit was last reset. The bit is R/W. This bit can be reset by writing the bit with the value 0b1. Writing the bit with the value 0b0 does not change the value of the bit. 0b0 - No IDLE2 sequence has been received since the bit was last reset 0b1 - An IDLE2 sequence has been received at some time since the bit was last reset'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '1', 'IDLE2 information current', '0b0', 'This bit indicates whether the information in this register that is collected from the received IDLE2 sequence is current. When asserted, this bit indicates that the information is from the last IDLE2 CS Marker and CS Field that were received by the lane without detected errors, and that the lane's lane_sync signal has remained asserted since the last CS Marker and CS Field were received. 0b0 - The IDLE2 information is not current 0b1 - The IDLE2 information is current'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '2', 'Values changed', '0b1', 'This bit indicates whether the values of any of the other 31 bits in this register have changed since the register was last read. This bit is reset when the register is read. 0b0 - The values have not changed 0b1 - One or more values have changed'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '3', 'Implementation defined', 'Implementation defined'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '4', 'Connected port lane receiver trained', 'Connected port lane receiver trained 0b0 - Receiver not trained 0b1 - Receiver trained'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '5-7', 'Received port width', 'Received port width 0b000 - 1 lane 0b001 - 2 lanes 0b010 - 4 lanes 0b011 - 8 lanes 0b100 - 16 lanes 0b101-0b111 - Reserved'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '8-11', 'Lane number in connected port', 'The number of the lane (0-15) within the connected port 0b0000 - Lane 0 0b0001 - Lane 1 ... 0b1111 - Lane 15'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '12-13', 'Connected port transmit emphasis Tap(-1) status', 'Tap(-1) status 0b00 - Tap(-1) not implemented 0b01 - Tap(-1) at minimum emphasis 0b10 - Tap(-1) at maximum emphasis 0b11 - Tap(-1) at intermediate emphasis setting'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '14-15', 'Connected port transmit emphasis Tap(+1) status', 'Tap(+1) status 0b00 - Tap(+1) not implemented 0b01 - Tap(+1) at minimum emphasis 0b10 - Tap(+1) at maximum emphasis 0b11 - Tap(+1) at intermediate emphasis setting'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '16', 'Connected port scrambling/descrambling enabled', 'Connected port scrambling/descrambling 0b0 - Scrambling/descrambling not enabled 0b1 - Scrambling/descrambling enabled'
'6.7.2.3 Lane n Status 1 CSRs (Block Offsets 0x14, 34, ... , 3F4)', '0x000D', '17-31', '—', 'Reserved'
'6.8.2.1 VC Register Block Header (Block Offset 0x0)', '0x000A', '0-15', 'EF_PTR', 'Hard wired pointer to the next block in the data structure, if one exists'
'6.8.2.1 VC Register Block Header (Block Offset 0x0)', '0x000A', '16-31', 'EF_ID', '0x000A', 'Hard wired Extended Features Block ID'
'6.8.2.2 Port n VC Control and Status Registers (Block Offset ((port number) + 1) * 0x20))', '0x000A', '0 - 7', 'VC Refresh Interval', '0x00', 'The number of 1024 code group intervals over which the VC status must be refreshed. Refresh Interval: 0x0 - 1K code groups, 0xF - 16K code groups, 0xFF - 256K code groups Implementers are required to support a maximum VC refreshing period of at least 1024 x 16 = 16K code groups in size. The maximum possible VC refreshing period that can be supported is 1024 x 256 = 256K code groups. Writing to this field with a value greater than the maximum supported value by the port will set the field to the maximum value supported by the port'
'6.8.2.2 Port n VC Control and Status Registers (Block Offset ((port number) + 1) * 0x20))', '0x000A', '8 - 15', 'CT Mode', '0x00', 'Enables VCs to operate in CT mode beginning with VC8: 0x00 - all VCs in RT mode For 8 VCs: 0x01 - VC8 in CT mode 0x03 - VC8, VC7 in CT mode 0x07 - VC8, VC7, VC6, VC 5 in CT mode 0x0F - VC8 - VC1 in CT mode For 4 VCs: 0x01 - VC7 in CT mode 0x03 - VC7, VC5 in CT mode 0x07 - VC7, VC5, VC3, VC1 in CT mode For 2 VCs: 0x01 - VC5 in CT mode 0x03 - VC5, VC1 in CT mode For 1 VC: 0x01 - VC1 in CT mode Implementers may support CT mode on a portion of the available VCs. CT mode must be implemented in the highest VCs first to allow this simplified programming model. VCs not supporting CT operation are indicated by not allowing the programmed bits to set. Example: 8VCs enabled, VC8 and VC7 only support CT mode. Writing a 0x07 would result in a register value of 0x03 when read back.'
'6.8.2.2 Port n VC Control and Status Registers (Block Offset ((port number) + 1) * 0x20))', '0x000A', '16 - 23', 'VCs Support', 'see footnote1', 'Number of Virtual Channels Supported (Read Only) 0x00 - Only VC0 is supported 0x01 - VC0, VC1 Supported 0x02 - VC0, VC1, VC5 supported 0x04 - VC0, VC1, VC3, VC5, VC7 supported 0x08 - VC0, VC1-VC8'
'6.8.2.2 Port n VC Control and Status Registers (Block Offset ((port number) + 1) * 0x20))', '0x000A', '24 - 31', 'VCs Enable', '0x00', '0x00 - Enable Only VC0 0x01 - Enable VC0, VC1 0x02 - Enable VC0, VC1, VC5 0x04 - Enable VC0, VC1, VC3, VC5, VC7 0x08 - Enable VC0, VC1-VC8 Note: Bits 24-27, and any bits associated with unimplemented VCs need not be writable, but must return 0 when read. Setting this field to a value larger than the number of VCs supported as indicated in bits 16-23. will result in only VC0 being enabled.'
'6.8.2.3 Port n VC0 BW Allocation Registers (Block Offset (((port number) + 1) * 0x20) + 0x04))', '0x000A', '0', 'VC0 Bandwidth Reservation Capable', 'see footnote1', '0b0 - VC0 is strict priority, and has priority over the other VCs. It will utilize bandwidth without regard to bandwidth reservation. The bandwidth reservation algorithm will divide up what bandwidth is remaining after VC0 has no outstanding requests. 0b1 - VC0 is capable of being allocated bandwidth This bit is read only'
'6.8.2.3 Port n VC0 BW Allocation Registers (Block Offset (((port number) + 1) * 0x20) + 0x04))', '0x000A', '1', 'VC0 BW Res Enable', '0b0', '0b0 - VC0 is strict priority, does not participate in bandwidth reservation 0b1 - VC0 will be allocated bandwidth according to BW Allocation Registers'
'6.8.2.3 Port n VC0 BW Allocation Registers (Block Offset (((port number) + 1) * 0x20) + 0x04))', '0x000A', '2 - 7', '—', 'Reserved'
'6.8.2.3 Port n VC0 BW Allocation Registers (Block Offset (((port number) + 1) * 0x20) + 0x04))', '0x000A', '8 - 15', 'Bandwidth Reservation Precision', 'see footnote2', 'Indicates the number of bits used in the bandwidth reservation precision for all VCs in this port. (read only) 0x00 - 8 bits 0x01 - 9 bits 0x02 - 10 bits 0x04 - 11 bits 0x08 - 12 bits 0x10 - 13 bits 0x20 - 14 bits 0x40 - 15 bits 0x80 - 16 bits'
'6.8.2.3 Port n VC0 BW Allocation Registers (Block Offset (((port number) + 1) * 0x20) + 0x04))', '0x000A', '16-31', 'Bandwidth Allocation', '0x00', 'The contents of this register determines the minimum bandwidth reserved for this VC (see below) The bandwidth allocation value is left justified based on precision. Bits, are ignored based on the precision value: 0bnnnn_nnnn_xxxx_xxxx (8 bit precision) where 'x' represents ignored bits 0bnnnn_nnnn_nxxx_xxxx (9 bit precision) 0bnnnn_nnnn_nnnn_xxxx (12 bit precision), etc.'
'6.8.2.4 Port n VCx BW Allocation Registers (Block Offset ((((port number) + 1) * 0x20) +  . (offset based on VC #, see Table 6-23)))', '0x000A', '0 - 15', 'Bandwidth Allocation', '0x0000', 'The contents of this register determines the minimum bandwidth reserved for this VC (see below) The bandwidth allocation value is left justified based on precision. Bits, are ignored based on the precision value: 0bnnnn_nnnn_xxxx_xxxx (8 bit precision) where 'x' represents ignored bits 0bnnnn_nnnn_nxxx_xxxx (9 bit precision) 0bnnnn_nnnn_nnnn_xxxx (12 bit precision), etc.'
'6.8.2.4 Port n VCx BW Allocation Registers (Block Offset ((((port number) + 1) * 0x20) +  . (offset based on VC #, see Table 6-23)))', '0x000A', '16-31', 'Bandwidth Allocation', '0x0000', 'The contents of this register determines the minimum bandwidth reserved for this VC (see below) The bandwidth allocation value is left justified based on precision. Bits, are ignored based on the precision value: 0bnnnn_nnnn_xxxx_xxxx (8 bit precision) where 'x' represents ignored bits 0bnnnn_nnnn_nxxx_xxxx (9 bit precision) 0bnnnn_nnnn_nnnn_xxxx (12 bit precision), etc.'
'2.3.2.1 Error Management Extensions Block Header (Block Offset 0x0)', '0x0007', '0-15', 'EF_PTR', 'Hard wired pointer to the next block in the data structure, if one exists'
'2.3.2.1 Error Management Extensions Block Header (Block Offset 0x0)', '0x0007', '16-31', 'EF_ID', '0x0007', 'Hard wired Extended Features ID'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '0', 'IO error response', '0b0', 'Received a response of 'ERROR' for an IO Logical Layer Request. (end point device only)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '1', 'Message error response', '0b0', 'Received a response of 'ERROR' for an MSG Logical Layer Request. (end point device only)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '2', 'GSM error response', '0b0', 'Received a response of 'ERROR' for a GSM Logical Layer Request. (end point device only)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '3', 'Message Format Error', '0b0', 'Received MESSAGE packet data payload with an invalid size or segment (MSG logical) (end point device only)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '4', 'Illegal transaction decode', '0b0', 'Received a supported request/response packet with undefined field values (IO/MSG/GSM logical) (switch or endpoint device)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '5', 'Illegal transaction target error', '0b0', 'Received a packet that contained a destination ID that is not defined for this processing element. End points with multiple ports and a built-in switch function may not report this as an error (Transport) (optional) (switch or end point device)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '6', 'Message Request Timeout', '0b0', 'A required message request has not been received within the specified timeout interval (MSG logical) (end point device only)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '7', 'Packet Response Timeout', '0b0', 'A required response has not been received within the specified time out interval (IO/MSG/GSM logical) (end point device only)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '8', 'Unsolicited Response', '0b0', 'An unsolicited/unexpected Response packet was received (IO/MSG/GSM logical; only Maintenance response for switches) (switch or endpoint device)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '9', 'Unsupported Transaction', '0b0', 'A transaction is received that is not supported in the Destination Operations CAR (IO/MSG/GSM logical; only Maintenance port-write for switches) (switch or endpoint device)'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '10-23', '—', 'Reserved'
'2.3.2.2 Logical/Transport Layer Error Detect CSR (Block Offset 0x08)', '0x0007', '24-31', 'Implementation Specific error', '0x00', 'An implementation specific error has occurred. (switch or end point device)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '0', 'IO error response enable', '0b0', 'Enable reporting of an IO 'ERROR' response. Save and lock original request transaction information in all Logical/Transport Layer Capture CSRs. (end point device only)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '1', 'Message error response enable', '0b0', 'Enable reporting of a Message 'ERROR' response. Save and lock original request transaction information in all Logical/Transport Layer Capture CSRs. (end point device only)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '2', 'GSM error response enable', '0b0', 'Enable reporting of a GSM 'ERROR' response. Save and lock original request transaction capture information in all Logical/Transport Layer Capture CSRs. (end point device only)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '3', 'Message Format Error enable', '0b0', 'Enable reporting of a MESSAGE packet data payload with an invalid size or segment (MSG logical). Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (end point device only)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '4', 'Illegal transaction decode enable', '0b0', 'Enable reporting of a supported request/response packet with undefined field values (IO/MSG/GSM logical). Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (switch or end-point device)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '5', 'Illegal transaction target error enable', '0b0', 'Enable reporting of a packet that contains a destination ID that is not defined for this processing element. Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (optional) (switch or end point device)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '6', 'Message Request timeout error enable', '0b0', 'Enable reporting of a Message Request timeout error. Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs for the last Message request segment packet received. (end point device only)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '7', 'Packet Response Timeout error enable', '0b0', 'Enable reporting of a packet response timeout error. Save and lock original request address in Logical/Transport Layer Address Capture CSRs. Save and lock original request Destination ID in Logical/Transport Layer Device ID Capture CSR. (end point device only)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '8', 'Unsolicited Response error enable', '0b0', 'Enable reporting of receiving an unsolicited/unexpected Response packet (IO/MSG/GSM logical; only Maintenance responses for switches). Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (switch or end-point device)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '9', 'Unsupported Transaction error enable', '0b0', 'Enable reporting of an unsupported transaction error. Save and lock transaction capture information in Logical/Transport Layer Device ID and Control Capture CSRs. (switch or end-point device)'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '10-23', '—', 'Reserved'
'2.3.2.3 Logical/Transport Layer Error Enable CSR (Block Offset 0x0C)', '0x0007', '24-31', 'Implementation Specific error enable', '0x00', 'Enable reporting of an implementation specific error has occurred. Save and lock capture information in appropriate Logical/Transport Layer Capture CSRs.'
'2.3.2.4 Logical/Transport Layer High Address Capture CSR (Block Offset 0x10)', '0x0007', '0-31', 'address[0-31]', 'All 0s', 'Most significant 32 bits of the address associated with the error (for requests, for responses if available)'
'2.3.2.5 Logical/Transport Layer Address Capture CSR (Block Offset 0x14)', '0x0007', '0-28', 'address[32-60]', 'All 0s', 'Least significant 29 bits of the address associated with the error (for requests, for responses if available)'
'2.3.2.5 Logical/Transport Layer Address Capture CSR (Block Offset 0x14)', '0x0007', '29', '—', 'Reserved'
'2.3.2.5 Logical/Transport Layer Address Capture CSR (Block Offset 0x14)', '0x0007', '30-31', 'xamsbs', '0b00', 'Extended address bits of the address associated with the error (for requests, for responses if available)'
'2.3.2.6 Logical/Transport Layer Device ID Capture CSR (Block Offset 0x18)', '0x0007', '0-7', 'MSB destinationID', '0x00', 'Most significant byte of the destinationID associated with the error (large transport systems only)'
'2.3.2.6 Logical/Transport Layer Device ID Capture CSR (Block Offset 0x18)', '0x0007', '8-15', 'destinationID', '0x00', 'The destinationID associated with the error'
'2.3.2.6 Logical/Transport Layer Device ID Capture CSR (Block Offset 0x18)', '0x0007', '16-23', 'MSB sourceID', '0x00', 'Most significant byte of the sourceID associated with the error (large transport systems only)'
'2.3.2.6 Logical/Transport Layer Device ID Capture CSR (Block Offset 0x18)', '0x0007', '24-31', 'sourceID', '0x00', 'The sourceID associated with the error'
'2.3.2.7 Logical/Transport Layer Control Capture CSR (Block Offset 0x1C)', '0x0007', '0-3', 'ftype', '0x0', 'Format type associated with the error'
'2.3.2.7 Logical/Transport Layer Control Capture CSR (Block Offset 0x1C)', '0x0007', '4-7', 'ttype', '0x0', 'Transaction type associated with the error'
'2.3.2.7 Logical/Transport Layer Control Capture CSR (Block Offset 0x1C)', '0x0007', '8-15', 'msg info', '0x00', 'letter, mbox, and msgseg for the last Message request received for the mailbox that had an error (Message errors only)'
'2.3.2.7 Logical/Transport Layer Control Capture CSR (Block Offset 0x1C)', '0x0007', '16-31', 'Implementation specific', '0x0000', 'Implementation specific information associated with the error'
'2.3.2.8 Port-write Target deviceID CSR (Block Offset 0x28)', '0x0007', '0-7', 'deviceID_msb', '0x00', 'This is the most significant byte of the port-write target deviceID (large transport systems only)'
'2.3.2.8 Port-write Target deviceID CSR (Block Offset 0x28)', '0x0007', '8-15', 'deviceID', '0x00', 'This is the port-write target deviceID'
'2.3.2.8 Port-write Target deviceID CSR (Block Offset 0x28)', '0x0007', '16', 'large_transport', '0b0', 'deviceID size to use for a port-write 0b0 - use the small transport deviceID 0b1 - use the large transport deviceID'
'2.3.2.8 Port-write Target deviceID CSR (Block Offset 0x28)', '0x0007', '17-31', '—', 'Reserved'
'2.3.2.9 Packet Time-to-live CSR (Block Offset 0x2C)', '0x0007', '0-15', 'Time-to-live value', '0x0000', 'Maximum time that a packet is allowed to exist within a switch device'
'2.3.2.9 Packet Time-to-live CSR (Block Offset 0x2C)', '0x0007', '16-31', '—', 'Reserved'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '0', 'Implementation specific error', '0b0', 'An implementation specific error has been detected'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '1-7', '—', 'Reserved'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '8', 'Received S-bit error', '0b0', 'Received a packet/control symbol with an S-bit parity error (parallel)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '9', 'Received corrupt control symbol', '0b0', 'Received a control symbol with a bad CRC value (serial) or Received a control symbol with a true/complement mismatch (parallel)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '10', 'Received acknowledge control symbol with unexpected ackID', '0b0', 'Received a packet-accepted or packet-retry control symbol with an unexpected ackID'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '11', 'Received packet-not-accepted control symbol', '0b0', 'Received packet-not-accepted control symbol'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '12', 'Received packet with unexpected ackID', '0b0', 'Received packet with unexpected ackID value - out-of-sequence ackID'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '13', 'Received packet with bad CRC', '0b0', 'Received packet with a bad CRC value'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '14', 'Received packet exceeds 276 Bytes', '0b0', 'Received packet which exceeds the maximum allowed size'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '15', 'Received illegal or invalid character', '0b0', 'Received an 8b/10b code-group that is invalid (a code-group that does not have a 8b/10b decode given the current running disparity) or illegal (a code-group that is valid, but whose use is not allowed by the LP-Serial protocol). This bit may be set in conjunction with bit 29 Delineation error. The implementation of this bit is optional, but strongly recommended. (serial)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '16', 'Received data character in IDLE1 sequence', '0b0', 'Received a data character in an IDLE1 sequence. This bit may be set in conjunction with bit 29 Delineation error. The implementation of this bit is optional, but strongly recommended. (serial)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '17', 'Loss of descrambler synchronization', '0b0', 'Loss of receiver descrambler synchronization while receiving scrambled control symbol and packet data. This bit shall be implemented only if port n supports descrambling of packet and control symbol data. (serial)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '18-25', '—', 'Reserved'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '26', 'Non-outstanding ackID', '0b0', 'When there are outstanding ackIDs, a link_response was received with an ackID that is not outstanding'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '27', 'Protocol error', '0b0', 'An unexpected control symbol was received'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '28', 'Frame toggle edge error', '0b0', 'FRAME signal toggled on falling edge of receive clock (parallel)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '29', 'Delineation error', '0b0', 'Received an 8b/10b code-group that is invalid (a code-group that does not have a 8b/10b decode given the current running disparity), illegal (a code-group that is valid, but whose use is not allowed by the LP-Serial protocol) or that is in a position in the received code-group stream that is not allowed by the LP-Serial protocol (serial) or FRAME signal toggled on non-32-bit boundary (parallel)'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '30', 'Unsolicited acknowledgement control symbol', '0b0', 'An unsolicited packet acknowledgement control symbol was received'
'2.3.2.10 Port n Error Detect CSR (Block Offset 0x40, 80,..., 400)', '0x0007', '31', 'Link timeout', '0b0', 'A packet acknowledgement or link-response control symbol was not received within the specified timeout interval'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '0', 'Implementation specific error enable', '0b0', 'Enable error rate counting of implementation specific errors'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '1-7', '—', 'Reserved'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '8', 'Received S-bit error enable', '0b0', 'Enable error rate counting of a packet/control symbol with an S-bit parity error (parallel)'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '9', 'Received corrupt control symbol enable', '0b0', 'Enable error rate counting of a corrupt control symbol'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '10', 'Received out-of-sequence acknowledgement control symbol enable', '0b0', 'Enable error rate counting of a packet-accepted or packet-retry control symbol with an unexpected ackID'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '11', 'Received packet-not-accepted control symbol enable', '0b0', 'Enable error rate counting of received packet-not-accepted control symbols.'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '12', 'Received packet with unexpected ackID enable', '0b0', 'Enable error rate counting of packet with unexpected ackID value - out-of-sequence ackID'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '13', 'Received packet with bad CRC enable', '0b0', 'Enable error rate counting of packet with a bad CRC value'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '14', 'Received packet exceeds 276 Bytes enable', '0b0', 'Enable error rate counting of packet which exceeds the maximum allowed size'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '15', 'Received illegal or invalid character enable', '0b0', 'Enable error rate counting of reception of an 8b/10b code-group that is invalid or illegal. This bit shall be implemented only if bit 15 "Received illegal or invalid character" of the Port n Error Detect CSR is implemented. (serial)'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '16', 'Received data character in an IDLE1 sequence enable', '0b0', 'Enable error rate counting of reception of a data character in an IDLE1 sequence. This bit shall be implemented only if bit 16 "Received data character in IDLE1 sequencer" of the Port n Error Detect CSR is implemented. (serial)'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '17', 'Loss of descrambler synchronization enable', '0b0', 'Enable error rate counting of loss of receiver descrambler synchronization when scrambled control symbol and packet data is being received. This bit shall be implemented only if bit 17 "Loss of descrambler synchronization" of the Port n Error Detect CSR is implemented. (serial)'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '18-25', '—', 'Reserved'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '26', 'Non-outstanding ackID enable', '0b0', 'Enable error rate counting of link-responses received with an ackID that is not outstanding when there are outstanding ackIDs'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '27', 'Protocol error enable', '0b0', 'Enable error rate counting of received unexpected control symbol symbols'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '28', 'Frame toggle edge error enable', '0b0', 'Enable error rate counting of frame toggle edge errors (parallel)'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '29', 'Delineation error enable', '0b0', 'Enable error rate counting of FRAME signal toggled on non-32-bit boundary (parallel) or Reception of an 8b/10b code-group that is invalid, illegal or that is in a position in the received code-group stream that is not allowed by the LP-Serial protocol (serial)'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '30', 'Unsolicited acknowledgement control symbol enable', '0b0', 'Enable error rate counting of received unsolicited packet acknowledgement control symbols'
'2.3.2.11 Port n Error Rate Enable CSR (Block Offset 0x44, 84,..., 404)', '0x0007', '31', 'Link timeout enable', '0b0', 'Enable error rate counting of link timeout errors'
'2.3.2.12 Port n Attributes Capture CSR (Block Offset 0x48, 88,..., 408)', '0x0007', '0-2', 'Info type', '0b000', 'Type of information logged 0b000 - packet 0b001 - reserved 0b010 - short control symbol 0b011 - long control symbol 0b100 - implementation specific (capture register contents are implementation specific) 0b101 - reserved 0b110 - undefined (S-bit error), capture as if a packet (parallel physical layer only) 0b111 - reserved'
'2.3.2.12 Port n Attributes Capture CSR (Block Offset 0x48, 88,..., 408)', '0x0007', '3-7', 'Error type', '0x00', 'The encoded value of the bit in the Port n Error Detect CSR that describes the error captured in the Port n Packet/Control Symbol Capture 0-3 CSRs.'
'2.3.2.12 Port n Attributes Capture CSR (Block Offset 0x48, 88,..., 408)', '0x0007', '8-27', 'Implementation Dependent', 'All 0s', 'Implementation specific error information. If port n is a serial port, the following should be implemented: If the Info_type is "packet", the "control" bits of packet characters 0-15 should be captured in register bits 8-23 respectively. If the Info_type is "short control symbol", the "control" bits of delimited control symbol characters 0-3 should be captured in register bits 8-11 respectively. If the Info_type is "long control symbol", the "control" bits of delimited long control symbol characters 0-7 should be captured in register bits 8-15 respectively.'
'2.3.2.12 Port n Attributes Capture CSR (Block Offset 0x48, 88,..., 408)', '0x0007', '28-30', '—', 'Reserved'
'2.3.2.12 Port n Attributes Capture CSR (Block Offset 0x48, 88,..., 408)', '0x0007', '31', 'Capture valid info', '0b0', 'This bit is set by hardware to indicate that the Port n Packet/Control Symbol Capture 0-3 CSRs and the other bits in this register contain valid information and are locked. This bit is cleared and the Port n Packet/Control Symbol Capture 0-3 CSRs and the other bits in this register are unlocked by software writing 0b0 to the bit.'
'2.3.2.13 Port n Packet/Control Symbol Capture 0 CSR (Block Offset 0x4C, 8C,..., 40C)', '0x0007', '0-31', 'Capture 0', 'All 0s', 'If the info_type field of the Port n Attributes Capture CSR is "long control symbol" or "short control symbol", True and Complement of control symbol (parallel) or Delimited short or long control symbol bytes 0-3 (serial). If the info_type field of the Port n Attributes Capture CSR is "packet", packet bytes 0-3. Otherwise, implementation specific.'
'2.3.2.14 Port n Packet Capture 1 CSR (Block Offset 0x50, 90,..., 410)', '0x0007', '0-31', 'Capture 1', 'All 0s', 'If the info_type field of the Port n Attributes Capture CSR is "long control symbol", delimited long control symbol Bytes 4-7 (serial). If the info_type field of the Port n Attributes Capture CSR is "packet", packet Bytes 4-7. Otherwise, implementation specific.'
'2.3.2.15 Port n Packet Capture 2 CSR (Block Offset 0x54, 94,..., 414)', '0x0007', '0-31', 'Capture 2', 'All 0s', 'If the info_type field of the Port n Attributes Capture CSR is "packet", packet Bytes 8-11. Otherwise, implementation specific.'
'2.3.2.16 Port n Packet Capture 3 CSR (Block Offset 0x58, 98,..., 418)', '0x0007', '0-31', 'Capture 3', 'All 0s', 'If the info_type field of the Port n Attributes Capture CSR is "packet", packet Bytes 12-15. Otherwise, implementation specific.'
'2.3.2.17 Port n Error Rate CSR (Block Offset 0x68, A8,..., 428)', '0x0007', '0-7', 'Error Rate Bias', '0x80', 'This field specifies the rate at which the Error Rate Counter is decremented (the error rate bias value) 0x00 - do not decrement the error rate counter 0x01 - decrement every 1ms (+/-34%) 0x02 - decrement every 10ms (+/-34%) 0x04 - decrement every 100ms (+/-34%) 0x08 - decrement every 1s (+/-34%) 0x10 - decrement every 10s (+/-34%) 0x20 - decrement every 100s (+/-34%) 0x40 - decrement every 1000s (+/-34%) 0x80 - decrement every 10000s (+/-34%) other values are reserved'
'2.3.2.17 Port n Error Rate CSR (Block Offset 0x68, A8,..., 428)', '0x0007', '8-13', '—', 'Reserved'
'2.3.2.17 Port n Error Rate CSR (Block Offset 0x68, A8,..., 428)', '0x0007', '14-15', 'Error Rate Recovery', '0b00', 'The value of this field limits the incrementing of the Error Rate Counter above the failed threshold trigger. 0b00 - only count 2 errors above 0b01 - only count 4 errors above 0b10 - only count 16 error above 0b11 - do not limit incrementing the error rate count'
'2.3.2.17 Port n Error Rate CSR (Block Offset 0x68, A8,..., 428)', '0x0007', '16-23', 'Peak Error Rate', '0x00', 'This field contains the peak value attained by the error rate counter since the field was last reset.'
'2.3.2.17 Port n Error Rate CSR (Block Offset 0x68, A8,..., 428)', '0x0007', '24-31', 'Error Rate Counter', '0x00', 'This field contains a count of the number of physical layer errors that have been detected by the port, decremented by the Error Rate Bias mechanism, to create an indication of the physical layer error rate.'
'2.3.2.18 Port n Error Rate Threshold CSR (Block Offset 0x6C, AC,..., 42C)', '0x0007', '0-7', 'Error Rate Failed Threshold Trigger', '0xFF', 'This field contains the threshold value for reporting an error condition due to a possibly broken link. 0x00 - Disable the Error Rate Failed Threshold Trigger 0x01 - Set the error reporting threshold to 1 0x02 - Set the error reporting threshold to 2 ... 0xFF - Set the error reporting threshold to 255'
'2.3.2.18 Port n Error Rate Threshold CSR (Block Offset 0x6C, AC,..., 42C)', '0x0007', '8-15', 'Error Rate Degraded Threshold Trigger', '0xFF', 'This field contains the threshold value for reporting an error condition due to a degrading link. 0x00 - Disable the Error Rate Degraded Threshold Trigger 0x01 - Set the error reporting threshold to 1 0x02 - Set the error reporting threshold to 2 ... 0xFF - Set the error reporting threshold to 255'
'2.3.2.18 Port n Error Rate Threshold CSR (Block Offset 0x6C, AC,..., 42C)', '0x0007', '16-31', '—', 'Reserved'
'4.2 Processing Elements Features CAR (Offset 0x10 Word 0)', 'STD_REG', '0-19', '—', 'Reserved (defined elsewhere)'
'4.2 Processing Elements Features CAR (Offset 0x10 Word 0)', 'STD_REG', '20', 'Flow Arbitration Support', '*', 'Support for flow arbitration 0b0 - does not support flow arbitration 0b1 - supports flow arbitration'
'4.2 Processing Elements Features CAR (Offset 0x10 Word 0)', 'STD_REG', '21-23', '—', 'Reserved (defined elsewhere)'
'4.2 Processing Elements Features CAR (Offset 0x10 Word 0)', 'STD_REG', '24', 'Flow Control Support', '*', 'Support for flow control extensions 0b0 - Does not support flow control extensions 0b1 - Supports flow control extensions'
'4.2 Processing Elements Features CAR (Offset 0x10 Word 0)', 'STD_REG', '26-31', '—', 'Reserved (defined elsewhere)'
'4.3 Port n Control CSR (Block Offsets 0x5C, 7C, ... , 23C)', 'STD_REG', '0-9 (parallel) 0-12 (serial)', '—', 'Reserved (defined elsewhere)'
'4.3 Port n Control CSR (Block Offsets 0x5C, 7C, ... , 23C)', 'STD_REG', '10 (parallel) 13 (serial)', 'Flow Control Participant', '0b0', 'Enable flow control transactions 0b0 - Do not route or issue flow control transactions to this port 0b1 - Route or issue flow control transactions to this port'
'4.3 Port n Control CSR (Block Offsets 0x5C, 7C, ... , 23C)', 'STD_REG', '11 (parallel) 14 (serial', '—', 'Reserved (defined elsewhere)'
'4.3 Port n Control CSR (Block Offsets 0x5C, 7C, ... , 23C)', 'STD_REG', '12 (parallel) 15 (serial)', 'Flow Arbitration Participant', '0b0', 'Enable Flow Arbitration Transactions: 0b0 - do not route or issue flow arbitration transactions to this port 0b1 - route or issue flow arbitration transaction to this port'
'4.3 Port n Control CSR (Block Offsets 0x5C, 7C, ... , 23C)', 'STD_REG', '13-31 (parallel) 16-31 (serial', '—', 'Reserved (defined elsewhere)'
'5.5.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '0-11', '—', 'Reserved'
'5.5.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '12', 'Data streaming traffic management', 'PE can support data streaming traffic management'
'5.5.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '13', 'Data streaming', 'PE can support a data streaming operation'
'5.5.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '14-15', 'Implementation defined', 'Defined by the device implementation'
'5.5.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '16-29', '—', 'Reserved'
'5.5.1 Source Operations CAR (Configuration Space Offset 0x18)', 'STD_REG', '30-31', 'Implementation defined', 'Defined by the device implementation'
'5.5.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '0-11', '—', 'Reserved'
'5.5.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '12', 'Data streaming traffic management', 'PE can support data streaming traffic management'
'5.5.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '13', 'Data streaming', 'PE can support a data streaming operation'
'5.5.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '14-15', 'Implementation defined', 'Defined by the device implementation'
'5.5.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '16-29', '—', 'Reserved'
'5.5.2 Destination Operations CAR (Configuration Space Offset 0x1C)', 'STD_REG', '30-31', 'Implementation defined', 'Defined by the device implementation'
'5.5.3 Data Streaming Information CAR (Configuration Space Offset 0x3C)', 'STD_REG', '0-15', 'MaxPDU', 'Maximum PDU - The maximum PDU size in bytes supported by the destination end point 0x0000 - 64kbytes 0x0001 - 1 byte 0x0002 - 2 bytes ... 0xFFFF - 64kbytes - 1'
'5.5.3 Data Streaming Information CAR (Configuration Space Offset 0x3C)', 'STD_REG', '16-31', 'SegSupport', 'Segmentation Support - The number of segmentation contexts supported by the destination end point 0x0000 - 64k segmentation contexts 0x0001 - 1 segmentation context 0x0002 - 2 segmentation contexts ... 0xFFFF - 64k - 1 segmentation contexts'
'5.6.1 Data Streaming Logical Layer Control CSR (Configuration Space Offset 0x48)', 'STD_REG', '0-3', 'TM Types Supported (read only)', 'Bit 0 = 1, Basic Type Supported Bit 1 = 1, Rate Type Supported Bit 2 = 1, Credit Type Supported Bit 3 = Reserved Valid Combinations: 0b1000, 0b1100, 0b1010, 0b1110. All others invalid'
'5.6.1 Data Streaming Logical Layer Control CSR (Configuration Space Offset 0x48)', 'STD_REG', '4 - 7', 'TM Mode', 'Traffic Management Mode of operation 0b0000 = TM Disabled 0b0001 = Basic 0b0010 = Rate 0b0011 = Credit 0b0100 = Credit + Rate 0b0101 - 0b0111 = Reserved 0b1000 - 0b1111 = allowed for user defined modes'
'5.6.1 Data Streaming Logical Layer Control CSR (Configuration Space Offset 0x48)', 'STD_REG', '8 - 23', 'Reserved'
'5.6.1 Data Streaming Logical Layer Control CSR (Configuration Space Offset 0x48)', 'STD_REG', '24-31', 'MTU', 'Maximum Transmission Unit - controls the data payload size for segments of an encapsulated PDU. Only single segment PDUs and end segments are permitted to have a data payload that is less than this value. The MTU can be specified in increments of 4 bytes. Support for the entire range is required. 0b0000_0000 - reserved ... 0b0000_0111 - reserved 0b0000_1000 - 32 byte block size 0b0000_1001 - 36 byte block size 0b0000_1010 - 40 byte block size ... 0b0100_0000 - 256 byte block size 0b0100_0001 - Reserved ... 0b1111_1111 - Reserved All other encodings reserved'
'3.2 Processing Elements Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '0-20', '-', 'Reserved (defined elsewhere)'
'3.2 Processing Elements Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '21', 'Multicast Support', '*', 'Support for multicast extensions 0b0 - Does not support multicast extensions 0b1 - Supports multicast extensions'
'3.2 Processing Elements Features CAR (Configuration Space Offset 0x10)', 'STD_REG', '22-31', '-', 'Reserved (defined elsewhere)'
'3.3 Switch Multicast Support CAR (Configuration Space Offset 0x30)', 'STD_REG', '0', 'Simple_Assoc', '*', 'Support for a simple multicast association model 0b0 - Does not support simple association 0b1 - Supports simple association If this bit is set, the Block_Assoc bit in the Switch Multicast Information CAR must also be set.'
'3.3 Switch Multicast Support CAR (Configuration Space Offset 0x30)', 'STD_REG', '1-31', '-', 'Reserved (defined elsewhere)'
'3.4 Switch Multicast Information CAR (Configuration Space Offset 0x38)', 'STD_REG', '0', 'Block_Assoc', 'Block association support - allows equal sized blocks of destination IDs and multicast masks to be associated with each other with a single operation rather than one at a time. 0b0 - block association is not supported 0b1 - block association is supported If the Simple_Assoc bit in the Switch Multicast Support CAR is set, this bit must also be set.'
'3.4 Switch Multicast Information CAR (Configuration Space Offset 0x38)', 'STD_REG', '1', 'Per_Port_Assoc', 'Per ingress port association support - allows a destination ID to be associated with a multicast mask on a per-ingress port basis rather than a single association for the entire switch. 0b0 - per port association is not supported 0b1 - per port association is supported'
'3.4 Switch Multicast Information CAR (Configuration Space Offset 0x38)', 'STD_REG', '2-15', 'MaxDestIDAssoc', 'The maximum number of destination IDs associations per multicast mask 0x0000 - 1 destination ID 0x0001 - 2 destination IDs ... 0x3FFF - 16384 destination IDs'
'3.4 Switch Multicast Information CAR (Configuration Space Offset 0x38)', 'STD_REG', '16-31', 'MaxMcastMasks', 'The number of multicast egress port masks available. This field also defines the largest block of destination IDs that can be block associated. 0x0000 - [reserved] 0x0001 - 1 multicast mask 0x0002 - 2 multicast masks ... 0xFFFF - 65535 multicast masks'
'3.5 Multicast Mask Port CSR (Configuration Space Offset 0x80)', 'STD_REG', '0-15', 'Mcast_Mask', '0x0000', 'Specifies the multicast mask which is to be modified or queried as determined by the Mask_Cmd field.'
'3.5 Multicast Mask Port CSR (Configuration Space Offset 0x80)', 'STD_REG', '16-23', 'Egress_Port_Num', '0x00', 'Specifies the port number to be added, deleted, or queried with the Mask_Cmd field.'
'3.5 Multicast Mask Port CSR (Configuration Space Offset 0x80)', 'STD_REG', '24', '-', '0b0', 'Reserved'
'3.5 Multicast Mask Port CSR (Configuration Space Offset 0x80)', 'STD_REG', '25-27', 'Mask_Cmd', '0b000', 'Specifies the mask action on a write. 0b000 - Write_to_Verify 0b001 - Add_Port 0b010 - Delete_Port 0b011 - reserved 0b100 - Delete_All_Ports 0b101 - Add_All_Ports 0b110 - reserved 0b111 - reserved'
'3.5 Multicast Mask Port CSR (Configuration Space Offset 0x80)', 'STD_REG', '28-30', '-', '0b000', 'Reserved'
'3.5 Multicast Mask Port CSR (Configuration Space Offset 0x80)', 'STD_REG', '31', 'Port_Present', '0b0', 'Indicates the existence of the egress port and multicast mask pair as a result of the last preceding Write_to_Verify command. 0b0 - Port was not enabled as an egress port in the specified multicast mask 0b1 - Port was enabled as an egress port in the specified multicast mask. This bit is reserved on a write.'
'3.6 Multicast Associate Select CSR (Configuration Space Offset 0x84)', 'STD_REG', '0-7', 'Large_DestID', '0x00', 'Selects the most significant byte of a large transport destination ID for an association operation'
'3.6 Multicast Associate Select CSR (Configuration Space Offset 0x84)', 'STD_REG', '8-15', 'DestID', '0x00', 'Selects the destination ID for an association operation'
'3.6 Multicast Associate Select CSR (Configuration Space Offset 0x84)', 'STD_REG', '16-31', 'Mcast_Mask_Num', '0x0000', 'Selects the multicast mask number for an association operation'
'3.7 Multicast Associate Operation CSR (Configuration Space Offset 0x88)', 'STD_REG', '0-15', 'Assoc_Blksize', '0x0000', 'This field specifies the number of sequential DestinationIDs to be associated with an equal number of sequential multicast mask numbers if block association is supported. This field is ignored on a Write_to_Verify command. 0x0000 - one association 0x0001 - two sequential associations ... 0xFFFF - 65536 sequential associations'
'3.7 Multicast Associate Operation CSR (Configuration Space Offset 0x88)', 'STD_REG', '16-23', 'Ingress_Port', '0x00', 'This field specifies the ingress port association to affect if per-port ingress association is supported'
'3.7 Multicast Associate Operation CSR (Configuration Space Offset 0x88)', 'STD_REG', '24', 'Large_Transport', '0b0', '0b0 - the association is for small transport destination IDs 0b1 - the association is for large transport destination IDs'
'3.7 Multicast Associate Operation CSR (Configuration Space Offset 0x88)', 'STD_REG', '25-26', 'Assoc_Cmd', '0b00', 'This field specifies the command to execute when this register is written. 0b00 - Write_To_Verify 0b01 - reserved 0b10 - Delete_Assoc 0b11 - Add_Assoc'
'3.7 Multicast Associate Operation CSR (Configuration Space Offset 0x88)', 'STD_REG', '27-30', '-', '0b0000', 'reserved'
'3.7 Multicast Associate Operation CSR (Configuration Space Offset 0x88)', 'STD_REG', '31', 'Assoc_Present', '0b0', 'This bit contains the result of the last Write_to_Verify command executed. 0b0 - no association present 0b1 - association present This bit is reserved on write.'
'5.1.2.1 LP-Serial VC Register Block Header (Block Offset 0x0)', '0x000B', '0-15', 'EF_PTR', 'Hard wired pointer to the next block in the data structure, if one exists'
'5.1.2.1 LP-Serial VC Register Block Header (Block Offset 0x0)', '0x000B', '16-31', 'EF_ID', '0x000B', 'Hard wired Extended Features ID'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '0', 'VoQ Backpressure Symbol Generation Supported', 'see footnote1', '0b0 = generation of VoQ backpressure is not supported by this port 0b1 = generation of VoQ backpressure supported (read-only)'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '1', 'VoQ Backpressure Symbol Reception Supported', 'see footnote2', '0b0 = reception of VoQ backpressure is not supported by this port 0b1 = reception of VoQ backpressure supported (read-only)'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '2', 'Linking with VCs supported', 'see footnote3', '0b0 = linking of VoQ backpressure with virtual channels is not supported by this port 0b1 = linking of VoQ backpressure with virtual channels is supported (read-only)'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '3-7', 'reserved', '0b0'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '8', 'Enable VoQ Symbol Generation', '0b0', '0b0 = No VoQ symbols will be transmitted 0b1 = VoQ symbol generation is enabled'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '9', 'Enable VoQ Participation', '0b0', '0b0 = this port's status will not be included in any VoQ symbols transmitted, nor cause symbols to be generated. (the port's status will always be reflected as enabled). 0b1 = this port's status will be reflected in VoQ backpressure symbols and will cause symbols to be generated'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '10', 'Port XOFF', '0b0', '0b0 = Port status will reflect current state of the port. 0b1 = Port status will always reflect congested (= 0b1)'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '11', 'Enable VC linking', '0b0', '0b0 = Linking VoQ backpressure with VC Status is disabled 0b1 = Linking VoQ backpressure with VC Status is enabled'
'5.1.2.2 Port n VoQ Control Status Register (Block Offset - Variable, see Section 5.1.1)', '0x000B', '12-31', 'reserved', '0x0_0000'
