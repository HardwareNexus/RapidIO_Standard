'Test ID', 'Specification Revision', 'Specification Section', 'Specification Feature', 'Requirement References', 'Test Checking Type', 'Test Implementation Details', 'Test Name', 'Test Status', 'Designer Comments'
'Logical_001', '1.3', '3.3.1 Read Operations \n4.1.5 Type 2 Packet Format (Request Class)\n4.2.3 Type 13 Packet Format (Response Class)', 'NREAD, with DONE', 'R1.3p1s3.3.1c1174 R1.3p1s3.3.1c1176 R1.3p1s3.3.1c1178 R1.3p1s3.3.1c1215 R1.3p1s3.3.1c1239 R1.3p1s3.3.1c1241', 'Directed test check/Functional coverage', '- Generate read transactions with (read address and varying data sizes)\n- Check the following in the generated packet\n  * ftype 2\n  * transaction 0b0100\n  * wdptr and rdsize as in the Table 4-3. Read Size (rdsize) Definitions. Using coverage metrics check if all the combinations are covered \n  * address to be checked\n- Check the following in the response packet\n  * transaction type: Type 13\n  * transaction= 0b1000\n  * status = 0b0000\n  * transaction ID matches between the NREAD request packet and the DONE response packet', '', '', ''
'Logical_002', '1.3', '3.3.1 Read Operations \n4.1.5 Type 2 Packet Format (Request Class)\n4.2.3 Type 13 Packet Format (Response Class)', 'NREAD, with ERROR', 'R1.3p1s3.3.1c1174\nR1.3p1s3.3.1c1176\nR1.3p1s3.3.1c1178\nR1.3p1s3.3.1c1215\nR1.3p1s3.3.1c1239\nR1.3p1s3.3.1c1241', 'Directed test check/Functional coverage', '- Generate read transactions with (read address and varying data sizes)\n- Check the following in the generated packet\n  * ftype 2\n  * transaction 0b0100\n  * wdptr and rdsize as in the Table 4-3. Read Size (rdsize) Definitions. Using coverage metrics check if all the combinations are covered \n  * address to be checked\n- Check the following in the response packet\n  * transaction type: Type 13\n  * transaction= 0b1000 \n  * status = 0b0111 \n  * transaction ID matches between the NREAD request packet and the ERROR response packet', '', '', ''
'Logical_003', '1.3', '3.3.2 Write and Streaming-Write Operations\n4.1.7 Type 5 Packet Format (Write Class)', 'NWRITE', 'R1.3p1s3.3.2c1183 R1.3p1s3.3.2c1216 R1.3p1s3.3.2c1245 R1.3p1s3.3.2c1247 R1.3p1s3.3.2c1249', 'Directed test check/Functional coverage', '- Generate write transactions with (write address and varying data pay loads - multiple double-word, word, half-word and byte writes) \n- Check the following in the generated packet\n  * ftype 5\n  * transaction 0b0100\n  * wdptr and wrsize as in the Table 4-4. Write Size (wrsize) Definitions. Using coverage metrics check if all the combinations are covered \n  * address to be checked\n  * data to be checked\n  * transaction id is arbitrary as no reponse required\n- Check that no response packet arrives', '', '', ''
'Logical_004', '1.3', '3.3.3 Write-With-Response Operations\n4.1.7 Type 5 Packet Format (Write Class)\n4.2.3 Type 13 Packet Format (Response Class)', 'NWRITE_R with DONE', 'R1.3p1s3.3.3c1205 R1.3p1s3.3.3c1253 R1.3p1s3.3.3c1255 R1.3p1s3.3.3c1257', 'Directed test check/Functional coverage', '- Generate write transactions with (write address and varying data pay loads - multiple double-word, word, half-word and byte writes) \n- Check the following in the generated packet\n  * ftype 5\n  * transaction 0b0101\n  * wdptr and wrsize as in the Table 4-4. Write Size (wrsize) Definitions. Using coverage metrics check if all the combinations are covered \n  * address to be checked\n  * data to be checked\n - Check the following in the response packet\n  * transaction type: Type 13\n  * transaction= 0b0000 \n  * status = 0b0000\n  * transaction ID matches between the NWRITE_R request packet and the DONE response packet', '', '', ''
'Logical_005', '1.3', '3.3.3 Write-With-Response Operations\n4.1.7 Type 5 Packet Format (Write Class)\n4.2.3 Type 13 Packet Format (Response Class)', 'NWRITE_R with ERROR', 'R1.3p1s3.3.3c1205 R1.3p1s3.3.3c1253 R1.3p1s3.3.3c1255 R1.3p1s3.3.3c1257', 'Directed test check/Functional coverage', '- Generate write transactions with (write address and varying data pay loads - multiple double-word, word, half-word and byte writes) \n- Check the following in the generated packet\n  * ftype 5\n  * transaction 0b0101\n  * wdptr and wrsize as in the Table 4-4. Write Size (wrsize) Definitions. Using coverage metrics check if all the combinations are covered \n  * address to be checked\n  * data to be checked\n - Check the following in the response packet\n  * transaction type: Type 13\n  * transaction= 0b0000 \n  * status = 0b0111 \n  * transaction ID matches between the NWRITE_R request packet and the ERROR response packet', '', '', ''
'Logical_006', '1.3', '3.3.3 3.3.2 Write and Streaming-Write Operations\n4.1.8 Type 6 Packet Format (Streaming-Write Class)', 'SWRITE', 'R1.3p1s3.3.2c1194 R1.3p1s3.3.2c1216 R1.3p1s3.3.2c1223 R1.3p1s3.3.2c1261', 'Directed test check/Functional coverage', '- Generate write transactions with (write address and varying data pay loads - multiple double-words only)\n- Check the following in the generated packet\n  * ftype 6\n  * address to be checked\n  * data to be checked', '', '', ''
'Logical_007', '1.3', 'Chapter 3 and 4', 'Random combination of above transactions', 'R1.3p1s3.3.2c1194 R1.3p1s3.3.2c1216 R1.3p1s3.3.2c1223 R1.3p1s3.3.2c1261 R1.3p1s3.3.3c1205 R1.3p1s3.3.3c1253 R1.3p1s3.3.3c1255 R1.3p1s3.3.3c1257 R1.3p1s3.3.1c1174 R1.3p1s3.3.1c1176 R1.3p1s3.3.1c1178 R1.3p1s3.3.1c1215 R1.3p1s3.3.1c1239 R1.3p1s3.3.1c1241', 'Directed test check/Functional coverage', 'The checks for corresponding type to be in place', '', '', ''
'Logical_008', '1.3', '4.1.10', 'Four Byte Access (Read), DUT Receiving and responding', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 4-byte read to a valid register (rdsize = 8, wdptr = 0b0).  The read should return valid data from the upper  4 bytes of the addressed word.  Repeat with rdsize 8, wdptr 1 and verify the lower eight bytes are valid.  In all cases, verify the read response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 2, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).  Although this is a fourbyte read, the DUT MUST return eight bytes, with the valid data properly aligned.', '', '', 'Any device supporting maintance must support 4 byte access at a minimum (4.1.10, paragraph 1)'
'Logical_009', '1.3', '4.1.10', 'Eight Byte Access (Read), DUT Receiving and responding  Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 8-byte read to a valid register (rdsize = 11, wdptr = 0b0).  The read should return valid datawith a single 8 byte word payload, valid data on all bytes. In all cases, verify the read response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8,Transaction of 2, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_010', '1.3', '4.1.10', 'Sixteen Byte Access (Read), DUT Receiving and responding -   Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 16-byte read to a valid register (rdsize = 11, wdptr = 0b1).  The read should return valid datawith a two 8-byte word payload, valid data on all bytes. In all cases, verify the read response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 2, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_011', '1.3', '4.1.10', '32 Byte Access (Read), DUT Receiving and responding -   Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 32-byte read to a valid register (rdsize = 12, wdptr = 0b0).  The read should return valid datawith a four 8-byte word payload, valid data on all bytes. In all cases, verify the read response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 2, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_012', '1.3', '4.1.10', '64 Byte Access (Read), DUT Receiving and responding -   Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 64-byte read to a valid register (rdsize = 12, wdptr = 0b1).  The read should return valid data with  eight, 64-bit words in its payload, valid data on all bytes. In all cases, verify the read response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 2, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_013', '1.3', '4.1.10', 'Four Byte Access (Write), DUT Receiving and responding', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 4-byte write to a valid register (wrsize = 8, wdptr = 0b0).  The write should replace the   4 bytes of the addressed word.  Verify the other bytes are not affected.   Repeat with wrsize 8, wdptr 1 and verify the lower eight bytes are valid.  In all cases, verify the write response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 3, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test). The transaction field should have a setting of 0 (Response without data).', '', '', 'Any device supporting maintance must support 4 byte access at a minimum (4.1.10, paragraph 1)'
'Logical_014', '1.3', '4.1.10', 'Eight Byte Access (Write), DUT Receiving and responding  Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 8-byte write to a valid register (wrsize = 11, wdptr = 0b0).  Verify the write took affect with a read.  Repeat with wrsize 8, wdptr 1 and verify the lower eight bytes are valid.  In all cases, verify the write response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8,Transaction of 3, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_015', '1.3', '4.1.10', 'Sixteen Byte Access (Write), DUT Receiving and responding  Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 16-byte write to a valid register (wrsize = 11, wdptr = 0b1).  Verify the write took affect with a read.   In all cases, verify the write response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 3, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_016', '1.3', '4.1.10', '32  Byte Access (Write), DUT Receiving and responding  Optional Support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 32-byte write to a valid register (wrsize = 12, wdptr = 0b0).  Verify the write took affect with a read. In all cases, verify the write response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 3, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test) .The transaction field should have a setting of 0 (Response without data).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_017', '1.3', '4.1.10', '64 Byte Access (Write), DUT Receiving and responding  Optional support', '', 'Directed test check/Functional coverage', 'After the device under test is initialized, perform a 64-byte write to a valid register (wrsize = 12, wdptr = 0b1).  Verify the write took affect with a read.  In all cases, verify the write response is properly constructed per 4.1.10, Figure 4-4 with an FTYPE of 8, Transaction of 3, targetTID matching the srcTID, with a status of DONE (unless a implementation specific ERROR scenario is under test).', '', '', 'A device does not need to support  access other than four bytes, so this testcase can be skipped depending on the device features. (4.1.10, paragraph 1)'
'Logical_018', '1.3', '4.1.10', 'Acceptance of Port Write', '', 'Directed test check/Functional coverage', 'Verify that a port write to an endpoint does not cause a write response', '', '', 'All other aspects or port write acceptance are really design dependent. There may well be limitations on size and format for a particular design.'
'Logical_019', '1.3', '4.1.10', 'Read request from device under test  read size', '', 'Directed test check/Functional coverage and checking assertions or scoreboard check of packet fields.', 'The method of starting a read request will be implementation specific. Verify the device''s read request size is constructed legally per. 4.1.10, only requesting a four byte (either lane), eight, sizteen, 32, or 64 byte access.  Other sizes should be flagged as an error and fail the test.', '', '', 'Only relevant if the device is an endpoint acting as master, or a switch passing through T8 packets.'
'Logical_020', '1.3', '4.1.10', 'Read request from device under test  transaction', '', 'Directed test check/Functional coverage and checking assertions or scoreboard check of packet fields.', 'The method of starting a read request will be implementation specific. Verify the device''s transaction field is set to 0 for a T8 read request. Any other setting should be flagged as an error and fail the test.', '', '', 'Only relevant if the device is an endpoint acting as master, or a switch passing through T8 packets.'
'Logical_021', '1.3', '4.1.10', 'Read request from device under test  ftype', '', 'Directed test check/Functional coverage and checking assertions or scoreboard check of packet fields.', 'The method of starting a read request will be implementation specific. Verify the device''s ftype field is set to 8 for a T8 read request. Any other setting should be flagged as an error and fail the test.', '', '', 'Only relevant if the device is an endpoint acting as master, or a switch passing through T8 packets.'
'Logical_022', '1.3', '4.1.10', 'Writerequest from device under test  write size', '', 'Directed test check/Functional coverage and checking assertions or scoreboard check of packet fields.', 'The method of starting a write request will be implementation specific. Verify the device''s wrute request size is constructed legally per. 4.1.10, only requesting a four byte (either lane), eight, sizteen, 32, or 64 byte access.  Other sizes should be flagged as an error and fail the test.  Verify the write data is a multiple of 8 bytes (a 4 byte write transaction will have 4 bytes of ''don''t care'' data, that should be disregarded.', '', '', 'Only relevant if the device is an endpoint acting as master, or a switch passing through T8 packets.'
'Logical_023', '1.3', '4.1.10', 'Write request from device under test  transaction', '', 'Directed test check/Functional coverage and checking assertions or scoreboard check of packet fields.', 'The method of starting a read request will be implementation specific. Verify the device''s transaction field is set to 1 for a T8 write request. Any other setting should be flagged as an error and fail the test.', '', '', 'Only relevant if the device is an endpoint acting as master, or a switch passing through T8 packets.'
'Logical_024', '1.3', '4.1.10', 'Write request from device under test  ftype', '', 'Directed test check/Functional coverage and checking assertions or scoreboard check of packet fields.', 'The method of starting a write  request will be implementation specific. Verify the device''s ftype field is set to 8 for a T8 write request. Any other setting should be flagged as an error and fail the test.', '', '', 'Only relevant if the device is an endpoint acting as master, or a switch passing through T8 packets.'
'Logical_025', '1.3', '4.1.10', 'Generation  of Port Write', '', 'Directed test check/Functional coverage', 'Verify that a generated port write from an endpoint has the correct ftype (8) and transaction (4).  Verify that the status field is 7 or a legal implementation defined value (12-15).  Verify that the port write data follows the same rules as other maintenance transactions with data (4 to 64 bytes of valid data, wrsize/wdptr is accurate, payload is a multiple of eight bytes).', '', '', 'All other aspects or port write generation  are really design dependent. (and a design is nto required to have the ability to generate them). There may well be limitations on size and format for a particular design.'
