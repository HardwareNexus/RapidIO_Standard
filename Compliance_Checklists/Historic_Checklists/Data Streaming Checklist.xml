<?xml version="1.0" encoding="UTF-8" ?>
<!-- Created from PDF via Acrobat SaveAsXML -->
<!-- Mapping Table version: 28-February-2003 -->
<TaggedPDF-doc>
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Acrobat Distiller 5.0.5 (Windows)</pdf:Producer>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/">
         <xmp:CreateDate>2005-01-27T18:00:51Z</xmp:CreateDate>
         <xmp:ModifyDate>2005-10-06T22:27:51Z</xmp:ModifyDate>
         <xmp:MetadataDate>2005-10-06T22:27:51Z</xmp:MetadataDate>
         <xmp:CreatorTool>FrameMaker 7.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>xml</dc:format>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Barry Wood</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">05-10-00000.002.fm</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>
<?xpacket end='r'?>
<bookmark-tree>
<bookmark title="Data Streaming Certification Checklist">
<destination structID="LinkTarget_75"/>
<bookmark title="1 Behavioral Certification List">
<destination structID="LinkTarget_91"/>
</bookmark>
<bookmark title="2 Segmentation Behavioral Certification List">
<destination structID="LinkTarget_573"/>
</bookmark>
<bookmark title="3 Reassembly Behavioral Certification List">
<destination structID="LinkTarget_705"/>
</bookmark>
<bookmark title="4 Packet Format Certification List">
<destination structID="LinkTarget_1013"/>
</bookmark>
<bookmark title="5 Data Streaming Register Certification List">
<destination structID="LinkTarget_1275"/>
</bookmark>
</bookmark>
</bookmark-tree>

<Document xml:lang="en-US">
<Article_A>
<TextSection>
<_Para_Body>RapidIO Trade Association</_Para_Body>

<_Para_Body>Suite 325, 3925 W. Braker Lane</_Para_Body>

<_Para_Body>Austin, TX 78759</_Para_Body>

<_Para_Body>512-305-0070 Tel.</_Para_Body>

<_Para_Body>512-305-0009 FAX.</_Para_Body>

<_Para_Body/>

<_Para_Body>TWG First Showing</_Para_Body>

<_Para_Body>Item 05-10-00000.002 </_Para_Body>

<_Para_Body/>

<_Para_Body>Subject: Data Streaming Certification checklist</_Para_Body>

<_Para_Body/>

<_Para_Body>Background: Certification and interoperability checklist for the RapidIO specification Revision 1.3, part 10 ‘Data Streaming and Encapsulation’. The two change bars indicate differences between this document an 05-10-00000.001.</_Para_Body>

<_Para_Body/>

<_Para_Body>Contributors: Barry Wood, Tundra Semiconductor
Russel Stuber, Xilinx
Bertan Tezcan, IDT
Trevor Hiatt, IDT</_Para_Body>

<_Para_Body/>

<_Para_Body/>

<_Para_Body>Comment Expiration Date: N/A</_Para_Body>

<_Para_Body/>

<_Para_Body>Distribution: RapidIO TA Technical Working Group members</_Para_Body>

<_Para_Body/>

<_ChpTitle>   </_ChpTitle>

<_ChpTitle>   Data Streaming Certification Checklist
<_Para_Body>This document contains the device inter-operability and certification checklists adhering to the RapidIO Interconnect Specification for devices supporting the RapidIO Interconnect Specification Part 10: Data Streaming Logical Specification,Revision 1.3.a. </_Para_Body>

<_Para_Body>Each checklist is contained within a table having 5 columns. The item number, ‘Item No.’ contains a number/letter combination which uniquely identifies the checklist item. A text description of the aspect of the RapidIO specification checked is kept in the ‘Compliance Item’ column. A reference to the specific section of the specification which contains the requirement occurs in the ‘Specification Reference’ column. The ‘Device Class’ column contains the list of device classes, as defined in the multicast extensions specification. </_Para_Body>

<_Para_Body>The last column, ‘Inter-operability Item’, requires further explanation. This document defines three levels to which devices can be considered to meet the RapidIO specification. Inter-operability is the least stringent, requiring only that vendors demonstrate in some fashion that the functionality identified in the ‘Inter-operability Item’ column with the word ‘Inter-op’ can be made to work between two devices. An ‘Inter-op’ function does not need to be precisely compliant to the specification. Only those items marked as ‘Inter-op’ are required to claim interoperability. The next level, compliance, requires that all items in the checklist be demonstrated by the vendor, using a vendor developed test suite. The last level, certification, requires that all items in the checklist be demonstrated using a standard test suite.</_Para_Body>

<_Para_Body>Some parts of the specification are optional, but still require check list items to be assigned to them. Those checklist items which pertain to optional portions of the specification are highlighted with a grey background. </_Para_Body>

<_Para_Body>The data streaming inter-operability and certification checklist is broken down into sub-lists.</_Para_Body>

<_Heading2>1  Behavioral Certification List
<_Para_Body>This section specifies general requirements for a compliant device which supports data streaming functionality. </_Para_Body>

<_Para_Body/>

<_Fig-TB_holder>
<Table>
<TableTitle>
<TR>
<TH>
<_TBTitle>Table 1. Data Streaming Behavior Certification List</_TBTitle>
</TH>
</TR>
</TableTitle>

<TableHead>
<TR>
<TH>
<_TBHead_C>Item no.</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Compliance item</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Specification reference</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Device Class</_TBHead_C>

<_TBHead_C></_TBHead_C>
</TH>

<TH>
<_TBHead_C>Inter-op Item</_TBHead_C>
</TH>
</TR>
</TableHead>

<TableBody>
<TR>
<TD>
<_TBnum>1. </_TBnum>
</TD>

<TD>
<_TBItem_L>A virtual stream identifier (VSID), consisting of a source or destination ID, class of service, and streamID, uniquely identifies a stream of PDUs within a RapidIO system that supports data streaming.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->2. </_TBnum->
</TD>

<TD>
<_TBItem_L>Transactions within a transaction request flow (same source identifier, same destination identifier, same flowID, same PDU) shall be delivered to the logical layer of the destination in the same order that they were issued by the logical layer of the source.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 3.2.3</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->3. </_TBnum->
</TD>

<TD>
<_TBItem_L>A transaction of a higher priority transaction request flow that was issued by the logical layer of the source before a transaction of a lower priority transaction request flow shall be delivered to the logical layer of the destination before the lower priority transaction.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 2.4</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->4. </_TBnum->
</TD>

<TD>
<_TBItem_L>Request transactions that have different sources (different source identifiers) or different destinations (different destination identifiers) or different virtual channels are unordered with respect to each other.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 2.4</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->5. </_TBnum->
</TD>

<TD>
<_TBItem_L>Request transactions in a transaction request flow shall be completed at the logical layer of the destination in the same order that the transactions were delivered to the logical layer of the destination.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 2.4</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->6. </_TBnum->
</TD>

<TD>
<_TBItem_L>A stream of PDU’s is transmitted one PDU at a time to preserve PDU ordering.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.3</_TBItem_L>

<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->7. </_TBnum->
</TD>

<TD>
<_TBItem_L>Maximum size of a PDU that an endpoint can accept is specified in the Data Streaming Information CAR</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
Part 10, Sec. 5.4.3</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->8. </_TBnum->
</TD>

<TD>
<_TBItem_L>A PDU of less than or equal to the MTU size is carried in a single segment.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->9. </_TBnum->
</TD>

<TD>
<_TBItem_L>Continuation segments must be equal to the MTU size.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
Part 10, Sec. 3.2.5</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->10. </_TBnum->
</TD>

<TD>
<_TBItem_L>End segments must be equal to or less than the MTU size.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->11. </_TBnum->
</TD>

<TD>
<_TBItem_L>All segments of a PDU must have the same flowID and class of service value.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->12. </_TBnum->
</TD>

<TD>
<_TBItem_L>When a segment with a start bit is received, a segmentation context associated with the virtual stream ID is opened.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
Part 10, Sec. 3.2.5</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->13. </_TBnum->
</TD>

<TD>
<_TBItem_L>Receipt of an end segment closes the segmentation context.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
Part 10, Sec. 3.2.5</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->14. </_TBnum->
</TD>

<TD>
<_TBItem_L>The stream and PDU associated with a segmentation context is not permitted to change during the time that the context is open.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->15. </_TBnum->
</TD>

<TD>
<_TBItem_L>The number of segmentation contexts that can be supported by an endpoint is supported by the Data Streaming Information CAR.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4
Part 10, Sec. 5.4.3</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->16. </_TBnum->
</TD>

<TD>
<_TBItem_L>The transmitter issues a start segment, followed by continuation segments, followed by an end segment, in the same order in which the data appears in the PDU.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->17. </_TBnum->
</TD>

<TD>
<_TBItem_L>Data payloads for start and end segments of less than the MTU size are padded to be a multiple of half words in size.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->18. </_TBnum->
</TD>

<TD>
<_TBItem_L>The PDU length field in the end segment header identifies the length of the data payload as well as the presence of pad bytes.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->19. </_TBnum->
</TD>

<TD>
<_TBItem_L>The COS field shall be used starting with the most significant bit to control the number of classes supported.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.3</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>
</TableBody>
</Table>
</_Fig-TB_holder>

<_Fig-TB_holder/>
</_Heading2>

<_Heading2>2  Segmentation Behavioral Certification List
<_Para_Body>This section specifies general requirements for a compliant device which supports segmentation of PDUs. </_Para_Body>

<_Para_Body/>

<_Fig-TB_holder>
<Table>
<TableTitle>
<TR>
<TH>
<_TBTitle>Table 2. Data Streaming Packet Behavior Certification List</_TBTitle>
</TH>
</TR>
</TableTitle>

<TableHead>
<TR>
<TH>
<_TBHead_C>Item no.</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Compliance item</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Specification reference</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Device Class</_TBHead_C>

<_TBHead_C></_TBHead_C>
</TH>

<TH>
<_TBHead_C>Inter-op Item</_TBHead_C>
</TH>
</TR>
</TableHead>

<TableBody>
<TR>
<TD>
<_TBnum>1. </_TBnum>
</TD>

<TD>
<_TBItem_L>Segments are filled with bytes from the PDU in the order showing in figure 3-3 and figure 3-4</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->2. </_TBnum->
</TD>

<TD>
<_TBItem_L>If the end of the PDU data is encountered, the start segment is identified as a single segment.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->3. </_TBnum->
</TD>

<TD>
<_TBItem_L>If the start segment reaches MTU size (and there is remaining PDU data), the start segment is encapsulated, and a continuation segment is opened.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->4. </_TBnum->
</TD>

<TD>
<_TBItem_L>If the source wishes to abort a PDU transmission, it sends an end segment with no data payload and the length field set to zero.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>
</TableBody>
</Table>
</_Fig-TB_holder>

<_Fig-TB_holder/>
</_Heading2>

<_Heading2>3  Reassembly Behavioral Certification List
<_Para_Body>This section specifies general requirements for a compliant device which supports reassembly of PDUs. </_Para_Body>

<_Para_Body/>

<_Fig-TB_holder>
<Table>
<TableTitle>
<TR>
<TH>
<_TBTitle>Table 3. Data Streaming Packet Behavior Certification List</_TBTitle>
</TH>
</TR>
</TableTitle>

<TableHead>
<TR>
<TH>
<_TBHead_C>Item no.</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Compliance item</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Specification reference</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Device Class</_TBHead_C>

<_TBHead_C></_TBHead_C>
</TH>

<TH>
<_TBHead_C>Inter-op Item</_TBHead_C>
</TH>
</TR>
</TableHead>

<TableBody>
<TR>
<TD>
<_TBnum>1. </_TBnum>
</TD>

<TD>
<_TBItem_L>The reassembly process transfers the entire payload into the reassembly buffer in order.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->2. </_TBnum->
</TD>

<TD>
<_TBItem_L>All data transferred to the reassembly buffer is counted for comparison to the length field.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->3. </_TBnum->
</TD>

<TD>
<_TBItem_L>If the packet is a single segment and the amount of payload data is greater than the MTU size, the segment is defective.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->4. </_TBnum->
</TD>

<TD>
<_TBItem_L>If the packet is a start segment and the payload data does not match the MTU size, the PDU is defective.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->5. </_TBnum->
</TD>

<TD>
<_TBItem_L>Reassembly continues with continuation packets. All continuation packets must match the MTU size or the PDU is defective. </_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->6. </_TBnum->
</TD>

<TD>
<_TBItem_L>The data from the end segment is transferred according to the data payload size.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->7. </_TBnum->
</TD>

<TD>
<_TBItem_L>The data payload size of the end segment must be less than or equal to the MTU size or the PDU is defective.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->8. </_TBnum->
</TD>

<TD>
<_TBItem_L>Once all data has been reassembled, the length provided by the end segment packet header is checked against the received data count. A mismatch indicates the PDU is defective.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->9. </_TBnum->
</TD>

<TD>
<_TBItem_L>Receiving a continuation or end segment on a closed context indicates a lost start segment and the PDU is defective.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->10. </_TBnum->
</TD>

<TD>
<_TBItem_L>Receiving a start or single segment on an open context indicates a lost end segment and the PDU is defective. The existing context is closed, and the new context is opened.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->11. </_TBnum->
</TD>

<TD>
<_TBItem_L>Detection of a defective PDU results in discarding the entire PDU.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->12. </_TBnum->
</TD>

<TD>
<_TBItem_L>Receiving an end segment with a length of 0 causes the entire PDU to be discarded.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>
</TableBody>
</Table>
</_Fig-TB_holder>

<_Fig-TB_holder/>
</_Heading2>

<_Heading2>4  Packet Format Certification List
<_Para_Body>This section describes requirements for packet formats. </_Para_Body>

<_Para_Body/>

<_Fig-TB_holder>
<Table>
<TableTitle>
<TR>
<TH>
<_TBTitle>Table 4. Data Streaming Packet Format Certification List</_TBTitle>
</TH>
</TR>
</TableTitle>

<TableHead>
<TR>
<TH>
<_TBHead_C>Item no.</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Compliance item</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Specification reference</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Device Class</_TBHead_C>

<_TBHead_C></_TBHead_C>
</TH>

<TH>
<_TBHead_C>Inter-op Item</_TBHead_C>
</TH>
</TR>
</TableHead>

<TableBody>
<TR>
<TD>
<_TBnum>1. </_TBnum>
</TD>

<TD>
<_TBItem_L>Data payload length is a multiple of half-words</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->2. </_TBnum->
</TD>

<TD>
<_TBItem_L>Odd number of bytes is padded to a multiple of half-words, and indicated by setting the PAD bit.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->3. </_TBnum->
</TD>

<TD>
<_TBItem_L>The start bit is set if and only if the packet is the first packet in a new PDU being transferred.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->4. </_TBnum->
</TD>

<TD>
<_TBItem_L>The end bit is set if and only if the packet is the last packet in the PDU being transferred.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->5. </_TBnum->
</TD>

<TD>
<_TBItem_L>The ‘O’ bit is set if the data payload has an odd number of half-words</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 3.2.4</_TBItem_L>

<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->6. </_TBnum->
</TD>

<TD>
<_TBItem_L>The length field is encoded as per Part 10, Table 4-1</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->7. </_TBnum->
</TD>

<TD>
<_TBItem_L>Half word/pad byte combinations are encoded as described in Part 10, Table 4-2</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->8. </_TBnum->
</TD>

<TD>
<_TBItem_L>A packet with the ‘S’ bit set has a packet header, as per Part 10, Figure 4-1 and Part 10, Figure 4-2.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->9. </_TBnum->
</TD>

<TD>
<_TBItem_L>A packet with the ‘S’ bit cleared and the ‘E’ bit set has an end-segment packet header, as per Part 10, Figure 4-4.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBnum->10. </_TBnum->
</TD>

<TD>
<_TBItem_L>A packet with the ‘S’ bit clear and the ‘E’ bit clear has a continuation-segment packet header, as per Part 10, Figure 4-3.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 4.2</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>
</TableBody>
</Table>
</_Fig-TB_holder>
</_Heading2>

<_Heading2>5  Data Streaming Register Certification List
<_Para_Body>This section describes requirements for data streaming registers. </_Para_Body>

<_Para_Body/>

<_Fig-TB_holder>
<Table>
<TableTitle>
<TR>
<TH>
<_TBTitle>Table 5. Data Streaming Registers Certification List</_TBTitle>
</TH>
</TR>
</TableTitle>

<TableHead>
<TR>
<TH>
<_TBHead_C>Item no.</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Compliance item</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Specification reference</_TBHead_C>
</TH>

<TH>
<_TBHead_C>Device Class</_TBHead_C>

<_TBHead_C></_TBHead_C>
</TH>

<TH>
<_TBHead_C>Inter-op Item</_TBHead_C>
</TH>
</TR>
</TableHead>

<TableBody>
<TR>
<TD>
<_TBnum>1. </_TBnum>
</TD>

<TD>
<_TBItem_L>If bit 13 of the Source Operations CAR is set, the device can originate data streaming packets.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.1</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBnum->2. </_TBnum->
</TD>

<TD>
<_TBItem_L>If bit 13 of the Destination Operations CAR is set, the device can receive data streaming packets.</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.2</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBnum->3. </_TBnum->
</TD>

<TD>
<_TBItem_L>The Data Streaming Information CAR conforms to the following requirements:</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.3</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 3A: MaxPDU describes the maximum PDU size in bytes supported by the destination end point.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.3</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 3B: MaxPDU is encoded as per Part 10, Table 5-5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.3</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 3C: The SegSupport field indicates the maximum number of segmentation contexts supported by the destination endpoint.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.3</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 3D: The Data Streaming Information CAR is only defined when bit 13 is set in the Destination Operations CAR.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.3</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 3E: SegSupport is encoded as per Part 10, Table 5-5</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.4.3</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBnum->4. </_TBnum->
</TD>

<TD>
<_TBItem_L>Data Streaming Logical Layer Control CSR</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C>Interop</_TBItem_C>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 4A: The Data Streaming Logical Layer Control CSR is only defined when bit 13 is set in the Source Operations CAR.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 4B: MTU field determines the data payload size for packets of an encapsulated PDU originated by the endpoint. </_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 4C: MTU field is encoded as defined by Part 10, Table 5-6.</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 4D: Changing the MTU field results in a change in the data payload size of the PDU’s being transferred.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>

<TR>
<TD>
<_TBItem_L>ITEM 4E: Endpoint must support the entire range of MTU values.</_TBItem_L>
</TD>

<TD>
<_TBItem_L>Part 10, Sec. 5.5.1</_TBItem_L>

<_TBItem_L/>
</TD>

<TD>
<_TBItem_C>Generic</_TBItem_C>
</TD>

<TD>
<_TBItem_C/>
</TD>
</TR>
</TableBody>
</Table>
</_Fig-TB_holder>

<_Fig-TB_holder/>
</_Heading2>
</_ChpTitle>
</TextSection>
</Article_A>
</Document>
</TaggedPDF-doc>
